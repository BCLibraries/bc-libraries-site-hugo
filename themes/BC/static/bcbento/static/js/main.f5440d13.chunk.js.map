{"version":3,"sources":["FixBrokenImage.jsx","slots/PrimoRecordLink.js","slots/video/OnlineVideo.jsx","slots/availability/NotAvailableMessage.js","slots/availability/CheckHoldingsMessage.jsx","slots/availability/Availability.jsx","slots/availability/AvailabilityContainer.jsx","slots/video/PhysicalVideo.jsx","slots/video/VideoResult.jsx","slots/online/OnlineResult.jsx","slots/SeeAllLink.jsx","slots/ResultsBox.js","slots/LoadingBox.js","slots/ErrorBox.js","slots/NoResultsBox.js","slots/ResultList.js","Logger.js","slots/ResultsBoxContainer.jsx","slots/cleanGraphQLInput.js","slots/online/OnlineQuery.js","slots/online/OnlineResults.jsx","slots/articles/BrowzineBadge.jsx","slots/articles/ArticleResult.jsx","slots/articles/ArticlesQuery.js","slots/articles/ArticleResults.jsx","slots/faq/FaqResult.jsx","slots/faq/FAQQuery.js","slots/faq/FaqResults.jsx","slots/librarians/LibrarianResult.jsx","slots/librarians/LibrariansQuery.js","slots/librarians/LibrarianResults.jsx","slots/video/VideosQuery.js","slots/video/VideoResults.jsx","slots/website/WebsiteResult.jsx","slots/website/WebsiteQuery.js","slots/website/WebsiteResults.jsx","slots/bestbets/FullTextItem.js","slots/bestbets/CrossrefFulltextBuilder.js","slots/bestbets/LocalBestBet.js","slots/bestbets/decideBestBet.js","slots/bestbets/PCIFulltextBuilder.js","slots/bestbets/LocalBestBetResult.jsx","slots/bestbets/FullTextResult.jsx","slots/bestbets/BestBetLookup.jsx","SkipToLink.jsx","SkipToLinkBar.jsx","ApolloClientFactory.js","slots/SearchComponentErrorBoundary.jsx","slots/books/BookResult.jsx","slots/books/BooksAndMoreQuery.js","slots/books/BookResults.jsx","slots/CatalogToggle.jsx","useQueryString.js","SearchResults.jsx","slots/BlankSearchScreen.jsx","App.jsx","searchbox/SearchBox.jsx","searchbox/LargeSearchBox.jsx","searchbox/SearchBoxContainer.jsx","AppContainer.jsx","serviceWorker.js","index.js"],"names":["FixBrokenImage","fallbackImage","imgClass","event","target","onerror","src","className","PrimoRecordLink","item","isPci","tab","scope","context","concat","id","blankScreen","OnlineVideo","_ref","video","screen","screenCap","screenClass","watchLink","mms","recordLink","react_default","a","createElement","href","alt","title","onError","date","creator","contributors","creatorName","NotAvailableMessage","checkHoldingsMessage","library","location","Availability","firstHolding","inOtherLibraries","link","libraryDisplay","callNumber","locationValues","ONL","weight","Stacks","1st Floor Microfilm","TML","BAPST","BURNS","ERC","SWK","LAW","GEO","RES_SHARE","DEV","INT","getLocationScore","libraryCode","sortLibraries","holdingA","holdingB","locationCode","AvailabilityContainer","holdings","holding","availableItems","allItems","i","length","items","filter","availability","Array","prototype","push","apply","sort","buildHoldings","availabilityStatus","CheckHoldingsMessage","locationDisplay","availability_Availability","availability_NotAvailableMessage","defaultDVDIcon","dvdClass","defaultIcon","iconClass","coverClass","coverImages","onImageLoad","naturalHeight","PhysicalVideo","format","includes","cover","String","url","getCover","altText","aria-hidden","onLoad","availability_AvailabilityContainer","VideoResult","inCatalogResult","isElectronic","video_OnlineVideo","video_PhysicalVideo","resultClass","OnlineResult","type","video_VideoResult","publisher","getItLink","coverImage","SeeAllLink","total","found","term","toLocaleString","ResultsBox","heading","seeAll","searchUrl","children","aria-live","LoadingBox","slots_ResultsBox","ErrorBox","NoResultsBox","content","ResultList","docs","classPrefix","renderResult","map","events","totalLogScore","flushOnScore","addEntry","level","message","score","arguments","undefined","flush","window","addEventListener","Logger","emergency","alert","critical","error","warning","info","debug","data","JSON","stringify","navigator","sendBeacon","process","sendEntries","ResultsBoxContainer","client","query","_ref$noResultsContent","noResultsContent","handleFetch","modifier","_useQuery","useQuery","gql","loading","slots_LoadingBox","slots_ErrorBox","object","slots_NoResultsBox","results","passStateUp","slots_SeeAllLink","slots_ResultList","err","cleanGraphQLInput","string","replace","OnlineQuery","searchString","Object","classCallCheck","this","_templateObject","forOnline","noResultContent","encodedSearchString","encodeURIComponent","worldCatSearchURL","OnlineResults","toggle","slots_ResultsBoxContainer","doc","online_OnlineResult","key","BrowzineBadge","libkeyAvailability","fullTextFile","rel","width","height","browzineWebLink","ArticleResult","article","part_of","journal_title","parts","split","formatPartOf","isPartOf","journalTitle","articles_BrowzineBadge","ArticlesQuery","ArticlesQuery_templateObject","forArticles","ArticleResults","articles_ArticleResult","FaqResult","result","question","FAQQuery","FAQQuery_templateObject","forFAQ","FaqResults","faq_FaqResult","LibrarianResult","librarian","img_url","image","name","display_subjects","subjects","join","LibrariansQuery","LibrariansQuery_templateObject","forLibrarians","LibrarianResults","librarians_LibrarianResult","VideosQuery","VideosQuery_templateObject","forVideos","VideoResults","getHighlight","hit","__html","highlight","WebsiteResult","guideUrl","guideTitle","dangerouslySetInnerHTML","WebsiteQuery","WebsiteQuery_templateObject","forWebsite","WebsiteResults","website_WebsiteResult","FullTextItem","source","doi","authors","containerTitle","issueInfo","months","buildFulltextFromCrossref","crossrefData","containerTitles","fullText","titles","DOI","auth","familyName","givenName","buildAuthors","publishedPrintDate","buildDate","publishedOnlineDate","volume","issue","page","buildIssue","dateData","datePartCount","year","month","LocalBestBet","bestBetResult","displayText","decideBestBet","bestBet","articles","fullTextDOI","articleRecords","isReview","toLowerCase","forEach","articleDOI","dOI","doiIsReview","crossRefData","fullTextItem","libKey","libKeyData","contentLocation","articleHits","longEnough","matchesSearchString","trim","hasFullText","findArticleMatches","fulltext","buildFulltextFromPCI","LocalBestBetResult","onClick","FullTextResult","originalLength","slice","authorLine","citationLine","BestBetLookup","articleResults","BestBetLookup_templateObject","forBestBets","bestbets_LocalBestBetResult","bestbets_FullTextResult","SkipToLink","label","current","scrollIntoView","behavior","block","SkipToLinkBar","booksDiv","articlesDiv","faqDiv","librariansDiv","videoDiv","websiteDiv","src_SkipToLink","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","cache","InMemoryCache","apolloClient","ApolloClient","uri","HttpLink","SearchComponentErrorBoundary","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","errorInfo","console","componentStack","React","Component","BookResult","isPhysical","physicalAvailability","BooksAndMoreQuery","BooksAndMoreQuery_templateObject","forBooksAndMore","BookResults","books_BookResult","CatalogToggle","isChecked","handleToggle","_useState","useState","_useState2","slicedToArray","isDisplayed","setIsDisplayed","explanationClass","checked","onChange","parseQueryString","queryHash","parameters","keys","queryStringItems","search","_queryStringItems$i$s","_queryStringItems$i$s2","val","replaceState","queryStringParts","currentKey","newURL","protocol","host","pathname","history","path","useQueryString","initialValue","queryStringHash","indexOf","decodeURIComponent","getQueryStringValue","value","setValue","useCallback","newValue","setQueryStringValue","index","splice","deleteQueryStringValue","SearchResults","setArticleResults","_useQueryString","_useQueryString2","isOnlineOnlyString","onSetIsOnlineOnly","isOnlineOnlyBoolean","refList","useRef","resultBoxParams","catalogToggle","slots_CatalogToggle","slots_SearchComponentErrorBoundary","bestbets_BestBetLookup","assign","ref","online_OnlineResults","books_BookResults","articles_ArticleResults","faq_FaqResults","librarians_LibrarianResults","video_VideoResults","website_WebsiteResults","BlankSearchScreen","MemoizedResults","memo","src_SearchResults","App","searchBox","method","action","slots_BlankSearchScreen","SearchBox","searchBoxId","suggestions","fetchSuggestions","clearSuggestions","onSuggestionSelected","inputProps","htmlFor","dist_default","getSuggestionValue","suggestion","onSuggestionsFetchRequested","onSuggestionsClearRequested","renderSuggestion","LargeSearchBox","onTyping","setHasFocus","onFocus","selectionStart","onBlur","autoFocus","minTypeaheadLength","minLargeSearchBoxLength","suggestionValue","suggestionIndex","sectionIndex","SearchBoxContainer","_ref2","handleTyping","onSubmit","setSuggestions","_useState3","_useState4","_useState5","_useState6","hasFocus","useTextArea","useLarge","_ref3","_fetchSuggestions","asyncToGenerator","regenerator_default","mark","_callee","_ref4","reason","json","response","wrap","_context","prev","next","abrupt","fetch","sent","t0","stop","smallBoxProps","_x","placeholder","largeBoxProps","searchbox_LargeSearchBox","searchbox_SearchBox","CSSTransition","in","timeout","classNames","setPageTitle","document","AppContainer","initialSearchString","RegExp","exec","getUrlParameter","setSearchString","inputText","setInputText","searchbox_SearchBoxContainer","handleSubmit","src_App","Boolean","hostname","match","ReactDOM","render","src_AppContainer","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"2LAUeA,MAVf,SAAwBC,EAAeC,GACnC,OAAO,SAAUC,GACbA,EAAMC,OAAOC,QAAU,KACvBF,EAAMC,OAAOE,IAAML,EACfC,IACAC,EAAMC,OAAOG,UAAYL,KCErC,SAASM,EAAgBC,EAAMC,GACtBA,IACDA,GAAQ,GAGZ,IAAMC,EAAMD,EAAQ,WAAa,WAC3BE,EAAQF,EAAQ,MAAQ,MACxBG,EAAUH,EAAQ,KAAO,IAE/B,mFAAAI,OAAoFL,EAAKM,GAAzF,aAAAD,OAAuGD,EAAvG,SAAAC,OAAsHH,EAAtH,kBAAAG,OAA0IF,EAA1I,6BCZJ,IAAMI,EAAc,iDAuCLC,MArCf,SAAAC,GAA8B,IAARC,EAAQD,EAARC,MACZC,EAASD,EAAME,UAAYF,EAAME,UAAYL,EAC7CM,EAAcH,EAAME,UAAY,iCAAmC,mCACnEE,EAAS,0CAAAT,OAA6CK,EAAMK,KAC5DC,EAAajB,EAAgBW,GAEnC,OAAOO,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,gBAClBmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMN,GACLG,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,uBACXmB,EAAAC,EAAAC,cAAA,OAAKtB,IAAKc,EAAQU,IAAG,SAAAhB,OAAWK,EAAMY,MAAjB,WAAiCC,QAAShC,EAAegB,GAAcT,UAAWe,MAI/GI,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,6CACVmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMJ,EAAYlB,UAAU,uBAAuBY,EAAMY,QAG/DZ,EAAMc,KAEPP,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,yBAMvB,SAAqBY,GACjB,OAAIA,EAAMe,QACCf,EAAMe,QAGbf,EAAMgB,aAAa,GACZhB,EAAMgB,aAAa,GAGvB,GAfqCC,CAAYjB,IAEpDO,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,4BAA2BmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMN,GAAT,mBCTnCc,MARf,SAAAnB,GAAqC,IAAPT,EAAOS,EAAPT,KAC1B,OACIiB,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,oCAAf,kBACmBmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMrB,EAAgBC,IAAzB,0BADnB,MCGO6B,MAZf,SAAApB,GAAyD,IAA1BT,EAA0BS,EAA1BT,KAAM8B,EAAoBrB,EAApBqB,QAASC,EAAWtB,EAAXsB,SAC1C,OACId,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,uCACXmB,EAAAC,EAAAC,cAAA,QAAMrB,UAAU,2BACZmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMrB,EAAgBC,GAAM,IAA/B,4BAEJiB,EAAAC,EAAAC,cAAA,QAAMrB,UAAU,sBAAsBgC,GACtCb,EAAAC,EAAAC,cAAA,QAAMrB,UAAU,uBAAuBiC,GAL3C,MCqBOC,MAhBf,SAAAvB,GAAwD,IAAjCwB,EAAiCxB,EAAjCwB,aAAcC,EAAmBzB,EAAnByB,iBACjC,OACIjB,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,wBACVmB,EAAAC,EAAAC,cAAA,MAAIrB,UAAS,kCACTmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMa,EAAaE,MAClBlB,EAAAC,EAAAC,cAAA,QAAMrB,UAAU,sBAAhB,WAA8CmC,EAAaG,gBAC3DnB,EAAAC,EAAAC,cAAA,QAAMrB,UAAU,uBAAuBmC,EAAaF,UACpDd,EAAAC,EAAAC,cAAA,QAAMrB,UAAU,qBAAhB,IAAsCmC,EAAaI,WAAnD,KACApB,EAAAC,EAAAC,cAAA,QAAMrB,UAAU,8BAA8BoC,GAAoB,4BC8BtF,IAAMI,EAAiB,CACnBC,IAAO,CACHC,QAAS,EACTC,QAAW,EACXC,sBAAuB,GAE3BC,IAAO,CACHH,OAAQ,GAEZI,MAAS,CACLJ,OAAQ,GAEZK,MAAS,CACLL,OAAQ,GAEZM,IAAO,CACHN,OAAQ,GAEZO,IAAO,CACHP,OAAQ,GAEZQ,IAAO,CACHR,OAAQ,GAEZS,IAAO,CACHT,OAAQ,GAEZU,UAAa,CACTV,OAAQ,GAEZW,IAAO,CACHX,OAAQ,GAEZY,IAAO,CACHZ,OAAQ,IAOhB,SAASa,EAAiBC,EAAavB,GACnC,IAAMD,EAAUQ,EAAegB,GAC/B,OAAOxB,EAAQC,GAAYD,EAAQC,GAAYD,EAAQU,OAASV,EAAQU,OAM5E,SAASe,EAAcC,EAAUC,GAC7B,OAAOJ,EAAiBG,EAAS1B,QAAS0B,EAASE,cAAgBL,EAAiBI,EAAS3B,QAAS2B,EAASC,cAmBpGC,MAzGf,SAAAlD,GAAuC,IAAPT,EAAOS,EAAPT,KAGtB4D,EAyFV,SAAuB5D,GAInB,IAHA,IACI6D,EAASC,EADPC,EAAW,GAGRC,EAAI,EAAGA,EAAIhE,EAAK4D,SAASK,OAAQD,IACtCH,EAAU7D,EAAK4D,SAASI,GACxBF,EAAiBD,EAAQK,MAAMC,OAAO,SAAAnE,GAAI,MAA0B,cAAtBA,EAAKoE,eACnDC,MAAMC,UAAUC,KAAKC,MAAMT,EAAUD,GAGzC,OAAOC,EAASU,KAAKlB,GAnGJmB,CAAc1E,GACzBiC,EAAe2B,EAASK,OAAS,EAAIL,EAAS,GAAK,KAEzD,OAAI5D,EAAK4D,SAAS,IAA8C,mBAAxC5D,EAAK4D,SAAS,GAAGe,mBAC9B1D,EAAAC,EAAAC,cAACyD,EAAD,CAAsB5E,KAAMA,EAAM8B,QAAS9B,EAAK4D,SAAS,GAAGN,YAAavB,SAAU/B,EAAK4D,SAAS,GAAGiB,kBACpG5C,EACAhB,EAAAC,EAAAC,cAAC2D,EAAD,CAAc7C,aAAcA,EAAcC,iBAAkB0B,EAASK,OAAS,IAE9EhD,EAAAC,EAAAC,cAAC4D,EAAD,CAAqB/E,KAAMA,KCjBpCgF,EAAiB,mDAGnBC,EAAW,4BAEXC,EANmB,+CAOnBC,EAJa,4BA4CjB,SAASC,EAAW1E,GAChB,OAAQA,EAAM2E,YAAYpB,OAAS,GAAKvD,EAAM2E,YAAY,GAAM,4BAAzD,gDAAAhF,OAAuI8E,GAuBlJ,SAASG,EAAY5F,GACkB,IAA/BA,EAAMC,OAAO4F,gBACb7F,EAAMC,OAAOG,UAAb,iCAAAO,OAA0D8E,GAC1DzF,EAAMC,OAAOE,IAAMqF,GAIZM,MArEf,SAAA/E,GAAgC,IAARC,EAAQD,EAARC,MAChBA,EAAM+E,OAAOC,SAAS,UACtBR,EAAcF,EACdG,EAAYF,GAGhB,IAAMU,EAoCV,SAAkBjF,GACd,OAAIA,EAAM2E,YAAYpB,OAAS,GAAKvD,EAAM2E,YAAY,GAC3CO,OAAOlF,EAAM2E,YAAY,GAAGQ,KAGhCX,EAzCOY,CAASpF,GAEjBqF,EAAO,sBAAA1F,OAAyBK,EAAMY,OAEtCN,EAAajB,EAAgBW,GAAO,GAE1C,OAAOO,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,kBAClBmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMJ,EAAYgF,cAAY,QAC7B/E,EAAAC,EAAAC,cAAA,OAAKtB,IAAK8F,EACLM,OAAQX,EACR/D,QAAShC,EAAe2F,EAAD,sCAAA7E,OAAoD8E,IAC3E9D,IAAK0E,EACLjG,UAAWsF,EAAW1E,MAG/BO,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,+CACVmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMJ,EAAYlB,UAAU,yBAC1BY,EAAMY,QAIdZ,EAAMc,KAEPP,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,2BAqBvB,SAAqBY,GACjB,OAAIA,EAAMe,QACCf,EAAMe,QAGbf,EAAMgB,aAAa,GACZhB,EAAMgB,aAAa,GAGvB,GA9BuCC,CAAYjB,IAErDA,EAAM+E,OAEPxE,EAAAC,EAAAC,cAAC+E,EAAD,CAAuBlG,KAAMU,MClCtByF,MATf,SAAA1F,GAA8C,IAAxBT,EAAwBS,EAAxBT,KAAMoG,EAAkB3F,EAAlB2F,gBAClB1F,EAAQV,EAAKqG,aAAepF,EAAAC,EAAAC,cAACmF,EAAD,CAAa5F,MAAOV,IAAUiB,EAAAC,EAAAC,cAACoF,EAAD,CAAe7F,MAAOV,IAChFwG,EAAcJ,EAAkB,sBAAwB,+BAE9D,OAAOnF,EAAAC,EAAAC,cAAA,MAAIrB,UAAW0G,GACjB9F,ICoDM+F,MAzDf,SAAAhG,GAA8B,IAAPT,EAAOS,EAAPT,KACnB,GAAIA,EAAKqG,cAA8B,UAAdrG,EAAK0G,KAC1B,OAAOzF,EAAAC,EAAAC,cAACwF,EAAD,CAAa3G,KAAMA,EAAMoG,iBAAiB,IAGrD,IAAMjE,EAAOpC,EAAgBC,GAE7B,OAAOiB,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,6BAEjBmB,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,cACXmB,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,oDACVmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMe,EAAMrC,UAAU,8BACpBE,EAAKsB,QAIdL,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,gCAgB3B,SAAqBE,GACjB,OAAIA,EAAKyB,QACEzB,EAAKyB,QAGZzB,EAAK0B,aAAa,GACX1B,EAAK0B,aAAa,GAGtB,GAzBgDC,CAAY3B,IAE3DiB,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,kCACVE,EAAK4G,UADV,IACsB5G,EAAKwB,MAG3BP,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,6BAA6BE,EAAK0G,MAEhD1G,EAAKqG,cAoBlB,SAAmBrG,GACf,OAAOiB,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,8BAA6BmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMrB,EAAgBC,IAAzB,gBArBrB6G,CAAU7G,IAInCA,EAAKqF,YAAYpB,OAAS,GAoBnC,SAAoBjE,GAChB,IAAM+F,EAAO,sBAAA1F,OAAyBL,EAAKsB,OAC3C,OAAOL,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,eAClBmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMrB,EAAgBC,GAAOgG,cAAY,QACxC/E,EAAAC,EAAAC,cAAA,OAAKtB,IAAKG,EAAKqF,YAAY,GAAGQ,IAAKxE,IAAK0E,EAASjG,UAAU,kBAxB/BgH,CAAW9G,aCRpC+G,MAtBf,SAAAtG,GAA+C,IAA1BuG,EAA0BvG,EAA1BuG,MAAOC,EAAmBxG,EAAnBwG,MAAOC,EAAYzG,EAAZyG,KAAMrB,EAAMpF,EAANoF,IAKrC,OAJImB,IACAA,EAAQ,GAGRA,GAASC,EACFhG,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,wBAGrBoH,EAODjG,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,gBACXmB,EAAAC,EAAAC,cAAA,QAAMrB,UAAU,wBAAhB,KADJ,IACoDmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMyE,GAAT,WAAuBmB,EAAMG,iBAA7B,IAAgDD,IAP7FjG,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,uBAClBmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMyE,GAAT,aCUGuB,MAZf,SAAA3G,GAA4D,IAAvC4G,EAAuC5G,EAAvC4G,QAAoBC,GAAmB7G,EAA9B8G,UAA8B9G,EAAnB6G,QAAQE,EAAW/G,EAAX+G,SAC7C,OACIvG,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,oBAAoB2H,YAAU,UACzCxG,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,iCACXmB,EAAAC,EAAAC,cAAA,UAAKkG,GACJC,GAEJE,ICAEE,MARf,SAAAjH,GAA+B,IAAV4G,EAAU5G,EAAV4G,QACjB,OACIpG,EAAAC,EAAAC,cAACwG,EAAD,CAAYN,QAASA,GACjBpG,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,qCAAf,gBCKG8H,MARf,SAAAnH,GAA6B,IAAV4G,EAAU5G,EAAV4G,QACf,OACIpG,EAAAC,EAAAC,cAACwG,EAAD,CAAYN,QAASA,GACjBpG,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,mCAAf,gDCOG+H,MATf,SAAApH,GAA0C,IAAnB4G,EAAmB5G,EAAnB4G,QAASS,EAAUrH,EAAVqH,QAC5B,OACI7G,EAAAC,EAAAC,cAACwG,EAAD,CAAYN,QAASA,GACjBpG,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,iCAAiCgI,KCK7CC,MARf,SAAAtH,GAAuD,IAAlCuH,EAAkCvH,EAAlCuH,KAAMC,EAA4BxH,EAA5BwH,YAAaC,EAAezH,EAAfyH,aACpC,OAAOjH,EAAAC,EAAAC,cAAA,OAAKrB,UAAS,GAAAO,OAAK4H,EAAL,iBACjBhH,EAAAC,EAAAC,cAAA,MAAIrB,UAAS,GAAAO,OAAK4H,EAAL,kBACRD,EAAKG,IAAID,MCFhBE,EAAS,GAOXC,EAAgB,EAOdC,EAAe,GAYrB,SAASC,EAASC,EAAOC,GAAoB,IAAXC,EAAWC,UAAA1E,OAAA,QAAA2E,IAAAD,UAAA,GAAAA,UAAA,GAAH,EAGtCP,EAAO7D,KAAK,CAACiE,QAAOC,aAGpBJ,GAAiBK,GACGJ,GAChBO,IAjBRC,OAAOC,iBAAiB,SAAUF,GAAO,GAqBzC,IAAMG,EAAS,CAIXC,UAAW,SAAAR,GACPF,EAAS,YAAaE,EAAS,KAC/BI,KAMJK,MAAO,SAAAT,GACHF,EAAS,QAASE,EAAS,KAM/BU,SAAU,SAAAV,GACNF,EAAS,WAAYE,EAAS,IAC9BI,KAMJO,MAAO,SAAAX,GACHF,EAAS,QAASE,EAAS,IAM/BY,QAAS,SAAAZ,GACLF,EAAS,UAAWE,EAAS,IAMjCa,KAAM,SAAAb,GACFF,EAAS,OAAQE,IAMrBc,MAAO,SAAAd,GACHF,EAAS,QAASE,KAY1B,SAASI,KART,WACI,IAAMW,EAAOC,KAAKC,UAAU,CACxBtB,OAAQA,IAEZuB,UAAUC,WAAWC,4CAAwCL,GAK7DM,GACA1B,EAAOnE,OAAS,EAChBoE,EAAgB,ECzCL0B,MAnDf,SAAAtJ,GAAgL,IAAlJuJ,EAAkJvJ,EAAlJuJ,OAAQ3C,EAA0I5G,EAA1I4G,QAASH,EAAiIzG,EAAjIyG,KAAMe,EAA2HxH,EAA3HwH,YAAaC,EAA8GzH,EAA9GyH,aAAc+B,EAAgGxJ,EAAhGwJ,MAAgGC,EAAAzJ,EAAzF0J,wBAAyF,IAAAD,EAAtE,6CAAsEA,EAAxBE,EAAwB3J,EAAxB2J,YAAaC,EAAW5J,EAAX4J,SAEjK,IAAI,IAAAC,EAG+BC,YAASN,EAAMO,IAAK,CAACR,WAA7CS,EAHPH,EAGOG,QAASrB,EAHhBkB,EAGgBlB,MAAOI,EAHvBc,EAGuBd,KAEvB,GAAIiB,EACA,OAAOxJ,EAAAC,EAAAC,cAACuJ,EAAD,CAAYrD,QAASA,IAGhC,GAAI+B,EACA,OAAOnI,EAAAC,EAAAC,cAACwJ,EAAD,CAAUtD,QAASA,IAI9B,GAAiC,IAA7BmC,EAAKS,EAAMW,QAAQ5D,MACnB,OAAO/F,EAAAC,EAAAC,cAAC0J,EAAD,CAAcxD,QAASA,EAASS,QAASqC,IAIpD,IAAMnC,EAAOwB,EAAKS,EAAMW,QAAQ5C,KAAOwB,EAAKS,EAAMW,QAAQ5C,KAAOwB,EAAKS,EAAMW,QAAQE,SAwB5F,SAAqBV,EAAapC,GAC1BoC,GACAA,EAAYpC,GAAc,IAzB1B+C,CAAYX,EAAapC,GACzB,IAAMT,EAAYiC,EAAKS,EAAMW,QAAQrD,UAC/BD,EAASrG,EAAAC,EAAAC,cAAC6J,EAAD,CAAY9D,KAAMA,EAAMF,MAAOwC,EAAKS,EAAMW,QAAQ5D,MAAOC,MAAOe,EAAK/D,OAAQ4B,IAAK0B,IAGjG,OAFAF,EAAUpG,EAAAC,EAAAC,cAAA,KAAGC,KAAMmG,GAAYF,GAG3BpG,EAAAC,EAAAC,cAACwG,EAAD,CAAYN,QAASA,EAASC,OAAQA,EAAQC,UAAWA,GACpD8C,EACDpJ,EAAAC,EAAAC,cAAC8J,EAAD,CAAYhD,YAAaA,EAAaD,KAAMA,EAAME,aAAcA,KAG1E,MAAOgD,GAEL,OADAlC,EAAOI,MAAP,4BAAA/I,OAAyC4J,EAAMO,MACxCvJ,EAAAC,EAAAC,cAACwJ,EAAD,CAAUtD,QAASA,qCCnDlC,SAAS8D,EAAkBC,GACvB,OAAOA,EAAOC,QAAQ,KAAM,OAAOA,QAAQ,QAAS,MAAMA,QAAQ,iBAAiB,oaCDjFC,EAIF,SAAAA,EAAYC,GAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAI,KAF3Bd,OAAS,eAGLc,KAAKlB,IAIb,SAAmBe,GACf,OAAOf,IAAPmB,IAEwBR,EAAkBI,IAP3BK,CAAUL,ICkB7B,SAASM,EAAgBN,GACrB,IAAMO,EAAsBC,mBAAmBR,GACzCS,EAAiB,+DAAA3L,OAAkEyL,GAEzF,OACI7K,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,0BACXmB,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,KAAGrB,UAAU,2CAAb,sBACuBmB,EAAAC,EAAAC,cAAA,KAAGC,KAAM4K,GAAT,YADvB,sCAOGC,MA7Bf,SAAAxL,GAAuD,IAA/B8K,EAA+B9K,EAA/B8K,aAAcvB,EAAiBvJ,EAAjBuJ,OAAQkC,EAASzL,EAATyL,OAC1C,OACIjL,EAAAC,EAAAC,cAACgL,EAAD,CACInC,OAAQA,EACR3C,QAAS,eACTY,YAAa,QACbf,KAAM,QACN+C,MAAO,IAAIqB,EAAYC,GACvBrD,aAAc,SAAAkE,GAAG,OAAInL,EAAAC,EAAAC,cAACkL,EAAD,CAAcrM,KAAMoM,EAAKE,IAAG,QAAAjM,OAAU+L,EAAI9L,OAC/D6J,iBAAkB0B,EAAgBN,GAClClB,SAAU6B,KCQPK,MAtBf,SAAA9L,GAA6C,IAArB+L,EAAqB/L,EAArB+L,mBACpB,OACIvL,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,kBACV0M,EAAmBC,cACpBxL,EAAAC,EAAAC,cAAA,KAAGC,KAAMoL,EAAmBC,aAAc3M,UAAU,+BAA+BH,OAAO,SAAS+M,IAAI,uBACnGzL,EAAAC,EAAAC,cAAA,OAAKtB,IAAI,kFAAkFC,UAAU,oBAAoBkG,cAAY,OAAO2G,MAAM,KAAKC,OAAO,KAAKvL,IAAI,KACvKJ,EAAAC,EAAAC,cAAA,QAAMrB,UAAU,0BAAhB,eACImB,EAAAC,EAAAC,cAAA,QAAMrB,UAAU,8BAAhB,YAKP0M,EAAmBK,iBACpB5L,EAAAC,EAAAC,cAAA,KAAGrB,UAAU,6BAA6BsB,KAAMoL,EAAmBK,gBAAkB7G,cAAY,OAAOrG,OAAO,SAAS+M,IAAI,uBACxHzL,EAAAC,EAAAC,cAAA,OAAKtB,IAAI,+EAA+EC,UAAU,qBAAqBkG,cAAY,OAAO2G,MAAM,KAAKC,OAAO,KAAKvL,IAAI,KACrKJ,EAAAC,EAAAC,cAAA,QAAMrB,UAAU,0BAAhB,0BCgBDgN,MArCf,SAAArM,GAAkC,IAAVsM,EAAUtM,EAAVsM,QACpB,OAAO9L,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,6BACjBmB,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,cACXmB,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,oDACVmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMrB,EAAgBgN,GAAS,GAAOjN,UAAU,6BAA6BH,OAAO,SAAS+M,IAAI,uBAC/FK,EAAQzL,QAIhByL,EAAQvL,KAETP,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,gCAAgCiN,EAAQtL,SACvDR,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,kCAW3B,SAAsBkN,EAASC,GAG3B,IAAMC,GAFNF,EAAUA,EAAQ/I,OAAS,EAAI+I,EAAQ,GAAK,IAEtBG,MAAMF,GAE5B,OAAKA,GAAkC,IAAjBC,EAAMjJ,OAIrBhD,EAAAC,EAAAC,cAAA,QAAMrB,UAAU,sCACdoN,EAAM,GAAGjM,EAAAC,EAAAC,cAAA,YAAO8L,GAAsBC,EAAM,IAJ1CjM,EAAAC,EAAAC,cAAA,YAAO6L,GAhBLI,CAAaL,EAAQM,SAAUN,EAAQO,eAG3CP,EAAQP,oBAAsBvL,EAAAC,EAAAC,cAACoM,EAAD,CAAef,mBAAoBO,EAAQP,2nBCjBhFgB,GAIF,SAAAA,EAAYjC,GAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8B,GAAA9B,KAF3Bd,OAAS,iBAGLc,KAAKlB,IASb,SAAqBe,GACjB,OAAOf,IAAPiD,IAE0BtC,EAAkBI,IAZ7BmC,CAAYnC,ICoBhBoC,OAdf,SAAAlN,GAA6D,IAApC8K,EAAoC9K,EAApC8K,aAAcvB,EAAsBvJ,EAAtBuJ,OAAQI,EAAc3J,EAAd2J,YAC3C,OACInJ,EAAAC,EAAAC,cAACgL,EAAD,CACInC,OAAQA,EACR3C,QAAS,WACTY,YAAa,WACbf,KAAM,WACN+C,MAAO,IAAIuD,GAAcjC,GACzBrD,aAAc,SAAAkE,GAAG,OAAInL,EAAAC,EAAAC,cAACyM,EAAD,CAAeb,QAASX,EAAKE,IAAG,WAAAjM,OAAa+L,EAAI9L,OACtE8J,YAAaA,KCjBVyD,OAJf,SAAApN,GAA6B,IAATqN,EAASrN,EAATqN,OAChB,OAAO7M,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,KAAM0M,EAAOjI,KAAMiI,EAAOC,wOCAtCC,GAIF,SAAAA,EAAYzC,GAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsC,GAAAtC,KAF3Bd,OAAS,YAGLc,KAAKlB,IASb,SAAgBe,GACZ,OAAOf,IAAPyD,KAEqB9C,EAAkBI,IAZxB2C,CAAO3C,ICkBX4C,OAbf,SAAA1N,GAA4C,IAAvB8K,EAAuB9K,EAAvB8K,aAAcvB,EAASvJ,EAATuJ,OAC/B,OACI/I,EAAAC,EAAAC,cAACgL,EAAD,CACInC,OAAQA,EACR3C,QAAS,MACTY,YAAa,MACbf,KAAM,UACN+C,MAAO,IAAI+D,GAASzC,GACpBrD,aAAc,SAAAkE,GAAG,OAAInL,EAAAC,EAAAC,cAACiN,GAAD,CAAWN,OAAQ1B,EAAKE,IAAG,UAAAjM,OAAY+L,EAAI9L,UCE7D+N,OArBf,SAAA5N,GAAsC,IAAZ6N,EAAY7N,EAAZ6N,UAChBzI,EAAG,8CAAAxF,OAAiDiO,EAAUhO,IAC9DiO,EAAO,KAAAlO,OAAQiO,EAAUE,OACzBnN,EAAG,cAAAhB,OAAiBiO,EAAUG,MAC9BC,EAAmBJ,EAAUK,SAASlK,OAAOmK,KAAK,MAGxD,OAAO3N,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,SACjBmB,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,cACXmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMyE,GAAK5E,EAAAC,EAAAC,cAAA,OAAKtB,IAAK0O,EAASlN,IAAKA,MAG1CJ,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,cACXmB,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,iBACVmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMyE,GAAMyI,EAAUG,OAE7BxN,EAAAC,EAAAC,cAAA,KAAGrB,UAAU,qBAAqB4O,kPCZxCG,GAIF,SAAAA,EAAYtD,GAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmD,GAAAnD,KAF3Bd,OAAS,qBAGLc,KAAKlB,IAIb,SAAuBe,GACnB,OAAOf,IAAPsE,KAE8B3D,EAAkBI,IAPjCwD,CAAcxD,ICOlByD,OAbf,SAAAvO,GAAkD,IAAvB8K,EAAuB9K,EAAvB8K,aAAcvB,EAASvJ,EAATuJ,OACrC,OACI/I,EAAAC,EAAAC,cAACgL,EAAD,CACInC,OAAQA,EACR3C,QAAS,aACTY,YAAa,YACbf,KAAM,aACN+C,MAAO,IAAI4E,GAAgBtD,GAC3BrD,aAAc,SAAAkE,GAAG,OAAInL,EAAAC,EAAAC,cAAC8N,GAAD,CAAiBX,UAAWlC,EAAKE,IAAG,aAAAjM,OAAe+L,EAAI9L,ywBCVlF4O,GAIF,SAAAA,EAAY3D,GAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwD,GAAAxD,KAF3Bd,OAAS,cAGLc,KAAKlB,IAWb,SAAmBe,GACf,OAAOf,IAAP2E,KAEuBhE,EAAkBI,IAd1B6D,CAAU7D,ICgBd8D,OAXf,SAAA5O,GAA8C,IAAvB8K,EAAuB9K,EAAvB8K,aAAcvB,EAASvJ,EAATuJ,OACjC,OAAO/I,EAAAC,EAAAC,cAACgL,EAAD,CACHnC,OAAQA,EACR3C,QAAS,SACTY,YAAa,SACbf,KAAM,SACN+C,MAAO,IAAIiF,GAAY3D,GACvBrD,aAAc,SAAAkE,GAAG,OAAInL,EAAAC,EAAAC,cAACwF,EAAD,CAAa3G,KAAMoM,EAAKE,IAAG,SAAAjM,OAAW+L,EAAI9L,UCRvE,SAASgP,GAAaC,GAClB,MAAO,CAACC,OAAQD,EAAIE,UAAU,IAGnBC,OAdf,SAAAjP,GAA8B,IAAN8O,EAAM9O,EAAN8O,IACpB,OAAOtO,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,eACjBmB,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,sBACVmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMmO,EAAI1J,KAAM0J,EAAIjO,QAFxB,MAIAL,EAAAC,EAAAC,cAAA,KAAGC,KAAMmO,EAAII,SAAU7P,UAAU,4BAA4ByP,EAAIK,YACpE3O,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,yBAAyB+P,wBAAyBP,GAAaC,yRCFhFO,GAIF,SAAAA,EAAYvE,GAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoE,GAAApE,KAF3Bd,OAAS,gBAGLc,KAAKlB,IAIb,SAAoBe,GAChB,OAAOf,IAAPuF,KAEyB5E,EAAkBI,IAP5ByE,CAAWzE,ICOf0E,OAbf,SAAAxP,GAAgD,IAAvB8K,EAAuB9K,EAAvB8K,aAAcvB,EAASvJ,EAATuJ,OACnC,OACI/I,EAAAC,EAAAC,cAACgL,EAAD,CACInC,OAAQA,EACR3C,QAAS,cACTY,YAAa,UACbf,KAAM,UACN+C,MAAO,IAAI6F,GAAavE,GACxBrD,aAAc,SAAAkE,GAAG,OAAInL,EAAAC,EAAAC,cAAC+O,GAAD,CAAeX,IAAKnD,EAAKE,IAAG,OAAAjM,OAAS+L,EAAIvG,WCDpEsK,GACF,SAAAA,EAAYC,GAAS5E,OAAAC,EAAA,EAAAD,CAAAE,KAAAyE,GACjBzE,KAAK0E,OAASA,EACd1E,KAAKpK,MAAQ,KACboK,KAAK2E,IAAM,KACX3E,KAAK4E,QAAU,GACf5E,KAAK6E,eAAiB,KACtB7E,KAAKlK,KAAO,KACZkK,KAAK8E,UAAY,KACjB9E,KAAKvJ,KAAO,MClBdsO,GAAS,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAUJ,SAASC,GAA0BC,GAC/B,IAgByBC,EAhBnBC,EAAW,IAAIV,GAAa,YAOlC,OANAU,EAASvP,MAAQqP,EAAaG,OAAO,GACrCD,EAASR,IAAMM,EAAaI,IAC5BF,EAASP,QA2Fb,SAAsBA,GAClB,QAAgB1H,IAAZ0H,GAA4C,IAAnBA,EAAQrM,OACjC,MAAO,GAEX,OAAOqM,EAAQnI,IAAI,SAAA6I,GAAI,SAAA3Q,OAAO2Q,EAAKC,WAAZ,MAAA5Q,OAA2B2Q,EAAKE,aA/FpCC,CAAaR,EAAaL,SAC7CO,EAASN,gBAYgBK,EAZqBD,EAAaC,kBAajCA,EAAgB,GAAKA,EAAgB,GAAK,KAZpEC,EAASrP,KAAOmP,EAAaS,mBAAmBnN,OAAS,EAAIoN,GAAUV,EAAaS,oBAAsBC,GAAUV,EAAaW,qBACjIT,EAASL,UA2Db,SAAoBe,EAAQC,EAAOC,GAC/B,IAAMjB,EAAY,GAGde,IAAWC,EACXhB,EAAUjM,KAAV,GAAAlE,OAAkBkR,IACXC,IAAUD,EACjBf,EAAUjM,KAAV,GAAAlE,OAAkBmR,IACXD,GAAUC,GACjBhB,EAAUjM,KAAV,GAAAlE,OAAkBkR,EAAlB,MAAAlR,OAA6BmR,EAA7B,MAIAC,GAAQA,EAAK/L,SAAS,KACtB8K,EAAUjM,KAAV,OAAAlE,OAAsBoR,IACfA,GACPjB,EAAUjM,KAAV,MAAAlE,OAAqBoR,IAIzB,OAAOjB,EAAU5B,KAAK,MA/ED8C,CAAWf,EAAaY,OAAQZ,EAAaa,MAAOb,EAAac,MAC/EZ,EAmBX,SAASQ,GAAUM,GAGf,QAAiB/I,IAAb+I,EACA,MAAO,GAIX,IAAMC,EAAgBD,EAAS1N,OAG/B,GAAsB,IAAlB2N,EACA,OAAO,KAIX,IAAMC,EAAOF,EAAS,GACtB,GAAsB,IAAlBC,EACA,SAAAvR,OAAUwR,EAAV,KAIJ,IAAMC,EAAQrB,GAAOkB,EAAS,GAAK,GACnC,OAAsB,IAAlBC,EACA,GAAAvR,OAAUyR,EAAV,KAAAzR,OAAmBwR,EAAnB,KAIJ,GAAAxR,OAAUyR,EAAV,KAAAzR,OAAmBwR,EAAnB,KAAAxR,OAA2BsR,EAAS,GAApC,SCzEEI,GACF,SAAAA,EAAYC,GAAgBxG,OAAAC,EAAA,EAAAD,CAAAE,KAAAqG,GACxBrG,KAAKpK,MAAQ0Q,EAAc1Q,MAC3BoK,KAAKuG,YAAcD,EAAcC,YACjCvG,KAAKvJ,KAAO6P,EAAc7P,MCClC,SAAS+P,GAAcC,EAASC,EAAU7G,GAGtC,GAAI4G,GAAWA,EAAQF,YACnB,OAAO,IAAIF,GAAaI,GAI5B,GAAIA,GAAWA,EAAQtB,WA6B3B,SAAqBwB,EAAaC,GAC9BA,EAAiBA,GAAkC,GACnD,IAAIC,GAAW,EAWf,OAVAF,EAAcA,EAAYG,cAG1BF,EAAeG,QAAQ,SAAA1F,GACnB,IAAM2F,EAAa3F,EAAQ4F,IAAM5F,EAAQ4F,IAAIH,cAAgB,GACzDH,IAAgBK,GAA+B,WAAjB3F,EAAQrG,OACtC6L,GAAW,KAIZA,EA1C6BK,CAAYT,EAAQtB,SAASgC,aAAa9B,IAAKqB,GAAW,CAC1F,IAAMU,EAAepC,GAA0ByB,EAAQtB,SAASgC,cAC1DE,EAASZ,EAAQtB,SAASmC,WAEhC,OADAF,EAAa3Q,KAAO4Q,EAAOtG,aAAesG,EAAOtG,aAAesG,EAAOE,gBAChEH,EAIX,GAAIV,EAAU,CACd,IAAMc,EA4CV,SAA4B3H,EAAc+G,GACtC,OAAOA,EAAenO,OAAO,SAAA4I,GAGzB,IAAMoG,EAAapG,EAAQzL,MAAM2C,OAAS,GAGpCmP,EAAsB7H,EAAaiH,cAAca,SAAWtG,EAAQzL,MAAMkR,cAAca,OAG9F,OAAOF,GAAcC,GAY7B,SAAqB5G,GACjB,IAAMA,EACF,OAAO,EAEX,MAA2C,KAApCA,EAAmBC,cAA8D,KAAvCD,EAAmByG,gBAhBpBK,CAAYvG,EAAQP,sBAtDhD+G,CAAmBhI,EAAc6G,GACrD,GAAIc,EAAYjP,OAAS,EAAG,CACxB,IAAM6O,ECvBd,SAA8B/F,GAC1B,IAAMyG,EAAW,IAAIrD,GAAa,OAclC,OAbAqD,EAASlS,MAAQyL,EAAQzL,MACzBkS,EAASnD,IAAMtD,EAAQ4F,IAIvBa,EAASlD,QAAUvD,EAAQtL,QAAUsL,EAAQtL,QAAQ0L,MAAM,MAAQ,GAEnEqG,EAAShS,KAAOuL,EAAQvL,KACxBgS,EAASjD,eAAiBxD,EAAQO,aAAarJ,OAAS,EAAI8I,EAAQO,aAAa,GAAK,KAGtFkG,EAAShD,UAAYzD,EAAQM,SAASpJ,OAAS,EAAI8I,EAAQM,SAAS,GAAK,KAElEmG,EDQkBC,CAAqBP,EAAY,IAChDH,EAASG,EAAY,GAAG1G,mBAE9B,OADAsG,EAAa3Q,KAAO4Q,EAAOtG,aAAesG,EAAOtG,aAAesG,EAAOE,gBAChEH,GAIX,OAAO,KEFIY,OA1Bf,SAAAjT,GAAuC,IAAV0R,EAAU1R,EAAV0R,QAOzB,OANAnJ,EAAOM,KAAP,oCAAAjJ,OAAgD8R,EAAQ7Q,QAOpDL,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,gBACXmB,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,yBAAd,cACAmB,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,mBACXmB,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,0BAENqS,EAAQhQ,KACJlB,EAAAC,EAAAC,cAAA,KAAGC,KAAM+Q,EAAQhQ,KAAMwR,QAX/C,WACI3K,EAAOM,KAAP,kCAAAjJ,OAA8C8R,EAAQ7Q,UAUS6Q,EAAQ7Q,OAEnDL,EAAAC,EAAAC,cAAA,YAAOgR,EAAQ7Q,QAI3BL,EAAAC,EAAAC,cAAA,OAAK0O,wBAAyB,CAACL,OAAQ2C,EAAQF,kBCkChD2B,OAtDf,SAAAnT,GAAoC,IAAXoQ,EAAWpQ,EAAXoQ,SAOrB,OANA7H,EAAOM,KAAP,uCAAAjJ,OAAmDwQ,EAASvP,MAA5D,KAAAjB,OAAqEwQ,EAASR,MAO1EpP,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,gBACXmB,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,yBAAd,cACAmB,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,mBACXmB,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,0BAAyBmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMyP,EAAS1O,KAAMwR,QAR3E,WACI3K,EAAOM,KAAP,qCAAAjJ,OAAiDwQ,EAASvP,MAA1D,KAAAjB,OAAmEwQ,EAASR,QAOeQ,EAASvP,QAC5FL,EAAAC,EAAAC,cAAA,KAAGrB,UAAU,2BAmB7B,SAAoBwQ,GAChB,IAAMuD,EAAiBvD,EAAQrM,OAK/B,OAJAqM,EAAUA,EAAQwD,MAAM,EAAG,GACvBD,EAAiB,GACjBvD,EAAQ/L,KAAK,WAEV+L,EAAQ1B,KAAK,MAxBHmF,CAAWlD,EAASP,UAEzBrP,EAAAC,EAAAC,cAAA,KAAGrB,UAAU,gCA+B7B,SAAsB+Q,GAGlB,MAA2B,QAApBA,EAAST,OACZS,EAASL,UADN,GAAAnQ,OAEAwQ,EAASN,eAFT,KAAAlQ,OAE2BwQ,EAASrP,KAFpC,KAAAnB,OAE4CwQ,EAASL,WAnC3CwD,CAAanD,IAElB5P,EAAAC,EAAAC,cAAA,KAAGrB,UAAU,wBAAb,OAAyC+Q,EAASR,KAClDpP,EAAAC,EAAAC,cAAA,KAAGC,KAAMyP,EAAS1O,KAAMrC,UAAU,8BAAlC,opBCsDDmU,OAhEf,SAAAxT,GAA+D,IAAvC8K,EAAuC9K,EAAvC8K,aAAcvB,EAAyBvJ,EAAzBuJ,OAAQkK,EAAiBzT,EAAjByT,eAAiB5J,EAC5BC,YA0BnC,SAAqBgB,GACjB,OAAOf,IAAP2J,KAEmBhJ,EAAkBI,IA7BG6I,CAAY7I,GAAe,CAACvB,WAA7DS,EADoDH,EACpDG,QAASrB,EAD2CkB,EAC3ClB,MAAOI,EADoCc,EACpCd,KAGvB,GAAIiB,GAAWrB,IAAUI,IAAS0K,EAC9B,OAAO,KAIX,IAAM/B,EAAUD,GAAc1I,EAAK2I,QAAS+B,EAAgB3I,GAC5D,OAAI4G,aAAmBJ,GACZ9Q,EAAAC,EAAAC,cAACkT,GAAD,CAAoBlC,QAASA,IAC7BA,aAAmBhC,GAEtBlP,EAAAC,EAAAC,cAACmT,GAAD,CAAgBzD,SAAUsB,IAK3B,MCrBIoC,OAff,SAAA9T,GAAqC,IAAhBd,EAAgBc,EAAhBd,OAAQ6U,EAAQ/T,EAAR+T,MAWzB,OAAOvT,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,QAAMrB,UAAU,gCAAgC6T,QATxC,SAACjU,GACbC,EAAO8U,SACP9U,EAAO8U,QAAQC,eAAe,CAC1BC,SAAU,SACVC,MAAO,YAKgEJ,KCVvF,SAASK,GAATpU,GAA6F,IAArEqU,EAAqErU,EAArEqU,SAAUC,EAA2DtU,EAA3DsU,YAAaC,EAA8CvU,EAA9CuU,OAAQC,EAAsCxU,EAAtCwU,cAAeC,EAAuBzU,EAAvByU,SAAUC,EAAa1U,EAAb0U,WAC5E,OACIlU,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,OACXmB,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,4BACXmB,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,4BAAf,YACAmB,EAAAC,EAAAC,cAACiU,GAAD,CAAYzV,OAAQmV,EAAUN,MAAM,iBACpCvT,EAAAC,EAAAC,cAACiU,GAAD,CAAYzV,OAAQoV,EAAaP,MAAM,aACvCvT,EAAAC,EAAAC,cAACiU,GAAD,CAAYzV,OAAQqV,EAAQR,MAAM,QAClCvT,EAAAC,EAAAC,cAACiU,GAAD,CAAYzV,OAAQsV,EAAeT,MAAM,eACzCvT,EAAAC,EAAAC,cAACiU,GAAD,CAAYzV,OAAQuV,EAAUV,MAAM,UACpCvT,EAAAC,EAAAC,cAACiU,GAAD,CAAYzV,OAAQwV,EAAYX,MAAM,aAE1CvT,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,oBAAmBmB,EAAAC,EAAAC,cAAA,KAAGC,KAAK,uCAAR,sECRxCiU,GAAkB,IAAIC,KAA6B,CACrDC,kCAGEC,GAAQ,IAAIC,KAAc,CAAEJ,qBAE5BK,GAAe,IAAIC,KAAa,CAClCH,SACAI,IAAK/L,gDACL1H,KAAM,IAAI0T,+CCcCC,eAzBX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAxK,OAAAC,EAAA,EAAAD,CAAAE,KAAAoK,IACfE,EAAAxK,OAAAyK,GAAA,EAAAzK,CAAAE,KAAAF,OAAA0K,GAAA,EAAA1K,CAAAsK,GAAAK,KAAAzK,KAAMqK,KACDK,MAAQ,CAACC,UAAU,GAFTL,mFASD5M,EAAOkN,GACrBC,QAAQnN,MAAMA,GACdmN,QAAQnN,MAAMkN,GACdtN,EAAOI,MAAP,GAAA/I,OAAgB+I,EAAMX,QAAtB,MAAApI,OAAkCiW,EAAUE,kDAI5C,OAAI9K,KAAK0K,MAAMC,SACJpV,EAAAC,EAAAC,cAACwJ,EAAD,CAAUtD,QAAS,UAGvBqE,KAAKqK,MAAMvO,4DAfU4B,GAC5B,MAAO,CAAEiN,UAAU,UAPgBI,IAAMC,WCgElCC,OA/Df,SAAAlW,GAA4B,IAAPT,EAAOS,EAAPT,KACjB,GAAIA,EAAKqG,cAA8B,UAAdrG,EAAK0G,KAC1B,OAAOzF,EAAAC,EAAAC,cAACwF,EAAD,CAAa3G,KAAMA,EAAMoG,iBAAiB,IAGrD,IAAMjE,EAAOpC,EAAgBC,GAE7B,OAAOiB,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,6BAEjBmB,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,cACXmB,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,oDACVmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMe,EAAMrC,UAAU,8BACpBE,EAAKsB,QAIdL,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,gCAkB3B,SAAqBE,GACjB,OAAIA,EAAKyB,QACEzB,EAAKyB,QAGZzB,EAAK0B,aAAa,GACX1B,EAAK0B,aAAa,GAGtB,GA3BgDC,CAAY3B,IAE3DiB,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,kCACVE,EAAK4G,UADV,IACsB5G,EAAKwB,MAG3BP,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,6BAA6BE,EAAK0G,MAEhD1G,EAAKqG,cAsBlB,SAAmBrG,GACf,OAAOiB,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,8BAA6BmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMrB,EAAgBC,IAAzB,gBAvBrB6G,CAAU7G,GAE/BA,EAAK4W,YAwBlB,SAA8B5W,GAC1B,OAAOiB,EAAAC,EAAAC,cAAC+E,EAAD,CAAuBlG,KAAMA,IAzBR6W,CAAqB7W,IAI5CA,EAAKqF,YAAYpB,OAAS,GAwBnC,SAAoBjE,GAChB,IAAM+F,EAAO,sBAAA1F,OAAyBL,EAAKsB,OAC3C,OAAOL,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,eAClBmB,EAAAC,EAAAC,cAAA,KAAGC,KAAMrB,EAAgBC,GAAOgG,cAAY,QACxC/E,EAAAC,EAAAC,cAAA,OAAKtB,IAAKG,EAAKqF,YAAY,GAAGQ,IAAKxE,IAAK0E,EAASjG,UAAU,kBA5B/BgH,CAAW9G,uvBC7B7C8W,GAIF,SAAAA,EAAYvL,GAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoL,GAAApL,KAF3Bd,OAAS,gBAGLc,KAAKlB,IAIb,SAAyBe,GACrB,OAAOf,IAAPuM,KAEyB5L,EAAkBI,IAP5ByL,CAAgBzL,ICkBnC,SAASM,GAAgBN,GACrB,IAAMO,EAAsBC,mBAAmBR,GACzCS,EAAiB,+DAAA3L,OAAkEyL,GAEzF,OACI7K,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,0BACXmB,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,KAAGrB,UAAU,2CAAb,sBACuBmB,EAAAC,EAAAC,cAAA,KAAGC,KAAM4K,GAAT,YADvB,sCAOGiL,OA7Bf,SAAAxW,GAAqD,IAA/B8K,EAA+B9K,EAA/B8K,aAAcvB,EAAiBvJ,EAAjBuJ,OAAQkC,EAASzL,EAATyL,OACxC,OACIjL,EAAAC,EAAAC,cAACgL,EAAD,CACInC,OAAQA,EACR3C,QAAS,eACTY,YAAa,QACbf,KAAM,QACN+C,MAAO,IAAI6M,GAAkBvL,GAC7BrD,aAAc,SAAAkE,GAAG,OAAInL,EAAAC,EAAAC,cAAC+V,GAAD,CAAYlX,KAAMoM,EAAKE,IAAG,QAAAjM,OAAU+L,EAAI9L,OAC7D6J,iBAAkB0B,GAAgBN,GAClClB,SAAU6B,KCOPiL,OA7Bf,SAAA1W,GAAkD,IAA1B2W,EAA0B3W,EAA1B2W,UAAWC,EAAe5W,EAAf4W,aAAeC,EAERC,oBAAS,GAFDC,EAAAhM,OAAAiM,EAAA,EAAAjM,CAAA8L,EAAA,GAEvCI,EAFuCF,EAAA,GAE1BG,EAF0BH,EAAA,GAQxCI,EAAmBF,EAAc,wCAA0C,qCAEjF,OACIzW,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,kBACXmB,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,+BACXmB,EAAAC,EAAAC,cAAA,SAAOrB,UAAU,yBACbmB,EAAAC,EAAAC,cAAA,SACIuF,KAAK,WACLmR,QAAST,EACTU,SAAUT,IAJlB,4BAOApW,EAAAC,EAAAC,cAAA,QAAMrB,UAAU,4BAA4B6T,QAhBxD,WACIgE,GAAgBD,KAeR,iBAEJzW,EAAAC,EAAAC,cAAA,OAAKrB,UAAW8X,GAAhB,iICyDZ,SAASG,KAWL,IAPA,IAAIC,EAAY,CACZC,WAAY,GACZC,KAAM,IAIJC,EAAmBrP,OAAO/G,SAASqW,OAAOjL,MAAM,KAC7CnJ,EAAI,EAAGA,EAAImU,EAAiBlU,OAAQD,IAAK,KAAAqU,EAC3BF,EAAiBnU,GAAGmJ,MAAM,KADCmL,EAAA9M,OAAAiM,EAAA,EAAAjM,CAAA6M,EAAA,GACvC/L,EADuCgM,EAAA,GAClCC,EADkCD,EAAA,GAE9CN,EAAUC,WAAW3L,GAAOiM,EAC5BP,EAAUE,KAAK3T,KAAK+H,GAGxB,OAAO0L,EAGX,SAASQ,GAAaR,GAElB,IADA,IAAMS,EAAmB,GAChBzU,EAAI,EAAGA,EAAIgU,EAAUE,KAAKjU,OAAQD,IAAK,CAC5C,IAAM0U,EAAaV,EAAUE,KAAKlU,GAClCyU,EAAiBlU,KAAKmU,EAAa,IAAMV,EAAUC,WAAWS,IAGlE,IAAMC,EAAS7P,OAAO/G,SAAS6W,SAAW,KACtC9P,OAAO/G,SAAS8W,KAChB/P,OAAO/G,SAAS+W,SAChBL,EAAiB7J,KAAK,KAC1B9F,OAAOiQ,QAAQP,aAAa,CAACQ,KAAML,GAAS,GAAIA,GAGrCM,OAjHf,SAAwB3M,EAAK4M,GAAc,IAAA5B,EACbC,mBAuB9B,SAA6BjL,GACzB,IAAM6M,EAAkBpB,KAExB,OAA2C,IAAvCoB,EAAgBjB,KAAKkB,QAAQ9M,GACtB,QAGJ+M,mBAAmBF,EAAgBlB,WAAW3L,IA9BlBgN,CAAoBhN,IAAQ4M,GADxB1B,EAAAhM,OAAAiM,EAAA,EAAAjM,CAAA8L,EAAA,GAChCiC,EADgC/B,EAAA,GACzBgC,EADyBhC,EAAA,GAevC,MAAO,CAAC+B,EAZWE,sBACf,SAAAC,GACIF,EAASE,GACQ,SAAbA,EAkChB,SAA6BpN,EAAKiN,GAE9B,IAAMvB,EAAYD,KAClBC,EAAUC,WAAW3L,GAAOP,mBAAmBwN,IAGV,IAAjCvB,EAAUE,KAAKkB,QAAQ9M,IACvB0L,EAAUE,KAAK3T,KAAK+H,GAExBkM,GAAaR,GA1CD2B,CAAoBrN,EAAKoN,GAmDzC,SAAgCpN,GAE5B,IAAM0L,EAAYD,KAEZ6B,EAAQ5B,EAAUE,KAAKkB,QAAQ9M,GAGjCsN,GAAS,IACT5B,EAAUE,KAAK2B,OAAOD,EAAO,UACtB5B,EAAUC,WAAV,KAGXO,GAAaR,GA7DD8B,CAAuBxN,IAG/B,CAACA,MCyFMyN,OAxFf,SAAAtZ,GAAuC,IAAf8K,EAAe9K,EAAf8K,aAAe+L,EAGSC,mBAAS,IAHlBC,EAAAhM,OAAAiM,EAAA,EAAAjM,CAAA8L,EAAA,GAG5BpD,EAH4BsD,EAAA,GAGZwC,EAHYxC,EAAA,GAAAyC,EAIahB,GAAe,UAJ5BiB,EAAA1O,OAAAiM,EAAA,EAAAjM,CAAAyO,EAAA,GAI5BE,EAJ4BD,EAAA,GAIRE,EAJQF,EAAA,GAM7BG,EAA6C,SAAvBF,EAYtBG,EAAU,CACZxF,SAAUyF,iBAAO,MACjBxF,YAAawF,iBAAO,MACpBvF,OAAQuF,iBAAO,MACftF,cAAesF,iBAAO,MACtBrF,SAAUqF,iBAAO,MACjBpF,WAAYoF,iBAAO,OAGjBC,EAAkB,CAACjP,eAAcvB,OAAQ0L,IACzC+E,EAAgBxZ,EAAAC,EAAAC,cAACuZ,GAAD,CAAerD,aApBrC,WACI+C,GAAoBC,GAEhBD,EADAC,EACkB,QAEA,SAeiDjD,UAAWiD,IAEtF,OACIpZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0T,GAAkByF,GAEnBrZ,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,iBACXmB,EAAAC,EAAAC,cAACwZ,GAAD,KACI1Z,EAAAC,EAAAC,cAACyZ,GAADpP,OAAAqP,OAAA,GAAmBL,EAAnB,CAAoCtG,eAAgBA,MAGxDjT,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,qBACXmB,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,qBAAqBgb,IAAKR,EAAQxF,UAC7C7T,EAAAC,EAAAC,cAACwZ,GAAD,KACKN,EACGpZ,EAAAC,EAAAC,cAAC4Z,EAADvP,OAAAqP,OAAA,GAAmBL,EAAnB,CAAoCtO,OAAQuO,KAC5CxZ,EAAAC,EAAAC,cAAC6Z,GAADxP,OAAAqP,OAAA,GAAiBL,EAAjB,CAAkCtO,OAAQuO,OAItDxZ,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,qCAAqCgb,IAAKR,EAAQvF,aAC7D9T,EAAAC,EAAAC,cAACwZ,GAAD,KACI1Z,EAAAC,EAAAC,cAAC8Z,GAADzP,OAAAqP,OAAA,GAAoBL,EAApB,CAAqCpQ,YAAa4P,QAK9D/Y,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,oBAAoBgb,IAAKR,EAAQtF,QAC5C/T,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,YACXmB,EAAAC,EAAAC,cAACwZ,GAAD,KACI1Z,EAAAC,EAAAC,cAAC+Z,GAAeV,KAGxBvZ,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,2BAA2Bgb,IAAKR,EAAQrF,eACnDhU,EAAAC,EAAAC,cAACwZ,GAAD,KACI1Z,EAAAC,EAAAC,cAACga,GAAsBX,MAKnCvZ,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,oBAAoBgb,IAAKR,EAAQpF,UAC5CjU,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,aACXmB,EAAAC,EAAAC,cAACwZ,GAAD,KACI1Z,EAAAC,EAAAC,cAACia,GAAiBZ,MAK9BvZ,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,oBAAoBgb,IAAKR,EAAQnF,YAC5ClU,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,aACXmB,EAAAC,EAAAC,cAACwZ,GAAD,KACI1Z,EAAAC,EAAAC,cAACka,GAAmBb,SClFjCc,OAVf,WACI,OACIra,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,uBACXmB,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,oCAAf,+DCGNyb,GAAkB9E,IAAM+E,KAJd,SAAAzF,GACZ,OAAO9U,EAAAC,EAAAC,cAACsa,GAAD,CAAelQ,aAAcwK,EAAMxK,iBAqB/BmQ,OAhBf,SAAAjb,GAAwC,IAA1Bkb,EAA0Blb,EAA1Bkb,UAAWpQ,EAAe9K,EAAf8K,aACrB,OACItK,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,sBACXmB,EAAAC,EAAAC,cAAA,MAAIrB,UAAU,4BAA4BQ,GAAG,gBAA7C,sBACAW,EAAAC,EAAAC,cAAA,QAAMya,OAAO,MAAMC,OAAQ/S,OAAO/G,SAAS+W,SAAUhZ,UAAU,oBAC1D6b,EACD1a,EAAAC,EAAAC,cAAA,UAAQrB,UAAU,kBAAkB4G,KAAK,UACrCzF,EAAAC,EAAAC,cAAA,KAAGrB,UAAU,eAAekG,cAAY,SACxC/E,EAAAC,EAAAC,cAAA,QAAMrB,UAAU,sBAAhB,YAGPyL,EAAetK,EAAAC,EAAAC,cAACoa,GAAD,CAAiBhQ,aAAcA,IAAkBtK,EAAAC,EAAAC,cAAC2a,GAAD,2DCoB9DC,OA1Bf,SAAAtb,GAAqH,IAAjGub,EAAiGvb,EAAjGub,YAAaC,EAAoFxb,EAApFwb,YAAaC,EAAuEzb,EAAvEyb,iBAAkBC,EAAqD1b,EAArD0b,iBAAkBC,EAAmC3b,EAAnC2b,qBAAsBC,EAAa5b,EAAb4b,WASpG,OACIpb,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,sBACXmB,EAAAC,EAAAC,cAAA,SAAOmb,QAASN,EAAalc,UAAU,2CAAvC,8BAGAmB,EAAAC,EAAAC,cAACob,GAAArb,EAAD,CAAa+a,YAAaA,EACbO,mBAAoB,SAAAC,GAAU,OAAIA,EAAWlD,OAC7CmD,4BAA6BR,EAC7BS,4BAA6BR,EAC7BS,iBAfI,SAAAH,GAAU,OAC/Bxb,EAAAC,EAAAC,cAAA,OAAKrB,UAAU,qBACV2c,EAAWlD,QAcC6C,qBAAsBA,EACtBC,WAAYA,MCGtBQ,OA3Bf,SAAApc,GAAqE,IAA5Cub,EAA4Cvb,EAA5Cub,YAAac,EAA+Brc,EAA/Bqc,SAAUvD,EAAqB9Y,EAArB8Y,MAAOwD,EAActc,EAAdsc,YAcnD,OACI9b,EAAAC,EAAAC,cAAA,YACIb,GAAI0b,EACJzC,MAAOA,EACPzB,SAjBR,SAAsBpY,GAClBod,EAASpd,EAAO,CAACga,SAAUha,EAAMC,OAAO4Z,MAAOqC,OAAQ,cAiBnDoB,QAdR,SAAiBtd,GACbA,EAAMC,OAAOsd,eAAiB1D,EAAMtV,OACpC8Y,GAAY,IAaRG,OAVR,SAAgBxd,GACZqd,GAAY,IAURtO,KAAK,MACL0O,WAAS,eC1BfC,GAAqB,EAGrBC,GAA0B,GAG1BrB,GAAc,iCAIpB,SAASI,GAAqB1c,EAA9Be,GAA2GA,EAArEgc,WAAqE,IAAzDa,EAAyD7c,EAAzD6c,gBAAyD7c,EAAxC8c,gBAAwC9c,EAAvB+c,aAAuB/c,EAATmb,OAC9F,GAAI0B,EAAiB,CACjB,IAAMzX,EAAMiD,OAAO/G,SAAS6W,SAAW,KAAO9P,OAAO/G,SAAS8W,KAAO/P,OAAO/G,SAAS+W,SAASzN,QAAQ,MAAO,IAC7GvC,OAAO/G,SAASX,KAAhB,GAAAf,OAA0BwF,EAA1B,SAAAxF,OAAqCid,IAmH9BG,OAtGf,SAAAC,GAAoE,IAAvCC,EAAuCD,EAAvCC,aAAcpS,EAAyBmS,EAAzBnS,aAAcqS,EAAWF,EAAXE,SAAWtG,EAS1BC,mBAAS,IATiBC,EAAAhM,OAAAiM,EAAA,EAAAjM,CAAA8L,EAAA,GASzD2E,EATyDzE,EAAA,GAS5CqG,EAT4CrG,EAAA,GAAAsG,EAYtCvG,mBAAShM,GAZ6BwS,EAAAvS,OAAAiM,EAAA,EAAAjM,CAAAsS,EAAA,GAYzDvE,EAZyDwE,EAAA,GAYlDvE,EAZkDuE,EAAA,GAAAC,EAehCzG,oBAAUgC,GAfsB0E,EAAAzS,OAAAiM,EAAA,EAAAjM,CAAAwS,EAAA,GAezDE,EAfyDD,EAAA,GAe/ClB,EAf+CkB,EAAA,GAkB1DE,EAAc5E,EAAMtV,QAAUoZ,GAI9Be,EAAW7E,EAAMtV,QAAUoZ,GAG3BP,EAAW,SAACpd,EAAD2e,GAA+B,IAAtB3E,EAAsB2E,EAAtB3E,SACP,UAD6B2E,EAAZzC,OAE5BgC,KAEApE,EAASE,GACTiE,EAAajE,KA9B2C,SAAA4E,IAAA,OAAAA,EAAA9S,OAAA+S,GAAA,EAAA/S,CAAAgT,GAAAtd,EAAAud,KAmChE,SAAAC,EAAAC,GAAA,IAAApF,EAAAqF,EAAA/Y,EAAAgZ,EAAAC,EAAA,OAAAN,GAAAtd,EAAA6d,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAiC3F,EAAjCoF,EAAiCpF,MAAOqF,EAAxCD,EAAwCC,SAIhCrF,EAAMtV,OAASmZ,IAAiC,kBAAXwB,GAJ7C,CAAAI,EAAAE,KAAA,eAAAF,EAAAG,OAAA,wBASUtZ,EATV,wDAAAxF,OASwEkZ,GAChEsF,EAAO,GAVfG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAa+BE,MAAMvZ,GAbrC,cAaciZ,EAbdE,EAAAK,KAAAL,EAAAE,KAAA,GAcqBJ,EAASD,OAd9B,QAcQA,EAdRG,EAAAK,KAAAL,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAgBQhW,EAAOI,MAAP,kCAAA/I,OAA+CkZ,IAG/CsF,EAAO,GAnBf,QAqBIhB,EAAegB,GArBnB,yBAAAG,EAAAO,SAAAb,EAAA,mBAnCgEla,MAAAkH,KAAA/C,WAiEhE,IAWM6W,EAAgB,CAClBxD,eACAC,cACAC,iBA/E4D,SAAAuD,GAAA,OAAAnB,EAAA9Z,MAAAkH,KAAA/C,YAgF5DwT,iBApBJ,WACI0B,EAAe,KAoBfzB,wBACAC,WAjBe,CACfqD,YAAa,kDACbnG,QACAzB,SAAUgF,EACVrO,KAAM,MACNnO,GAAI0b,GACJmB,UAAWe,EACXlB,QAAS,SAAAtd,GAAK,OAAIqd,GAAY,IAC9BG,OAAQ,SAAAxd,GAAK,OAAIqd,GAAY,MAY3B4C,EAAgB,CAClB7C,WACAd,eACAzC,QACAwD,eAGEpB,EAAYwC,EAAcld,EAAAC,EAAAC,cAACye,GAAmBD,GAAmB1e,EAAAC,EAAAC,cAAC0e,GAAcL,GAEtF,OAAOve,EAAAC,EAAAC,cAAC2e,GAAA,EAAD,CACHC,GAAI3B,EACJ4B,QAAS,IACTC,WAAW,qBACVtE,WCpGT,SAASuE,GAAa3U,GAClB4U,SAAS7e,MAAQiK,EAAY,YAAAlL,OAAekL,GAAiB,SAgBlD6U,OA3Cf,WAEI,IAAMC,EAkCV,SAAyB5R,GACrBA,EAAOA,EAAKpD,QAAQ,MAAO,OAAOA,QAAQ,OAAQ,OAClD,IACMP,EADQ,IAAIwV,OAAO,SAAW7R,EAAO,aACrB8R,KAAKzX,OAAO/G,SAASqW,QAC3C,OAAmB,OAAZtN,EAAmB,GAAKuO,mBAAmBvO,EAAQ,GAAGO,QAAQ,MAAO,MAtChDmV,CAAgB,OAC5CN,GAAaG,GAHO,IAAA/I,EAMoBC,mBAAS8I,GAN7B7I,EAAAhM,OAAAiM,EAAA,EAAAjM,CAAA8L,EAAA,GAMb/L,EANaiM,EAAA,GAMCiJ,EANDjJ,EAAA,GAAAsG,EAScvG,mBAAS,IATvBwG,EAAAvS,OAAAiM,EAAA,EAAAjM,CAAAsS,EAAA,GASb4C,EATa3C,EAAA,GASF4C,EATE5C,EAAA,GAmBdpC,EAAY1a,EAAAC,EAAAC,cAACyf,GAAD,CAAoBrV,aAAcA,EACdoS,aAVjB,SAAApE,GAAK,OAAIoH,EAAapH,IAWLsH,aAPjB,WACjBJ,EAAgBC,GAChBR,GAAa3U,MAOjB,OAAOtK,EAAAC,EAAAC,cAAC2f,GAAD,CAAKnF,UAAWA,EAAWpQ,aAAcA,KChBhCwV,QACW,cAA7BjY,OAAO/G,SAASif,UAEe,UAA7BlY,OAAO/G,SAASif,UAEhBlY,OAAO/G,SAASif,SAASC,MACvB,2DCZNC,IAASC,OAAOlgB,EAAAC,EAAAC,cAACigB,GAAD,MAAkBjB,SAASkB,eAAe,SD2HpD,kBAAmB1X,WACrBA,UAAU2X,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f5440d13.chunk.js","sourcesContent":["function FixBrokenImage(fallbackImage, imgClass) {\n    return function (event) {\n        event.target.onerror = null;\n        event.target.src = fallbackImage;\n        if (imgClass) {\n            event.target.className = imgClass;\n        }\n    }\n}\n\nexport default FixBrokenImage;","/**\n * Return a link to a record in Primo\n *\n * @param item\n * @return {string}\n * @constructor\n */\nfunction PrimoRecordLink(item, isPci) {\n    if (!isPci) {\n        isPci = false;\n    }\n\n    const tab = isPci ? 'pci_only' : 'bcl_only';\n    const scope = isPci ? 'pci' : 'bcl';\n    const context = isPci ? 'PC' : 'L';\n\n    return `https://bc-primo.hosted.exlibrisgroup.com/primo-explore/fulldisplay?docid=${item.id}&context=${context}&tab=${tab}&search_scope=${scope}&vid=bclib_new&lang=en_US`;\n}\n\nexport {PrimoRecordLink};","import React from 'react';\nimport FixBrokenImage from \"../../FixBrokenImage\";\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\n\nconst blankScreen = 'https://library.bc.edu/images/blank-screen.svg';\n\nfunction OnlineVideo({video}) {\n    const screen = video.screenCap ? video.screenCap : blankScreen;\n    const screenClass = video.screenCap ? 'online-video-thumb__screenshot' : 'online-video-thumb__blank_screen';\n    const watchLink = `https://mlib.bc.edu/reserves-api/items/${video.mms}`;\n    const recordLink = PrimoRecordLink(video);\n\n    return <div className=\"online-video\">\n        <a href={watchLink}>\n            <div className=\"online_video__thumb\">\n                <img src={screen} alt={`Watch ${video.title} online`} onError={FixBrokenImage(blankScreen)} className={screenClass}/>\n            </div>\n        </a>\n\n        <h3 className=\"online-video__media-heading media-heading\">\n            <a href={recordLink} className=\"online-video__title\">{video.title}</a>\n        </h3>\n\n        {video.date}\n\n        <div className=\"online-video__creator\">{creatorName(video)}</div>\n\n        <div className=\"online-video__watch-link\"><a href={watchLink}>Watch online</a></div>\n    </div>\n}\n\nfunction creatorName(video) {\n    if (video.creator) {\n        return video.creator;\n    }\n\n    if (video.contributors[0]) {\n        return video.contributors[0];\n    }\n\n    return '';\n}\n\nexport default OnlineVideo;","import {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport React from \"react\";\n\n/**\n * Message to display when the item is not available\n *\n * @param item\n * @return {*}\n * @constructor\n */\nfunction NotAvailableMessage({item}) {\n    return (\n        <div className=\"item-info item-info--unavailable\">\n            Not available. <a href={PrimoRecordLink(item)}>Check for more options</a>.\n        </div>\n    )\n}\n\nexport default NotAvailableMessage;\n","import {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport React from \"react\";\n\nfunction checkHoldingsMessage({item, library, location}) {\n    return (\n        <div className=\"item-info item-info--check-holdings\">\n            <span className=\"item-info__instructions\">\n                <a href={PrimoRecordLink(item, false)}>Check \"Find in Library\"</a>\n            </span>\n            <span className=\"item-info__library\">{library}</span>\n            <span className=\"item-info__location\">{location}</span>.\n        </div>\n    );\n}\n\nexport default checkHoldingsMessage;","import React from \"react\";\n\n/**\n * Message to display for available item\n *\n * @param firstHolding\n * @param inOtherLibraries\n * @return {*}\n * @constructor\n */\nfunction Availability({firstHolding, inOtherLibraries}) {\n    return (\n        <ul className='available-items-list'>\n            <li className={`item-info item-info--available`}>\n                <a href={firstHolding.link}>\n                    <span className=\"item-info__library\">Find in {firstHolding.libraryDisplay}</span>\n                    <span className=\"item-info__location\">{firstHolding.location}</span>\n                    <span className=\"item-info__callno\">({firstHolding.callNumber})</span>\n                    <span className=\"item-info__other-libraries\">{inOtherLibraries && ' and other libraries'}</span>\n                </a>\n            </li>\n        </ul>\n    );\n\n}\n\nexport default Availability;","import React from 'react';\nimport NotAvailableMessage from \"./NotAvailableMessage\";\nimport CheckHoldingsMessage from \"./CheckHoldingsMessage\";\nimport Availability from \"./Availability\";\n\n/**\n * Display an item's available holdings\n *\n * @param item\n * @return {*}\n * @constructor\n */\nfunction AvailabilityContainer({item}) {\n\n    // Build holdings list and display first holding.\n    const holdings = buildHoldings(item);\n    const firstHolding = holdings.length > 0 ? holdings[0] : null;\n\n    if (item.holdings[0] && item.holdings[0].availabilityStatus === 'check_holdings') {\n        return <CheckHoldingsMessage item={item} library={item.holdings[0].libraryCode} location={item.holdings[0].locationDisplay}/>\n    } else if (firstHolding) {\n        return <Availability firstHolding={firstHolding} inOtherLibraries={holdings.length > 1}/>;\n    } else {\n        return <NotAvailableMessage item={item}/>;\n    }\n}\n\n/**\n * Stores library and location weights for sorting holdings.\n *\n * Entries are formatted like:\n *\n *     'library code': {\n *         weight: 0,\n *         'location 1 display': -1,\n *         'location 2 display': 2\n *     }\n *\n *  Where:\n *\n *     * library code: The three-letter library code used in Alma (e.g. 'ONL', 'ERC')\n *     * weight: How much to weight the library if no location match is found\n *     * location # display: The display string value for a location (e.g. '2 hour reserves'); the value\n *                           is the weighting for items in this location\n *\n *  Items with lower weights will sort higher, so to emphasize a library or location give it a negative\n *  value.\n */\nconst locationValues = {\n    'ONL': {\n        weight: -1,\n        'Stacks': -3,\n        '1st Floor Microfilm': 1\n    },\n    'TML': {\n        weight: 0\n    },\n    'BAPST': {\n        weight: 0\n    },\n    'BURNS': {\n        weight: 0\n    },\n    'ERC': {\n        weight: 0\n    },\n    'SWK': {\n        weight: 0\n    },\n    'LAW': {\n        weight: 0\n    },\n    'GEO': {\n        weight: 1\n    },\n    'RES_SHARE': {\n        weight: 2\n    },\n    'DEV': {\n        weight: 2\n    },\n    'INT': {\n        weight: 1\n    }\n};\n\n/**\n * Lookup desirability score by library and location\n */\nfunction getLocationScore(libraryCode, location) {\n    const library = locationValues[libraryCode];\n    return library[location] ? library[location] + library.weight : library.weight;\n}\n\n/**\n * Rank two holdings by most desirable library and location\n */\nfunction sortLibraries(holdingA, holdingB) {\n    return getLocationScore(holdingA.library, holdingA.locationCode) - getLocationScore(holdingB.library, holdingB.locationCode)\n}\n\n/**\n * Build a list of available holdings sorted by most desirable library and location\n */\nfunction buildHoldings(item) {\n    const allItems = [];\n    let holding, availableItems;\n\n    for (let i = 0; i < item.holdings.length; i++) {\n        holding = item.holdings[i];\n        availableItems = holding.items.filter(item => item.availability === 'available');\n        Array.prototype.push.apply(allItems, availableItems);\n    }\n\n    return allItems.sort(sortLibraries);\n}\n\nexport default AvailabilityContainer;","import React from 'react';\nimport FixBrokenImage from \"../../FixBrokenImage\";\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport AvailabilityContainer from \"../availability/AvailabilityContainer\";\n\nconst defaultVHSIcon = 'https://library.bc.edu/images/video-tape.svg';\nconst defaultDVDIcon = 'https://library.bc.edu/images/mono-dvd-mount.svg';\n\nconst vhsClass = 'physical-video__vhs-cover',\n    dvdClass = 'physical-video__dvd-cover';\n\nlet defaultIcon = defaultVHSIcon;\nlet iconClass = vhsClass;\n\nfunction PhysicalVideo({video}) {\n    if (video.format.includes('disc')) {\n        defaultIcon = defaultDVDIcon;\n        iconClass = dvdClass;\n    }\n\n    const cover = getCover(video);\n\n    const altText = `Catalog record for ${video.title}`;\n\n    const recordLink = PrimoRecordLink(video, true);\n\n    return <div className=\"physical-video\">\n        <a href={recordLink} aria-hidden=\"true\">\n            <img src={cover}\n                 onLoad={onImageLoad}\n                 onError={FixBrokenImage(defaultIcon, `OPER physical-video__default_cover ${iconClass}`)}\n                 alt={altText}\n                 className={coverClass(video)}/>\n        </a>\n\n        <h3 className=\"physical-video__media-heading media-heading\">\n            <a href={recordLink} className=\"physical-video__title\">\n                {video.title}\n            </a>\n        </h3>\n\n        {video.date}\n\n        <div className=\"physical-video__creator\">{creatorName(video)}</div>\n\n        {video.format}\n\n        <AvailabilityContainer item={video}/>\n\n    </div>\n}\n\nfunction coverClass(video) {\n    return (video.coverImages.length > 0 && video.coverImages[0]) ? 'physical-video__box_cover' : `OPER HERE NOW physical-video__default_cover  ${iconClass}`;\n}\n\nfunction getCover(video) {\n    if (video.coverImages.length > 0 && video.coverImages[0]) {\n        return String(video.coverImages[0].url);\n    }\n\n    return defaultIcon;\n}\n\nfunction creatorName(video) {\n    if (video.creator) {\n        return video.creator;\n    }\n\n    if (video.contributors[0]) {\n        return video.contributors[0];\n    }\n\n    return '';\n}\n\nfunction onImageLoad(event) {\n    if (event.target.naturalHeight === 1) {\n        event.target.className = `physical-video__default_cover ${iconClass}`;\n        event.target.src = defaultIcon;\n    }\n}\n\nexport default PhysicalVideo;","import React from 'react';\nimport OnlineVideo from './OnlineVideo';\nimport PhysicalVideo from './PhysicalVideo';\n\nfunction VideoResult({item, inCatalogResult}) {\n    const video = item.isElectronic ? <OnlineVideo video={item}/> : <PhysicalVideo video={item}/>;\n    const resultClass = inCatalogResult ? 'catalog-result-item' : 'catalog-result-item col-md-4';\n\n    return <li className={resultClass}>\n        {video}\n    </li>\n}\n\nexport default VideoResult;","import React from 'react';\nimport VideoResult from \"../video/VideoResult\";\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\n\nfunction OnlineResult({item}) {\n    if (item.isElectronic && item.type === 'Video') {\n        return <VideoResult item={item} inCatalogResult={true}/>;\n    }\n\n    const link = PrimoRecordLink(item);\n\n    return <li className=\"catalog-result-item media\">\n\n        <div className=\"media-body\">\n            <h3 className=\"catalog-result-item__media-heading media-heading\">\n                <a href={link} className=\"catalog-result-item__title\">\n                    {item.title}\n                </a>\n            </h3>\n\n            <div className=\"catalog-result-item__creator\">{creatorName(item)}</div>\n\n            <div className=\"catalog-result-item__publisher\">\n                {item.publisher} {item.date}\n            </div>\n\n            <div className=\"catalog-result-item__type\">{item.type}</div>\n\n            {item.isElectronic && getItLink(item)}\n\n        </div>\n\n        {item.coverImages.length > 1 && coverImage(item)}\n    </li>\n}\n\nfunction creatorName(item) {\n    if (item.creator) {\n        return item.creator;\n    }\n\n    if (item.contributors[0]) {\n        return item.contributors[0];\n    }\n\n    return '';\n}\n\nfunction getItLink(item) {\n    return <div className=\"catalog-result-item__getit\"><a href={PrimoRecordLink(item)}>Find online</a></div>;\n}\n\nfunction coverImage(item) {\n    const altText = `Catalog record for ${item.title}`;\n    return <div className=\"media-right\">\n        <a href={PrimoRecordLink(item)} aria-hidden=\"true\">\n            <img src={item.coverImages[0].url} alt={altText} className=\"cover-image\"/>\n        </a>\n    </div>\n}\n\nexport default OnlineResult;","import React from 'react';\n\nfunction SeeAllLink({total, found, term, url}) {\n    if(!total) {\n        total = 0;\n    }\n\n    if (total <= found) {\n        return <div className=\"see-all-link--empty\"/>;\n    }\n\n    if (!term) {\n        return <div className=\"see-all-link--badge\">\n            <a href={url}>See all</a>\n        </div>;\n    }\n\n    return (\n        <div className=\"see-all-link\">\n            <span className=\"see-all-link__prefix\">></span> <a href={url}>See all {total.toLocaleString()} {term}</a>\n        </div>\n    );\n}\n\nexport default SeeAllLink;","import React from 'react';\n\n/**\n * A single result class box\n *\n * @param client object GraphQL client\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @param searchUrl string URL to link to search.\n * @return {*}\n * @constructor\n */\nfunction ResultsBox({heading, searchUrl, seeAll, children}) {\n    return (\n        <div className=\"bento-results-box\" aria-live=\"polite\">\n            <div className=\"bento-results-box__header-row\">\n                <h2>{heading}</h2>\n                {seeAll}\n            </div>\n            {children}\n        </div>\n    )\n}\n\nexport default ResultsBox;","import React from 'react';\nimport ResultsBox from './ResultsBox';\n\n/**\n * Contents of result box when waiting for results\n *\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @return {*}\n * @constructor\n */\nfunction LoadingBox({heading}) {\n    return (\n        <ResultsBox heading={heading}>\n            <div className='bento-results-box__loading-notice'>Loading...</div>\n        </ResultsBox>\n    )\n}\n\nexport default LoadingBox;","import React from 'react';\nimport ResultsBox from './ResultsBox';\n\n/**\n * Contents of result box after error\n *\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @return {*}\n * @constructor\n */\nfunction ErrorBox({heading}) {\n    return (\n        <ResultsBox heading={heading}>\n            <div className=\"bento-results-box__error-notice\">There was an error performing this search.</div>\n        </ResultsBox>\n    )\n}\n\nexport default ErrorBox;","import React from 'react';\nimport ResultsBox from './ResultsBox';\n\n/**\n * Contents of result after no result search\n *\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @param content\n * @return {*}\n * @constructor\n */\nfunction NoResultsBox({heading, content}) {\n    return (\n        <ResultsBox heading={heading}>\n            <div className=\"bento-results-box__no-results\">{content}</div>\n        </ResultsBox>\n    )\n\n}\n\nexport default NoResultsBox;","import React from 'react';\n\n/**\n * List of result from search\n *\n * @param docs array Docs array from GraphQL result\n * @param classPrefix string Prefix for element class\n * @param renderResult function Function that maps a GraphQL doc to a single JSX result entry\n * @return {*}\n * @constructor\n */\nfunction ResultList({docs, classPrefix, renderResult}) {\n    return <div className={`${classPrefix}-results-box`}>\n        <ol className={`${classPrefix}-results-list`}>\n            {docs.map(renderResult)}\n        </ol>\n    </div>\n}\n\nexport default ResultList;","/**\n * Log client events to server\n *\n * Used to report back on significant events (errors, debug info, etc). Log events\n * are flushed to the server in batches to reduce server traffic.\n */\n\n/**\n * Events queue\n *\n * @type {Array}\n */\nconst events = [];\n\n/**\n * Total score of events in queue\n *\n * @type {number}\n */\nlet totalLogScore = 0;\n\n/**\n * Send all the events in queue when score matches this.\n *\n * @type {number}\n */\nconst flushOnScore = 10;\n\n// Flush log on page close.\nwindow.addEventListener(\"unload\", flush, false);\n\n/**\n * Add an event to the log and flush if needed.\n *\n * @param {string} level\n * @param {string} message\n * @param {number} score\n */\nfunction addEntry(level, message, score = 1) {\n\n    // Add to entries queue.\n    events.push({level, message});\n\n    // If log score is over a certain amount, flush.\n    totalLogScore += score;\n    if (totalLogScore > flushOnScore) {\n        flush();\n    }\n}\n\nconst Logger = {\n    /**\n     * @param {string} message\n     */\n    emergency: message => {\n        addEntry('emergency', message, 100);\n        flush();\n    },\n\n    /**\n     * @param {string} message\n     */\n    alert: message => {\n        addEntry('alert', message, 10);\n    },\n\n    /**\n     * @param {string} message\n     */\n    critical: message => {\n        addEntry('critical', message, 10);\n        flush();\n    },\n\n    /**\n     * @param {string} message\n     */\n    error: message => {\n        addEntry('error', message, 3);\n    },\n\n    /**\n     * @param {string} message\n     */\n    warning: message => {\n        addEntry('warning', message, 2);\n    },\n\n    /**\n     * @param {string} message\n     */\n    info: message => {\n        addEntry('info', message);\n    },\n\n    /**\n     * @param {string} message\n     */\n    debug: message => {\n        addEntry('debug', message);\n    }\n};\n\nfunction sendEntries() {\n    const data = JSON.stringify({\n        events: events\n    });\n    navigator.sendBeacon(process.env.REACT_APP_LOGGING_ENDPOINT, data);\n}\n\n// Send entries and zero-out the list.\nfunction flush() {\n    sendEntries();\n    events.length = 0;\n    totalLogScore = 0;\n}\n\nexport {Logger};\n","import React from 'react';\nimport {useQuery} from \"@apollo/react-hooks\";\nimport SeeAllLink from \"./SeeAllLink\";\nimport LoadingBox from \"./LoadingBox\";\nimport ErrorBox from \"./ErrorBox\";\nimport NoResultsBox from \"./NoResultsBox\";\nimport ResultList from \"./ResultList\";\nimport ResultsBox from \"./ResultsBox\";\nimport {Logger} from \"../Logger\";\n\n/**\n * Fetch data from GraphQL and render result box\n *\n * @param client object GraphQL client\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @param term string Term for result (e.g. \"articles\")\n * @param classPrefix string Prefix for element class\n * @param renderResult function Function that maps a GraphQL doc to a single JSX result entry\n * @param query object The GraphQL query to execute.\n * @return {*}\n * @constructor\n */\nfunction ResultsBoxContainer({client, heading, term, classPrefix, renderResult, query, noResultsContent = 'There are no results matching your search.', handleFetch, modifier}) {\n\n    try {\n\n        // Perform GraphQL query\n        const {loading, error, data} = useQuery(query.gql, {client});\n\n        if (loading) {\n            return <LoadingBox heading={heading}/>\n        }\n\n        if (error) {\n            return <ErrorBox heading={heading}/>\n        }\n\n        // Response came back successfully, but there aren't any hits.\n        if (data[query.object].total === 0) {\n            return <NoResultsBox heading={heading} content={noResultsContent}/>\n        }\n\n        // Success! Build response.\n        const docs = data[query.object].docs ? data[query.object].docs : data[query.object].results;\n        passStateUp(handleFetch, docs);\n        const searchUrl = data[query.object].searchUrl;\n        const seeAll = <SeeAllLink term={term} total={data[query.object].total} found={docs.length} url={searchUrl}/>;\n        heading = <a href={searchUrl}>{heading}</a>;\n\n        return (\n            <ResultsBox heading={heading} seeAll={seeAll} searchUrl={searchUrl}>\n                {modifier}\n                <ResultList classPrefix={classPrefix} docs={docs} renderResult={renderResult}/>\n            </ResultsBox>\n        )\n    } catch (err) {\n        Logger.error(`Error on GraphQL search: ${query.gql}`);\n        return <ErrorBox heading={heading}/>\n    }\n}\n\n/**\n * Execute callbacks from props and pass list of responses up\n *\n * @param handleFetch\n * @param docs\n */\nfunction passStateUp(handleFetch, docs) {\n    if (handleFetch) {\n        handleFetch(docs ? docs : []);\n    }\n}\n\nexport default ResultsBoxContainer;","/**\n * Cleans user input for submitting to GraphQL\n *\n * @param string string The search string\n * @return {void | string | never}\n */\nfunction cleanGraphQLInput(string) {\n    return string.replace(/\"/g, '\\\\\"').replace('/\\\\/g', '\\\\').replace(/(\\r\\n|\\n|\\r)/gm,' ');\n}\n\nexport {cleanGraphQLInput};","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\n/**\n * Query for only online resources\n */\nclass OnlineQuery {\n    gql;\n    object = 'searchOnline';\n\n    constructor(searchString) {\n        this.gql = forOnline(searchString);\n    }\n}\n\nfunction forOnline(searchString) {\n    return gql`\n{\n  searchOnline( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    docs {\n      id,\n      title,\n      date,\n      type,\n      creator,\n      contributors,\n      coverImages { \n        url\n      },\n      available,\n      isPhysical,\n      isElectronic,\n      screenCap,\n      mms,\n    },   \n    searchUrl,\n    didUMean,\n    total\n  }\n}`;\n}\n\nexport {OnlineQuery};","import React from 'react';\nimport OnlineResult from \"./OnlineResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {OnlineQuery} from \"./OnlineQuery\";\n\n/**\n * Online results box\n *\n * @param searchString string The search string from user input\n * @param client object GraphQL client\n * @param toggle\n * @return {*}\n * @constructor\n */\nfunction OnlineResults({searchString, client, toggle}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Books & more'}\n            classPrefix={'books'}\n            term={'items'}\n            query={new OnlineQuery(searchString)}\n            renderResult={doc => <OnlineResult item={doc} key={`book-${doc.id}`}/>}\n            noResultsContent={noResultContent(searchString)}\n            modifier={toggle}\n        />\n    );\n}\n\nfunction noResultContent(searchString) {\n    const encodedSearchString = encodeURIComponent(searchString);\n    const worldCatSearchURL = `https://bc.on.worldcat.org/search?databaseList=&queryString=${encodedSearchString}`;\n\n    return (\n        <div className=\"catalog-no-results-box\">\n            <p>There are no results matching your search.</p>\n            <p className=\"catalog-no-results-box__worldcat-advice\">\n                Try your search in <a href={worldCatSearchURL}>WorldCat</a> for results beyond BC Libraries.\n            </p>\n        </div>\n    );\n}\n\nexport default OnlineResults;","import React from 'react';\n\n/**\n * Links to FullText in Browzine\n *\n * @param {object} libkeyAvailability\n * @param {string} libkeyAvailability.fullTextFile\n * @param {string} libkeyAvailability.browzineWebLink\n * @constructor\n */\nfunction BrowzineBadge({libkeyAvailability}) {\n    return (\n        <div className=\"browzine-badge\">\n            {libkeyAvailability.fullTextFile &&\n            <a href={libkeyAvailability.fullTextFile} className=\"browzine-badge__download-now\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src=\"https://assets.thirdiron.com/images/integrations/browzine-pdf-download-icon.svg\" className=\"browzine-pdf-icon\" aria-hidden=\"true\" width=\"12\" height=\"16\" alt=\"\"/>\n                <span className=\"browzine-web-link-text\">Download Now\n                    <span className=\"browzine-badge__pdf_notice\"> (PDF)</span>\n                </span>\n            </a>\n            }\n\n            {libkeyAvailability.browzineWebLink &&\n            <a className=\"browzine-badge__view-issue\" href={libkeyAvailability.browzineWebLink}  aria-hidden=\"true\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src=\"https://assets.thirdiron.com/images/integrations/browzine-open-book-icon.svg\" className=\"browzine-book-icon\" aria-hidden=\"true\" width=\"15\" height=\"15\" alt=\"\"/>\n                <span className=\"browzine-web-link-text\">View Issue Contents</span>\n            </a>\n            }\n        </div>\n    );\n}\n\nexport default BrowzineBadge;","import React from 'react';\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport BrowzineBadge from './BrowzineBadge';\n\nfunction ArticleResult({article}) {\n    return <li className=\"article-result-item media\">\n        <div className=\"media-body\">\n            <h3 className=\"article-result-item__media-heading media-heading\">\n                <a href={PrimoRecordLink(article, true)} className=\"article-result-item__title\" target=\"_blank\" rel=\"noreferrer noopener\">\n                    {article.title}\n                </a>\n            </h3>\n\n            {article.date}\n\n            <div className=\"article-result-item__creator\">{article.creator}</div>\n            <div className=\"article-result-item__publisher\">\n                {formatPartOf(article.isPartOf, article.journalTitle)}\n            </div>\n\n            {article.libkeyAvailability && <BrowzineBadge libkeyAvailability={article.libkeyAvailability}/>}\n\n        </div>\n    </li>;\n}\n\n// @TODO Replace\nfunction formatPartOf(part_of, journal_title) {\n    part_of = part_of.length > 0 ? part_of[0] : '';\n\n    const parts = part_of.split(journal_title);\n\n    if (!journal_title || parts.length !== 2) {\n        return <span>{part_of}</span>\n    }\n\n    return <span className=\"article-result-item__journal-title\">\n            {parts[0]}<cite>{journal_title}</cite>{parts[1]}\n        </span>\n}\n\nexport default ArticleResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\nclass ArticlesQuery {\n    gql;\n    object = 'searchArticles'\n\n    constructor(searchString) {\n        this.gql = forArticles(searchString);\n    }\n}\n\n/**\n * Get query for articles\n *\n * @param searchString string\n */\nfunction forArticles(searchString) {\n    return gql`\n{\n  searchArticles( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    docs {\n      id,\n      title,\n      date,\n      type,\n      dOI,\n      creator,\n      contributors,\n      coverImages {\n        url\n      },\n      isPartOf,\n      journalTitle\n            libkeyAvailability {\n        fullTextFile\n        contentLocation\n        availableThroughBrowzine\n        browzineWebLink\n        journals {\n          browzineEnabled\n          browzineWebLink\n        }\n      }\n    },   \n    searchUrl,\n    didUMean,\n    total\n  }\n}`;\n}\n\nexport {ArticlesQuery};","import React from 'react';\nimport ArticleResult from \"./ArticleResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {ArticlesQuery} from \"./ArticlesQuery\";\n\n/**\n * Article results box\n *\n * @param {string} searchString  The search string from user input\n * @param {object} client GraphQL client\n * @param {function} handleFetch Called when new results are fetched\n * @return {*}\n * @constructor\n */\nfunction ArticleResults({searchString, client, handleFetch}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Articles'}\n            classPrefix={'articles'}\n            term={'articles'}\n            query={new ArticlesQuery(searchString)}\n            renderResult={doc => <ArticleResult article={doc} key={`article-${doc.id}`}/>}\n            handleFetch={handleFetch}\n        />\n    );\n}\n\nexport default ArticleResults;","import React from 'react';\n\nfunction FaqResult({result}) {\n    return <li><a href={result.url}>{result.question}</a></li>;\n}\n\nexport default FaqResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\nclass FAQQuery {\n    gql;\n    object = 'searchFAQ';\n\n    constructor(searchString) {\n        this.gql = forFAQ(searchString);\n    }\n}\n\n/**\n * Get query for FAQ results\n *\n * @param searchString\n */\nfunction forFAQ(searchString) {\n    return gql`\n{\n  searchFAQ( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    results {\n      id,\n      question,\n      url\n    },   \n    searchUrl,\n    total\n  }\n}`\n}\n\nexport {FAQQuery};","import React from 'react';\nimport FaqResult from \"./FaqResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {FAQQuery} from \"./FAQQuery\";\n\n/**\n * FAQ results box\n *\n * @param searchString string The search string from user input\n * @param client object GraphQL client\n * @return {*}\n * @constructor\n */\nfunction FaqResults({searchString, client}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'FAQ'}\n            classPrefix={'faq'}\n            term={'results'}\n            query={new FAQQuery(searchString)}\n            renderResult={doc => <FaqResult result={doc} key={`answer-${doc.id}`}/>}\n        />\n    );\n}\n\nexport default FaqResults;","import React from 'react';\n\nfunction LibrarianResult({librarian}) {\n    const url = `http://libguides.bc.edu/prf.php?account_id=${librarian.id}`;\n    const img_url = `//${librarian.image}`;\n    const alt = `picture of ${librarian.name}`;\n    const display_subjects = librarian.subjects.sort().join(', ');\n\n\n    return <li className=\"media\">\n        <div className=\"media-left\">\n            <a href={url}><img src={img_url} alt={alt}/></a>\n        </div>\n\n        <div className=\"media-body\">\n            <h3 className=\"media-heading\">\n                <a href={url}>{librarian.name}</a>\n            </h3>\n            <p className=\"guide-description\">{display_subjects}</p>\n        </div>\n    </li>;\n}\n\nexport default LibrarianResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\n/**\n * Books and more query\n */\nclass LibrariansQuery {\n    gql;\n    object = 'recommendLibrarian';\n\n    constructor(searchString) {\n        this.gql = forLibrarians(searchString);\n    }\n}\n\nfunction forLibrarians(searchString) {\n    return gql`\n{\n  recommendLibrarian( keyword: \"${cleanGraphQLInput(searchString)}\") {\n    total\n    searchUrl\n    docs {\n      id\n      name\n      email\n      subjects\n      image\n    }\n  }\n}`;\n}\n\nexport {LibrariansQuery};","import React from 'react';\nimport LibrarianResult from \"./LibrarianResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {LibrariansQuery} from \"./LibrariansQuery\";\n\nfunction LibrarianResults({searchString, client}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Librarians'}\n            classPrefix={'librarian'}\n            term={'librarians'}\n            query={new LibrariansQuery(searchString)}\n            renderResult={doc => <LibrarianResult librarian={doc} key={`librarian-${doc.id}`}/>}\n        />\n    );\n}\n\nexport default LibrarianResults;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\nclass VideosQuery {\n    gql;\n    object = 'searchVideo'\n\n    constructor(searchString) {\n        this.gql = forVideos(searchString);\n    }}\n\n/**\n * Get query for videos\n *\n * This query is the same as for Books & More.\n *\n * @param searchString string\n * @return {*}\n */\nfunction forVideos(searchString) {\n    return gql`\n{\n  searchVideo( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    docs {\n      id,\n      title,\n      date,\n      type,\n      creator,\n      contributors,\n      coverImages { \n        url\n      },\n      available,\n      isPhysical,\n      isElectronic,\n      screenCap,\n      format,\n      mms,\n      holdings {\n        ilsId,\n        libraryCode,\n        locationDisplay,\n        locationCode,\n        availabilityStatus,\n        callNumber,\n        items {\n          availability,\n          locationCode,\n          location,\n          libraryDisplay,\n          library,\n          callNumber\n          }\n        }\n    },   \n    searchUrl,\n    didUMean,\n    total\n  }\n}`;\n}\n\nexport {VideosQuery};","import React from 'react';\nimport VideoResult from \"./VideoResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {VideosQuery} from \"./VideosQuery\";\n\n/**\n * Video results box\n *\n * @param searchString string The search string from user input\n * @param client object GraphQL client\n * @return {*}\n * @constructor\n */\nfunction VideoResults({searchString, client}) {\n    return <ResultsBoxContainer\n        client={client}\n        heading={'Videos'}\n        classPrefix={'videos'}\n        term={'videos'}\n        query={new VideosQuery(searchString)}\n        renderResult={doc => <VideoResult item={doc} key={`video-${doc.id}`}/>}\n    />\n}\n\nexport default VideoResults;","import React from 'react';\n\nfunction WebsiteResult({hit}) {\n    return <li className=\"website-hit\">\n        <h3 className=\"website-hit__title\">\n            <a href={hit.url}>{hit.title}</a>\n        </h3>\n        in <a href={hit.guideUrl} className=\"website-hit__guide-title\">{hit.guideTitle}</a>\n        <div className=\"website-hit__highlight\" dangerouslySetInnerHTML={getHighlight(hit)}/>\n    </li>\n}\n\nfunction getHighlight(hit) {\n    return {__html: hit.highlight[1]};\n}\n\nexport default WebsiteResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\n/**\n * Books and more query\n */\nclass WebsiteQuery {\n    gql;\n    object = 'searchWebsite';\n\n    constructor(searchString) {\n        this.gql = forWebsite(searchString);\n    }\n}\n\nfunction forWebsite(searchString) {\n    return gql`\n{\n  searchWebsite( keyword: \"${cleanGraphQLInput(searchString)}\") {\n    total\n    searchUrl\n    docs {\n      title\n      guideTitle\n      updated\n      url\n      guideUrl\n      fullTitle\n      highlight\n    }\n  }\n}`;\n}\n\nexport {WebsiteQuery};","import React from 'react';\nimport WebsiteResult from \"./WebsiteResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {WebsiteQuery} from \"./WebsiteQuery\";\n\nfunction WebsiteResults({searchString, client}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Our Website'}\n            classPrefix={'website'}\n            term={'results'}\n            query={new WebsiteQuery(searchString)}\n            renderResult={doc => <WebsiteResult hit={doc} key={`hit-${doc.url}`}/>}\n        />\n    );\n}\n\nexport default WebsiteResults;","/**\n * A linked fulltext response\n *\n * @property {string} source\n * @property {string} title\n * @property {string} doi\n * @property {string[]} authors\n * @property {string} containerTitle\n * @property {string} date\n * @property {string} issueInfo\n * @property {string} link\n */\nclass FullTextItem {\n    constructor(source) {\n        this.source = source;\n        this.title = null;\n        this.doi = null;\n        this.authors = [];\n        this.containerTitle = null;\n        this.date = null;\n        this.issueInfo = null;\n        this.link = null;\n    }\n}\n\nexport {FullTextItem};","import {FullTextItem} from \"./FullTextItem\";\n\n// For converting month numbers to strings.\nconst months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n];\n\n\n/**\n * Convert a Crossref response into a FullTextItem\n *\n * @param {object} crossrefData Crossref data from a BestBet lookup response\n * @return {FullTextItem}\n */\nfunction buildFulltextFromCrossref(crossrefData) {\n    const fullText = new FullTextItem('crossref');\n    fullText.title = crossrefData.titles[0];\n    fullText.doi = crossrefData.DOI;\n    fullText.authors = buildAuthors(crossrefData.authors);\n    fullText.containerTitle = buildContainerTitle(crossrefData.containerTitles);\n    fullText.date = crossrefData.publishedPrintDate.length > 0 ? buildDate(crossrefData.publishedPrintDate) : buildDate(crossrefData.publishedOnlineDate);\n    fullText.issueInfo = buildIssue(crossrefData.volume, crossrefData.issue, crossrefData.page);\n    return fullText\n}\n\n/**\n * Extract the journal title from Crossref containerTitles array\n *\n * @param {string[]} containerTitles\n * @return {null}\n */\nfunction buildContainerTitle(containerTitles) {\n    return containerTitles && containerTitles[0] ? containerTitles[0] : null;\n}\n\n/**\n * Convert Crossref date arrays to a human-readable date\n *\n * @param {int[]|null} dateData A date data field from Crossref\n * @return {string|null}\n */\nfunction buildDate(dateData) {\n\n    // No date? No date.\n    if (dateData === undefined) {\n        return '';\n    }\n\n    // Crossref dates are are made up of an array of 1-3 numbers: [year, month, day].\n    const datePartCount = dateData.length;\n\n    // No numbers? No date.\n    if (datePartCount === 0) {\n        return null;\n    }\n\n    // Just one number? It's a year.\n    const year = dateData[0];\n    if (datePartCount === 1) {\n        return `${year},`;\n    }\n\n    // Two numbers? Year and month.\n    const month = months[dateData[1] - 1];\n    if (datePartCount === 2) {\n        return `${month} ${year},`;\n    }\n\n    // Three numbers is a full date.\n    return `${month} ${year} ${dateData[2]},`;\n}\n\n/**\n * Build a human-readable statement describing the journal volume/issue/page range\n *\n * @param {string} volume\n * @param {string} issue\n * @param {string} page\n * @return {string}\n */\nfunction buildIssue(volume, issue, page) {\n    const issueInfo = [];\n\n    // Build \"volume (issue)\" component\n    if (volume && !issue) {\n        issueInfo.push(`${volume}`);\n    } else if (issue && !volume) {\n        issueInfo.push(`${issue}`);\n    } else if (volume && issue) {\n        issueInfo.push(`${volume} (${issue})`);\n    }\n\n    // Build pages component\n    if (page && page.includes('-')) {\n        issueInfo.push(`pp. ${page}`);\n    } else if (page) {\n        issueInfo.push(`p. ${page}`);\n    }\n\n    // If there are multiple components, join them with commas.\n    return issueInfo.join(', ');\n}\n\n/**\n * Convert Crossref authors array to \"Last, First\" format\n *\n * @param authors\n * @return {Array|*}\n */\nfunction buildAuthors(authors) {\n    if (authors === undefined || authors.length === 0) {\n        return [];\n    }\n    return authors.map(auth => `${auth.familyName}, ${auth.givenName}`);\n}\n\n\nexport {buildFulltextFromCrossref};","/**\n * A Best Bet we created (e.g. a database or LibAnswers response)\n *\n * @property {string} title\n * @property {string} displayText\n * @property {string} link\n */\nclass LocalBestBet {\n    constructor(bestBetResult) {\n        this.title = bestBetResult.title;\n        this.displayText = bestBetResult.displayText;\n        this.link = bestBetResult.link\n    }\n}\n\nexport {LocalBestBet};","import {buildFulltextFromCrossref} from \"./CrossrefFulltextBuilder\";\nimport {buildFulltextFromPCI} from \"./PCIFulltextBuilder\";\nimport {LocalBestBet} from \"./LocalBestBet\";\n\n/**\n * Decide what to return as a Top Result\n *\n * @param {object} bestBet\n * @param {object[]} articles\n * @param {string} searchString\n * @return {FullTextItem|LocalBestBet|null}\n */\nfunction decideBestBet(bestBet, articles, searchString) {\n\n    // Return local best bets (e.g. database, LibAnswers question, etc) first.\n    if (bestBet && bestBet.displayText) {\n        return new LocalBestBet(bestBet);\n    }\n\n    // If there is a fullText best bet and it is not a review, display it.\n    if (bestBet && bestBet.fullText && !doiIsReview(bestBet.fullText.crossRefData.DOI, articles)) {\n        const fullTextItem = buildFulltextFromCrossref(bestBet.fullText.crossRefData);\n        const libKey = bestBet.fullText.libKeyData;\n        fullTextItem.link = libKey.fullTextFile ? libKey.fullTextFile : libKey.contentLocation;\n        return fullTextItem;\n    }\n\n    // If there is an article from PCI that has fulltext and appears to be a match, display that.\n    if (articles) {\n    const articleHits = findArticleMatches(searchString, articles);\n    if (articleHits.length > 0) {\n        const fullTextItem = buildFulltextFromPCI(articleHits[0]);\n        const libKey = articleHits[0].libkeyAvailability;\n        fullTextItem.link = libKey.fullTextFile ? libKey.fullTextFile : libKey.contentLocation;\n        return fullTextItem;\n    }}\n\n    // No best bet.\n    return null;\n}\n\n\n/**\n * Is the DOI a review?\n *\n * @param {string} fullTextDOI\n * @param {Object[]} articleRecords\n * @param {string} articleRecords[].doi\n */\nfunction doiIsReview(fullTextDOI, articleRecords) {\n    articleRecords = articleRecords ? articleRecords : [];\n    let isReview = false;\n    fullTextDOI = fullTextDOI.toLowerCase();\n\n    // Is there any article that shares a DOI and is listed as a review?\n    articleRecords.forEach(article => {\n        const articleDOI = article.dOI ? article.dOI.toLowerCase() : '';\n        if (fullTextDOI === articleDOI && article.type === 'review') {\n            isReview = true;\n        }\n    });\n\n    return isReview;\n}\n\n/**\n * Build a list of PCI articles that match the search\n *\n * @param {string} searchString\n * @param {object[]} articleRecords\n * @param {string} articleRecords.title\n * @return {*}\n */\nfunction findArticleMatches(searchString, articleRecords) {\n    return articleRecords.filter(article => {\n\n        // Title must be long enough to definitively match.\n        const longEnough = article.title.length > 40;\n\n        // Title must match the search string exactly (minus spacing/capitalization)\n        const matchesSearchString = searchString.toLowerCase().trim() === article.title.toLowerCase().trim();\n\n        // Article must match all above and have a full text link to display.\n        return longEnough && matchesSearchString && hasFullText(article.libkeyAvailability);\n    });\n}\n\n/**\n * Can we find a file/page to link to?\n *\n * @param {object} libkeyAvailability Availability data from LibKey\n * @param {string} libkeyAvailability.fullTextFile Link to a LibKey PDF\n * @param {string} libkeyAvailability.contentLocation Link to the article page\n * @return {boolean}\n */\nfunction hasFullText(libkeyAvailability) {\n    if (! libkeyAvailability) {\n        return false;\n    }\n    return libkeyAvailability.fullTextFile !== '' || libkeyAvailability.contentLocation !== '';\n}\n\nexport {decideBestBet};","import {FullTextItem} from \"./FullTextItem\";\n\n/**\n * Convert a PCI response into a FullTextItem\n *\n * @param {object} article Article response from PCI\n * @return {FullTextItem}\n */\nfunction buildFulltextFromPCI(article) {\n    const fulltext = new FullTextItem('pci');\n    fulltext.title = article.title;\n    fulltext.doi = article.dOI;\n\n    // PCI creators list come in semi-colon-delimited string. Split it up and let the\n    // front-end component determine how to display authors.\n    fulltext.authors = article.creator ? article.creator.split('; ') : [];\n\n    fulltext.date = article.date;\n    fulltext.containerTitle = article.journalTitle.length > 0 ? article.journalTitle[0] : null;\n\n    // PCI's isPartOf is a mish-mash of journal title, volume, issue, and page information.\n    fulltext.issueInfo = article.isPartOf.length > 0 ? article.isPartOf[0] : null;\n\n    return fulltext;\n}\n\nexport {buildFulltextFromPCI};","import React from \"react\";\nimport {Logger} from \"../../Logger\";\n\n/**\n * Display a Best Bet we created (e.g. a database or LibAnswers response)\n *\n * @param {LocalBestBet} bestBet\n * @return {*}\n * @constructor\n */\nfunction LocalBestBetResult({bestBet}) {\n    Logger.info(`Local Best Bet Result displayed: ${bestBet.title}`);\n\n    function logClick() {\n        Logger.info(`Local Best Bet Result clicked: ${bestBet.title}`);\n    }\n\n    return (\n        <div className='best-bet-row'>\n            <h2 className='best-bet-row__heading'>Top result</h2>\n            <div className='best-bet-result'>\n                <h3 className='best-bet-result__title'>\n                    {\n                        bestBet.link ? (\n                            <a href={bestBet.link} onClick={logClick}>{bestBet.title}</a>\n                        ) : (\n                            <span>{bestBet.title}</span>\n                        )\n                    }\n                </h3>\n                <div dangerouslySetInnerHTML={{__html: bestBet.displayText}}/>\n            </div>\n        </div>\n    )\n}\n\nexport default LocalBestBetResult;","import React from \"react\";\nimport {Logger} from \"../../Logger\";\n\n/**\n * Display a linked fulltext response\n *\n * @param {FullTextItem} fullText\n * @return {*}\n * @constructor\n */\nfunction FullTextResult({fullText}) {\n    Logger.info(`FullText Best Bet Result displayed: ${fullText.title} ${fullText.doi}`);\n\n    function logClick() {\n        Logger.info(`FullText Best Bet Result clicked: ${fullText.title} ${fullText.doi}`);\n    }\n\n    return (\n        <div className='best-bet-row'>\n            <h2 className='best-bet-row__heading'>Top result</h2>\n            <div className='best-bet-result'>\n                <h3 className='best-bet-result__title'><a href={fullText.link} onClick={logClick}>{fullText.title}</a></h3>\n                <p className='best-bet-result__author'>\n                    {authorLine(fullText.authors)}\n                </p>\n                <p className='best-bet-result__publication'>\n                    {citationLine(fullText)}\n                </p>\n                <p className='best-bet-result__doi'>doi:{fullText.doi}</p>\n                <a href={fullText.link} className=\"pull-right btn btn-primary\">Read</a>\n            </div>\n        </div>\n    );\n}\n\n/**\n * Shorten long lists of authors and return as semi-colon delimited list\n *\n * @param {string[]} authors\n * @return {string}\n */\nfunction authorLine(authors) {\n    const originalLength = authors.length;\n    authors = authors.slice(0, 6);\n    if (originalLength > 6) {\n        authors.push('et. al.');\n    }\n    return authors.join('; ');\n}\n\n/**\n * Return journal, volume, issue, and page string\n *\n * @param {FullTextItem} fullText\n * @return {string}\n */\nfunction citationLine(fullText) {\n    // Primo Central smashes all of this info into one field. Crossref provides atomic\n    // fields.\n    return fullText.source === 'pci' ?\n        fullText.issueInfo :\n        `${fullText.containerTitle} ${fullText.date} ${fullText.issueInfo}`;\n}\n\nexport default FullTextResult;\n","import React from 'react';\nimport gql from \"graphql-tag\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\nimport {decideBestBet} from \"./decideBestBet\";\nimport {LocalBestBet} from \"./LocalBestBet\";\nimport LocalBestBetResult from \"./LocalBestBetResult\";\nimport {FullTextItem} from \"./FullTextItem\";\nimport FullTextResult from \"./FullTextResult\";\n\n/**\n * Find and show the appropriate best bet\n *\n * @param {string} searchString\n * @param {object} client Apollo client\n * @param {object[]} articleResults Array of article results from PCI\n * @return {null|*}\n * @constructor\n */\nfunction BestBetLookup({searchString, client, articleResults}) {\n    const {loading, error, data} = useQuery(forBestBets(searchString), {client});\n\n    // Don't display anything until we have both article results and best bet lookup results.\n    if (loading || error || !data || !articleResults) {\n        return null;\n    }\n\n    // Decide on a best bet from all available data.\n    const bestBet = decideBestBet(data.bestBet, articleResults, searchString);\n    if (bestBet instanceof LocalBestBet) {\n        return <LocalBestBetResult bestBet={bestBet}/>\n    } else if (bestBet instanceof FullTextItem) {\n        return (\n            <FullTextResult fullText={bestBet}/>\n        );\n    }\n\n    // Didn't find a best bet...\n    return null;\n}\n\n/**\n * Get query for Best Bets\n *\n * @param searchString\n */\nfunction forBestBets(searchString) {\n    return gql`\n{\n  bestBet( keyword: \"${cleanGraphQLInput(searchString)}\") {\n    id\n    title\n    ...on LocalBestBet {\n      displayText\n      link\n    }\n    ...on CitationBestBet {\n      fullText {\n        libKeyData {\n          fullTextFile,\n          browzineWebLink\n          contentLocation\n        }\n        crossRefData {\n          titles\n          DOI\n          authors {\n            givenName\n            familyName\n            sequence\n          }\n          containerTitles\n          volume\n          issue\n          page\n          publishedPrintDate\n        }\n      }\n    }\n  }\n}`\n}\n\nexport default BestBetLookup;","import React from 'react';\n\nfunction SkipToLink({target, label}) {\n\n    const handleClick = (event) => {\n        if (target.current) {\n            target.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start'\n            });\n        }\n    };\n\n    return <div><span className=\"link-to-results__skip_to_link\" onClick={handleClick}>{label}</span></div>;\n\n}\n\nexport default SkipToLink;","import React from 'react';\nimport SkipToLink from \"./SkipToLink\";\n\nfunction SkipToLinkBar({booksDiv, articlesDiv, faqDiv, librariansDiv, videoDiv, websiteDiv}) {\n    return (\n        <div className=\"row\">\n            <nav className=\"link-to-results col-md-8\">\n                <div className=\"link-to-results__skip-to\">Skip to:</div>\n                <SkipToLink target={booksDiv} label=\"Books & more\"/>\n                <SkipToLink target={articlesDiv} label=\"Articles\"/>\n                <SkipToLink target={faqDiv} label=\"FAQ\"/>\n                <SkipToLink target={librariansDiv} label=\"Librarians\"/>\n                <SkipToLink target={videoDiv} label=\"Video\"/>\n                <SkipToLink target={websiteDiv} label=\"Website\"/>\n            </nav>\n            <div className=\"tell-us col-md-4\"><a href=\"https://forms.gle/cfqoEnM6s13KLWJu9\">Tell us what you think!</a></div>\n        </div>\n    );\n}\n\nexport {SkipToLinkBar};\n","import ApolloClient from 'apollo-boost';\nimport { IntrospectionFragmentMatcher } from 'apollo-cache-inmemory';\nimport introspectionQueryResultData from './fragmentTypes.json';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\n\n// Using GraphQL fragments (in Best Bet lookup) requires a local schema file.\nconst fragmentMatcher = new IntrospectionFragmentMatcher({\n    introspectionQueryResultData\n});\n\nconst cache = new InMemoryCache({ fragmentMatcher });\n\nconst apolloClient = new ApolloClient({\n    cache,\n    uri: process.env.REACT_APP_GRAPHQL_ENDPOINT,\n    link: new HttpLink()\n});\n\nexport {apolloClient};","import React from 'react';\nimport ErrorBox from \"./ErrorBox\";\nimport {Logger} from \"../Logger\";\n\nclass SearchComponentErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {hasError: false};\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.error(error);\n        console.error(errorInfo);\n        Logger.error(`${error.message}: ${errorInfo.componentStack}`);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <ErrorBox heading={'Error'}/>\n        }\n\n        return this.props.children;\n    }\n\n}\n\nexport default SearchComponentErrorBoundary;","import React from 'react';\nimport VideoResult from \"../video/VideoResult\";\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport AvailabilityContainer from \"../availability/AvailabilityContainer\";\n\nfunction BookResult({item}) {\n    if (item.isElectronic && item.type === 'Video') {\n        return <VideoResult item={item} inCatalogResult={true}/>;\n    }\n\n    const link = PrimoRecordLink(item);\n\n    return <li className=\"catalog-result-item media\">\n\n        <div className=\"media-body\">\n            <h3 className=\"catalog-result-item__media-heading media-heading\">\n                <a href={link} className=\"catalog-result-item__title\">\n                    {item.title}\n                </a>\n            </h3>\n\n            <div className=\"catalog-result-item__creator\">{creatorName(item)}</div>\n\n            <div className=\"catalog-result-item__publisher\">\n                {item.publisher} {item.date}\n            </div>\n\n            <div className=\"catalog-result-item__type\">{item.type}</div>\n\n            {item.isElectronic && getItLink(item)}\n\n            {item.isPhysical && physicalAvailability(item)}\n\n        </div>\n\n        {item.coverImages.length > 1 && coverImage(item)}\n    </li>\n}\n\nfunction creatorName(item) {\n    if (item.creator) {\n        return item.creator;\n    }\n\n    if (item.contributors[0]) {\n        return item.contributors[0];\n    }\n\n    return '';\n}\n\nfunction getItLink(item) {\n    return <div className=\"catalog-result-item__getit\"><a href={PrimoRecordLink(item)}>Find online</a></div>;\n}\n\nfunction physicalAvailability(item) {\n    return <AvailabilityContainer item={item} />;\n}\n\nfunction coverImage(item) {\n    const altText = `Catalog record for ${item.title}`;\n    return <div className=\"media-right\">\n        <a href={PrimoRecordLink(item)} aria-hidden=\"true\">\n            <img src={item.coverImages[0].url} alt={altText} className=\"cover-image\"/>\n        </a>\n    </div>\n}\n\nexport default BookResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\n/**\n * Books and more query\n */\nclass BooksAndMoreQuery {\n    gql;\n    object = 'searchCatalog';\n\n    constructor(searchString) {\n        this.gql = forBooksAndMore(searchString);\n    }\n}\n\nfunction forBooksAndMore(searchString) {\n    return gql`\n{\n  searchCatalog( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    docs {\n      id,\n      title,\n      date,\n      type,\n      creator,\n      contributors,\n      coverImages { \n        url\n      },\n      available,\n      isPhysical,\n      isElectronic,\n      screenCap,\n      mms,\n      holdings {\n        ilsId,\n        libraryCode,\n        locationDisplay,\n        locationCode,\n        availabilityStatus,\n        callNumber,\n        items {\n          availability,\n          locationCode,\n          location,\n          libraryDisplay,\n          library,\n          callNumber\n          }\n        }\n    },   \n    searchUrl,\n    didUMean,\n    total\n  }\n}`;\n}\n\nexport {BooksAndMoreQuery};","import React from 'react';\nimport BookResult from \"./BookResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {BooksAndMoreQuery} from \"./BooksAndMoreQuery\";\n\n/**\n * Book results box\n *\n * @param searchString string The search string from user input\n * @param client object GraphQL client\n * @param toggle\n * @return {*}\n * @constructor\n */\nfunction BookResults({searchString, client, toggle}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Books & more'}\n            classPrefix={'books'}\n            term={'items'}\n            query={new BooksAndMoreQuery(searchString)}\n            renderResult={doc => <BookResult item={doc} key={`book-${doc.id}`}/>}\n            noResultsContent={noResultContent(searchString)}\n            modifier={toggle}\n        />\n    );\n}\n\nfunction noResultContent(searchString) {\n    const encodedSearchString = encodeURIComponent(searchString);\n    const worldCatSearchURL = `https://bc.on.worldcat.org/search?databaseList=&queryString=${encodedSearchString}`;\n\n    return (\n        <div className=\"catalog-no-results-box\">\n            <p>There are no results matching your search.</p>\n            <p className=\"catalog-no-results-box__worldcat-advice\">\n                Try your search in <a href={worldCatSearchURL}>WorldCat</a> for results beyond BC Libraries.\n            </p>\n        </div>\n    );\n}\n\nexport default BookResults;","import React, {useState} from 'react';\n\nfunction CatalogToggle({isChecked, handleToggle}) {\n\n    const [isDisplayed, setIsDisplayed] = useState(false);\n\n    function toggleDisplay() {\n        setIsDisplayed(!isDisplayed);\n    }\n\n    const explanationClass = isDisplayed ? 'catalog-toggle__explanation-displayed' : 'catalog-toggle__explanation-hidden';\n\n    return (\n        <div className=\"catalog-toggle\">\n            <div className=\"catalog-toggle__input-group\">\n                <label className=\"catalog-toggle__label\">\n                    <input\n                        type=\"checkbox\"\n                        checked={isChecked}\n                        onChange={handleToggle}\n                    /> Limit to online content\n                </label>\n                <span className=\"catalog-toggle__help-link\" onClick={toggleDisplay}>what's this?</span>\n            </div>\n            <div className={explanationClass}>\n                When this box is checked, search is limited to items available online. Uncheck the box to include our physical collections.\n            </div>\n        </div>\n    );\n}\n\nexport default CatalogToggle;","import {useCallback, useState} from 'react';\n\nfunction useQueryString(key, initialValue) {\n    const [value, setValue] = useState(getQueryStringValue(key) || initialValue);\n\n    const onSetValue = useCallback(\n        newValue => {\n            setValue(newValue);\n            if (newValue === 'true') {\n                setQueryStringValue(key, newValue);\n            } else {\n                deleteQueryStringValue(key);\n            }\n        },\n        [key]\n    );\n\n    return [value, onSetValue];\n}\n\n/**\n * Get a query string value\n *\n * @param key\n * @return {string}\n */\nfunction getQueryStringValue(key) {\n    const queryStringHash = parseQueryString();\n\n    if (queryStringHash.keys.indexOf(key) === -1) {\n        return 'false';\n    }\n\n    return decodeURIComponent(queryStringHash.parameters[key]);\n}\n\n/**\n * Set a value on the query string and push to history\n *\n * @param key\n * @param value\n */\nfunction setQueryStringValue(key, value) {\n\n    const queryHash = parseQueryString();\n    queryHash.parameters[key] = encodeURIComponent(value);\n\n    // If the key isn't present, add it?\n    if (queryHash.keys.indexOf(key) === -1) {\n        queryHash.keys.push(key);\n    }\n    replaceState(queryHash);\n}\n\n/**\n * Set a value on the query string and push to history\n *\n * @param key\n * @param value\n */\nfunction deleteQueryStringValue(key) {\n\n    const queryHash = parseQueryString();\n\n    const index = queryHash.keys.indexOf(key);\n\n    // Delete from the key hash.\n    if (index > -1) {\n        queryHash.keys.splice(index, 1);\n        delete queryHash.parameters['key'];\n    }\n\n    replaceState(queryHash);\n}\n\n\n/**\n * Get an object representing the query string\n *\n * @return {{keys: [], parameters: {}}}\n */\nfunction parseQueryString() {\n\n    // Store parameters in a hash for retrieval. Store keys in an array\n    // to maintain ordering.\n    let queryHash = {\n        parameters: {},\n        keys: []\n    };\n\n\n    const queryStringItems = window.location.search.split('&');\n    for (let i = 0; i < queryStringItems.length; i++) {\n        const [key, val] = queryStringItems[i].split('=');\n        queryHash.parameters[key] = val;\n        queryHash.keys.push(key);\n    }\n\n    return queryHash;\n}\n\nfunction replaceState(queryHash) {\n    const queryStringParts = [];\n    for (let i = 0; i < queryHash.keys.length; i++) {\n        const currentKey = queryHash.keys[i];\n        queryStringParts.push(currentKey + '=' + queryHash.parameters[currentKey]);\n    }\n\n    const newURL = window.location.protocol + \"//\" +\n        window.location.host +\n        window.location.pathname +\n        queryStringParts.join('&');\n    window.history.replaceState({path: newURL}, '', newURL);\n}\n\nexport default useQueryString;","import React, {useRef, useState} from 'react';\nimport OnlineResults from \"./slots/online/OnlineResults\";\nimport ArticleResults from \"./slots/articles/ArticleResults\";\nimport FaqResults from \"./slots/faq/FaqResults\";\nimport LibrarianResults from \"./slots/librarians/LibrarianResults\";\nimport VideoResults from \"./slots/video/VideoResults\";\nimport WebsiteResults from \"./slots/website/WebsiteResults\";\nimport BestBetLookup from \"./slots/bestbets/BestBetLookup\";\nimport {SkipToLinkBar} from \"./SkipToLinkBar\";\nimport {apolloClient} from \"./ApolloClientFactory\";\nimport SearchComponentErrorBoundary from \"./slots/SearchComponentErrorBoundary\";\nimport BookResults from \"./slots/books/BookResults\";\nimport CatalogToggle from \"./slots/CatalogToggle\";\nimport useQueryString from \"./useQueryString\";\n\nfunction SearchResults({searchString}) {\n\n    // Store article results state here to share with BestBetLookup.\n    const [articleResults, setArticleResults] = useState([]);\n    const [isOnlineOnlyString, onSetIsOnlineOnly] = useQueryString('online');\n\n    const isOnlineOnlyBoolean = isOnlineOnlyString === 'true';\n\n    function handleOnlineOnlyToggle() {\n        onSetIsOnlineOnly(! isOnlineOnlyBoolean);\n        if (isOnlineOnlyBoolean) {\n            onSetIsOnlineOnly('false');\n        } else {\n            onSetIsOnlineOnly('true');\n        }\n    }\n\n    // Get references to search result boxes for linking in the skip to bar.\n    const refList = {\n        booksDiv: useRef(null),\n        articlesDiv: useRef(null),\n        faqDiv: useRef(null),\n        librariansDiv: useRef(null),\n        videoDiv: useRef(null),\n        websiteDiv: useRef(null),\n    };\n\n    const resultBoxParams = {searchString, client: apolloClient};\n    const catalogToggle = <CatalogToggle handleToggle={handleOnlineOnlyToggle} isChecked={isOnlineOnlyBoolean} />;\n\n    return (\n        <div>\n            <SkipToLinkBar {...refList} />\n\n            <div className=\"bento-results\">\n                <SearchComponentErrorBoundary>\n                    <BestBetLookup {...resultBoxParams} articleResults={articleResults}/>\n                </SearchComponentErrorBoundary>\n\n                <div className=\"results-row-1 row\">\n                    <div className=\"col-md-5 col-sm-12\" ref={refList.booksDiv}>\n                        <SearchComponentErrorBoundary>\n                            {isOnlineOnlyBoolean ?\n                                <OnlineResults {...resultBoxParams} toggle={catalogToggle}/> :\n                                <BookResults {...resultBoxParams} toggle={catalogToggle} />\n                            }\n                        </SearchComponentErrorBoundary>\n                    </div>\n                    <div className=\"col-md-5 col-md-offset-1 col-sm-12\" ref={refList.articlesDiv}>\n                        <SearchComponentErrorBoundary>\n                            <ArticleResults {...resultBoxParams} handleFetch={setArticleResults}/>\n                        </SearchComponentErrorBoundary>\n                    </div>\n                </div>\n\n                <div className=\"results-row-2 row\" ref={refList.faqDiv}>\n                    <div className=\"col-md-7\">\n                        <SearchComponentErrorBoundary>\n                            <FaqResults {...resultBoxParams}/>\n                        </SearchComponentErrorBoundary>\n                    </div>\n                    <div className=\"col-md-4 col-md-offset-1\" ref={refList.librariansDiv}>\n                        <SearchComponentErrorBoundary>\n                            <LibrarianResults  {...resultBoxParams}/>\n                        </SearchComponentErrorBoundary>\n                    </div>\n                </div>\n\n                <div className=\"results-row-3 row\" ref={refList.videoDiv}>\n                    <div className=\"col-md-12\">\n                        <SearchComponentErrorBoundary>\n                            <VideoResults {...resultBoxParams}/>\n                        </SearchComponentErrorBoundary>\n                    </div>\n                </div>\n\n                <div className=\"results-row-4 row\" ref={refList.websiteDiv}>\n                    <div className=\"col-md-12\">\n                        <SearchComponentErrorBoundary>\n                            <WebsiteResults {...resultBoxParams}/>\n                        </SearchComponentErrorBoundary>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchResults;","import React from 'react';\n\nfunction BlankSearchScreen() {\n    return (\n        <div className=\"blank-search-screen\">\n            <div className=\"blank-search-screen__explanation\">\n                Search for just about anything in or about the Libraries.\n            </div>\n        </div>\n    );\n}\n\nexport default BlankSearchScreen;","import React from 'react';\nimport SearchResults from \"./SearchResults\";\nimport BlankSearchScreen from \"./slots/BlankSearchScreen\";\n\nconst Results = props => {\n    return <SearchResults searchString={props.searchString}/>;\n};\n\nconst MemoizedResults = React.memo(Results);\n\nfunction App({searchBox, searchString}) {\n    return (\n        <div className=\"bento-results-page\">\n            <h1 className=\"sr-only sr-only-focusable\" id=\"main-heading\">Search the library</h1>\n            <form method=\"get\" action={window.location.pathname} className=\"bento-search-box\">\n                {searchBox}\n                <button className=\"btn btn-default\" type=\"submit\">\n                    <i className=\"fa fa-search\" aria-hidden=\"true\"/>\n                    <span className=\"search-button-text\">Search</span>\n                </button>\n            </form>\n            {searchString ? <MemoizedResults searchString={searchString}/> : <BlankSearchScreen/>}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport Autosuggest from \"react-autosuggest\";\n\n/**\n * Render the search box and the  list of typeahead suggestions\n *\n * @param searchBoxId\n * @param suggestions\n * @param fetchSuggestions\n * @param clearSuggestions\n * @param onSuggestionSelected\n * @param inputProps\n * @return {*}\n * @constructor\n */\nfunction SearchBox({searchBoxId, suggestions, fetchSuggestions, clearSuggestions, onSuggestionSelected, inputProps}) {\n\n    // A display a single suggestion.\n    const renderSuggestion = suggestion => (\n        <div className=\"search-suggestion\">\n            {suggestion.value}\n        </div>\n    );\n\n    return (\n        <div className=\"bcbento-search-box\">\n            <label htmlFor={searchBoxId} className=\"bcbento-search-box__input-label sr-only\">\n                Enter a search term please\n            </label>\n            <Autosuggest suggestions={suggestions}\n                         getSuggestionValue={suggestion => suggestion.value}\n                         onSuggestionsFetchRequested={fetchSuggestions}\n                         onSuggestionsClearRequested={clearSuggestions}\n                         renderSuggestion={renderSuggestion}\n                         onSuggestionSelected={onSuggestionSelected}\n                         inputProps={inputProps}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\n/**\n *\n * @param {string} searchBoxId ID element for the search box\n * @param {function} onTyping Called when a character is entered\n * @param {string} value The search string\n * @param {function} setHasFocus Pass focus status up\n * @return {*}\n * @constructor\n */\nfunction LargeSearchBox({searchBoxId, onTyping, value, setHasFocus}) {\n    function handleChange(event) {\n        onTyping(event, {newValue: event.target.value, method: 'nomethod'});\n    }\n\n    function onFocus(event) {\n        event.target.selectionStart = value.length;\n        setHasFocus(true);\n    }\n\n    function onBlur(event) {\n        setHasFocus(false);\n    }\n\n    return (\n        <textarea\n            id={searchBoxId}\n            value={value}\n            onChange={handleChange}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            name=\"any\"\n            autoFocus\n        />\n    );\n}\n\nexport default LargeSearchBox;","import React, {useState} from 'react';\nimport SearchBox from './SearchBox';\nimport LargeSearchBox from \"./LargeSearchBox\";\nimport {CSSTransition} from \"react-transition-group\";\nimport {Logger} from \"../Logger\";\n\n// Minimum length of input string before typeahead is activated.\nconst minTypeaheadLength = 3;\n\n// How big should a text input be before enlarging the search box?\nconst minLargeSearchBoxLength = 50;\n\n// Id of the search box <input> element.\nconst searchBoxId = 'bento-search-box__search-input';\n\n// Called when a suggestion in the typeahead box is selected. Redirects page to\n// new search with the selected value as keyword.\nfunction onSuggestionSelected(event, {suggestion, suggestionValue, suggestionIndex, sectionIndex, method}) {\n    if (suggestionValue) {\n        const url = window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/\\/$/, \"\");\n        window.location.href = `${url}?any=${suggestionValue}`;\n    }\n}\n\n/**\n * Controls search box and typeahead\n *\n * @param handleTyping\n * @param searchString\n * @param onSubmit\n * @return {*}\n * @constructor\n */\nfunction SearchBoxContainer({handleTyping, searchString, onSubmit}) {\n\n    // suggestions is an array of suggestions, each with the format:\n    //     {\n    //         value: 'Text of suggestion',\n    //         score: 15\n    //     }\n    // Where value is the text of the suggestion and score is the score\n    // assigned by ElasticSearch\n    const [suggestions, setSuggestions] = useState([]);\n\n    // value is the text value of the search box <input> element.\n    const [value, setValue] = useState(searchString);\n\n    // Does the searchbox have user focus?\n    const [hasFocus, setHasFocus] = useState(!value);\n\n    // Use text area when input is long.\n    const useTextArea = value.length >= minLargeSearchBoxLength;\n\n    // Tipping point for transition animation. Should be one character larger than text area threshold for\n    // smooth animation.\n    const useLarge = value.length >= minLargeSearchBoxLength;\n\n    // Called after each keypress in the typeahead box.\n    const onTyping = (event, {newValue, method}) => {\n        if (method === 'enter') {\n            onSubmit();\n        } else {\n            setValue(newValue);\n            handleTyping(newValue);\n        }\n    };\n\n    // Called to fetch suggestions from server.\n    async function fetchSuggestions({value, reason}) {\n\n        // Don't fetch suggestions if there isn't enough input or if the input action was not\n        // actually typing.\n        if (value.length < minTypeaheadLength || reason === 'input-focused') {\n            return;\n        }\n\n        // Fetch.\n        const url = `https://library.bc.edu/search-services/typeahead?any=${value}`;\n        let json = [];\n\n        try {\n            const response = await fetch(url);\n            json = await response.json();\n        } catch (err) {\n            Logger.error(`Error fetching suggestions for ${value}`);\n\n            // Don't fail on error, just don't return a suggestions.\n            json = []\n        }\n        setSuggestions(json);\n    }\n\n    // Called to empty suggestions (e.g. after pressing escape).\n    function clearSuggestions() {\n        setSuggestions([]);\n    }\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n        placeholder: 'Search for books, articles, journals, databases',\n        value,\n        onChange: onTyping,\n        name: 'any',\n        id: searchBoxId,\n        autoFocus: hasFocus,\n        onFocus: event => setHasFocus(true),\n        onBlur: event => setHasFocus(false)\n    };\n\n    const smallBoxProps = {\n        searchBoxId,\n        suggestions,\n        fetchSuggestions,\n        clearSuggestions,\n        onSuggestionSelected,\n        inputProps\n    };\n\n    const largeBoxProps = {\n        onTyping,\n        searchBoxId,\n        value,\n        setHasFocus\n    };\n\n    const searchBox = useTextArea ? <LargeSearchBox {...largeBoxProps}/> : <SearchBox {...smallBoxProps} />;\n\n    return <CSSTransition\n        in={useLarge}\n        timeout={200}\n        classNames=\"searchbox-animate\">\n        {searchBox}\n    </CSSTransition>\n}\n\nexport default SearchBoxContainer;","import React, {useState} from 'react';\nimport App from \"./App\";\nimport SearchBoxContainer from './searchbox/SearchBoxContainer';\nimport 'airbnb-js-shims';\n\nfunction AppContainer() {\n    // On page load, grab search string from URL 'any' GET parameter.\n    const initialSearchString = getUrlParameter('any');\n    setPageTitle(initialSearchString);\n\n    // searchString is the text to be searched for.\n    const [searchString, setSearchString] = useState(initialSearchString);\n\n    // inputText is the text currently in the search box.\n    const [inputText, setInputText] = useState('');\n    const handleTyping = value => setInputText(value);\n\n    // Handle page submits without reloads. Currently all submits have reloads, but this\n    // will eventually be enabled for efficiency.\n    const handleSubmit = () => {\n        setSearchString(inputText);\n        setPageTitle(searchString);\n    };\n\n    const searchBox = <SearchBoxContainer searchString={searchString}\n                                          handleTyping={handleTyping}\n                                          handleSubmit={handleSubmit}/>;\n\n    return <App searchBox={searchBox} searchString={searchString}/>;\n}\n\nfunction setPageTitle(searchString) {\n    document.title = searchString ? `Search - ${searchString}` : 'Search';\n}\n\n/**\n * Return a GET parameter from a URL query string\n *\n * @param name\n * @return {string}\n */\nfunction getUrlParameter(name) {\n    name = name.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n    const regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n    const results = regex.exec(window.location.search);\n    return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\n\nexport default AppContainer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './AppContainer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}