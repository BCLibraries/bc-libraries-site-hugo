{"version":3,"sources":["FixBrokenImage.jsx","slots/PrimoRecordLink.js","truncateField.js","slots/getDisplayCreator.js","slots/video/OnlineVideo.jsx","slots/availability/NotAvailableMessage.js","slots/availability/CheckHoldingsMessage.jsx","slots/availability/Availability.jsx","slots/availability/AvailabilityContainer.jsx","slots/video/PhysicalVideo.jsx","slots/video/VideoResult.jsx","slots/books/HathiTrustLink.jsx","slots/CoverImage.jsx","slots/GetItLink.jsx","slots/online/OnlineResult.jsx","slots/SeeAllLink.jsx","slots/ResultsBox.js","slots/LoadingBox.js","slots/ErrorBox.js","slots/NoResultsBox.js","slots/ResultList.js","Logger.js","slots/ResultBoxErrorBoundary.jsx","slots/ResultsBoxContainer.jsx","slots/cleanGraphQLInput.js","slots/online/OnlineQuery.js","slots/online/OnlineResults.jsx","slots/articles/BrowzineBadge.jsx","slots/articles/ArticleResult.jsx","slots/articles/ArticlesQuery.js","slots/articles/ArticleResults.jsx","slots/faq/FaqResult.jsx","slots/faq/FAQQuery.js","slots/faq/FaqResults.jsx","slots/librarians/LibrarianResult.jsx","slots/librarians/LibrariansQuery.js","slots/librarians/LibrarianResults.jsx","slots/video/VideosQuery.js","slots/video/VideoResults.jsx","slots/website/WebsiteResult.jsx","slots/website/WebsiteQuery.js","slots/website/WebsiteResults.jsx","slots/bestbets/FullTextItem.js","slots/bestbets/CrossrefFulltextBuilder.js","slots/bestbets/LocalBestBet.js","slots/bestbets/decideBestBet.js","slots/bestbets/PCIFulltextBuilder.js","slots/bestbets/LocalBestBetResult.jsx","slots/bestbets/FullTextResult.jsx","slots/bestbets/BestBetLookup.jsx","SkipToLink.jsx","SkipToLinkBar.jsx","ApolloClientFactory.js","slots/SearchComponentErrorBoundary.jsx","slots/books/icon_archives.svg","slots/books/FindingAidLink.jsx","slots/books/BookResult.jsx","slots/books/BooksAndMoreQuery.js","slots/books/BookResults.jsx","slots/CatalogToggle.jsx","useQueryString.js","SearchResults.jsx","slots/BlankSearchScreen.jsx","App.jsx","searchbox/SearchBox.jsx","searchbox/LargeSearchBox.jsx","searchbox/SearchBoxContainer.jsx","AppContainer.jsx","serviceWorker.js","index.js"],"names":["FixBrokenImage","fallbackImage","imgClass","event","target","onerror","src","className","PrimoRecordLink","item","isPci","tab","scope","context","id","truncateField","fieldValue","maxLength","replaceAll","length","substr","lastIndexOf","getDisplayCreator","creator","contributors","getBaseString","blankScreen","OnlineVideo","video","screen","screenCap","screenClass","watchLink","mms","recordLink","href","alt","title","onError","date","NotAvailableMessage","checkHoldingsMessage","library","location","Availability","firstHolding","inOtherLibraries","link","libraryDisplay","callNumber","locationValues","weight","getLocationScore","libraryCode","sortLibraries","holdingA","holdingB","locationCode","AvailabilityContainer","holdings","availableItems","allItems","i","items","filter","availability","Array","prototype","push","apply","sort","buildHoldings","availabilityStatus","CheckHoldingsMessage","locationDisplay","defaultIcon","iconClass","coverClass","coverImages","onImageLoad","naturalHeight","PhysicalVideo","format","includes","cover","String","url","getCover","altText","aria-hidden","onLoad","VideoResult","inCatalogResult","isElectronic","resultClass","HathiTrustLink","rel","CoverImage","itemUrl","imageUrl","specialClass","GetItLink","OnlineResult","type","publisher","isPhysical","hathitrustUrl","SeeAllLink","total","found","term","toLocaleString","ResultsBox","heading","searchUrl","seeAll","children","aria-live","LoadingBox","ErrorBox","NoResultsBox","content","ResultList","docs","classPrefix","renderResult","map","events","totalLogScore","addEntry","level","message","score","flush","window","addEventListener","Logger","data","JSON","stringify","navigator","sendBeacon","process","sendEntries","ResultBoxErrorBoundary","Component","constructor","props","super","this","state","hasError","error","componentDidCatch","errorInfo","statusCode","render","ResultsBoxContainer","client","query","noResultsContent","handleFetch","modifier","useQuery","gql","loading","object","results","passStateUp","cleanGraphQLInput","string","replace","OnlineQuery","searchString","forOnline","noResultContent","encodedSearchString","encodeURIComponent","worldCatSearchURL","OnlineResults","toggle","doc","BrowzineBadge","libkeyAvailability","fullTextFile","width","height","browzineWebLink","formatPartOf","part_of","journal_title","parts","split","ArticleResult","article","isPartOf","journalTitle","ArticlesQuery","forArticles","ArticleResults","FaqResult","result","question","FAQQuery","forFAQ","FaqResults","LibrarianResult","librarian","img_url","image","name","display_subjects","subjects","join","LibrariansQuery","forLibrarians","LibrarianResults","VideosQuery","forVideos","VideoResults","getHighlight","hit","__html","highlight","WebsiteResult","guideUrl","guideTitle","dangerouslySetInnerHTML","WebsiteQuery","forWebsite","WebsiteResults","FullTextItem","source","doi","authors","containerTitle","issueInfo","months","buildFulltextFromCrossref","crossrefData","containerTitles","fullText","titles","DOI","undefined","auth","familyName","givenName","buildAuthors","publishedPrintDate","buildDate","publishedOnlineDate","volume","issue","page","buildIssue","dateData","datePartCount","year","month","LocalBestBet","bestBetResult","displayText","decideBestBet","bestBet","articles","fullTextDOI","articleRecords","isReview","toLowerCase","forEach","articleDOI","dOI","doiIsReview","crossRefData","fullTextItem","libKey","libKeyData","contentLocation","articleHits","longEnough","matchesSearchString","trim","hasFullText","findArticleMatches","fulltext","buildFulltextFromPCI","LocalBestBetResult","onClick","authorLine","originalLength","slice","citationLine","FullTextResult","BestBetLookup","articleResults","forBestBets","SkipToLink","label","current","scrollIntoView","behavior","block","SkipToLinkBar","booksDiv","articlesDiv","faqDiv","librariansDiv","videoDiv","websiteDiv","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","cache","InMemoryCache","apolloClient","ApolloClient","uri","HttpLink","SearchComponentErrorBoundary","React","console","componentStack","FindingAidLink","FindingAidIcon","getThumbnail","hasFindingAid","Boolean","linkToFindingAid","BookResult","BooksAndMoreQuery","forBooksAndMore","BookResults","CatalogToggle","isChecked","handleToggle","useState","isDisplayed","setIsDisplayed","explanationClass","checked","onChange","parseQueryString","queryHash","parameters","keys","queryStringItems","search","key","val","replaceState","queryStringParts","currentKey","newURL","protocol","host","pathname","history","path","useQueryString","initialValue","queryStringHash","indexOf","decodeURIComponent","getQueryStringValue","value","setValue","useCallback","newValue","setQueryStringValue","index","splice","deleteQueryStringValue","SearchResults","setArticleResults","isOnlineOnlyString","onSetIsOnlineOnly","isOnlineOnlyBoolean","refList","useRef","resultBoxParams","catalogToggle","ref","BlankSearchScreen","Results","MemoizedResults","memo","App","searchBox","method","action","SearchBox","searchBoxId","suggestions","fetchSuggestions","clearSuggestions","onSuggestionSelected","inputProps","htmlFor","getSuggestionValue","suggestion","onSuggestionsFetchRequested","onSuggestionsClearRequested","renderSuggestion","LargeSearchBox","onTyping","setHasFocus","onFocus","selectionStart","onBlur","autoFocus","suggestionValue","suggestionIndex","sectionIndex","SearchBoxContainer","handleTyping","onSubmit","setSuggestions","hasFocus","useTextArea","useLarge","reason","a","json","fetch","response","smallBoxProps","placeholder","largeBoxProps","CSSTransition","in","timeout","classNames","setPageTitle","document","AppContainer","initialSearchString","RegExp","exec","getUrlParameter","setSearchString","inputText","setInputText","handleSubmit","hostname","match","log","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dfe00148.chunk.js","sourcesContent":["function FixBrokenImage(fallbackImage, imgClass) {\n    return function (event) {\n        event.target.onerror = null;\n        event.target.src = fallbackImage;\n        if (imgClass) {\n            event.target.className = imgClass;\n        }\n    }\n}\n\nexport default FixBrokenImage;","/**\n * Return a link to a record in Primo\n *\n * @param item\n * @return {string}\n * @constructor\n */\nfunction PrimoRecordLink(item, isPci) {\n    if (!isPci) {\n        isPci = false;\n    }\n\n    const tab = isPci ? 'pci_only' : 'bcl_only';\n    const scope = isPci ? 'pci' : 'bcl';\n    const context = isPci ? 'PC' : 'L';\n\n    return `https://bc-primo.hosted.exlibrisgroup.com/primo-explore/fulldisplay?docid=${item.id}&context=${context}&tab=${tab}&search_scope=${scope}&vid=bclib_new&lang=en_US`;\n}\n\nexport {PrimoRecordLink};","/**\n * Truncate a text field, splitting at spaces\n *\n * @param {string} fieldValue\n * @param {number} maxLength\n */\nfunction truncateField(fieldValue, maxLength) {\n\n    // Primo Central sometimes add spurious spaces after names.\n    fieldValue = fieldValue.replaceAll(' ;', ';');\n\n    // Catch nulls or undefined.\n    if (!fieldValue) {\n        return '';\n    }\n\n    // Return the string if it's already short enough.\n    if (fieldValue.length < maxLength) {\n        return fieldValue;\n    }\n\n    // Truncate at last space before maxLength and add ellipsis.\n    return fieldValue.substr(0, fieldValue.lastIndexOf(' ', maxLength)) + ' […]';\n}\n\nexport default truncateField;","import truncateField from \"../truncateField\";\n\n// Max length of display value.\nconst truncationLength = 120;\n\n/**\n * Return an appropriate display value for creator field\n *\n * @param item\n * @return {string}\n */\nfunction getDisplayCreator(item) {\n    return truncateField(getBaseString(item), truncationLength );\n}\n\nfunction getBaseString(item) {\n\n    // Prefer the creator field.\n    if (item.creator) {\n        return item.creator;\n    }\n\n    // If no creator, take the first contributor.\n    if (item.contributors[0]) {\n        return item.contributors[0];\n    }\n\n    // Otherwise, give up.\n    return '';\n}\n\nexport {getDisplayCreator};","import React from 'react';\nimport FixBrokenImage from \"../../FixBrokenImage\";\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport {getDisplayCreator} from \"../getDisplayCreator\";\n\nconst blankScreen = 'https://library.bc.edu/images/blank-screen.svg';\n\nfunction OnlineVideo({video}) {\n    const screen = video.screenCap ? video.screenCap : blankScreen;\n    const screenClass = video.screenCap ? 'online-video-thumb__screenshot' : 'online-video-thumb__blank_screen';\n    const watchLink = `https://mlib.bc.edu/reserves-api/items/${video.mms}`;\n    const recordLink = PrimoRecordLink(video);\n\n    return <div className=\"online-video\">\n        <a href={watchLink}>\n            <div className=\"online_video__thumb\">\n                <img src={screen} alt={`Watch ${video.title} online`} onError={FixBrokenImage(blankScreen)} className={screenClass}/>\n            </div>\n        </a>\n\n        <h3 className=\"online-video__media-heading media-heading\">\n            <a href={recordLink} className=\"online-video__title\">{video.title}</a>\n        </h3>\n\n        {video.date}\n\n        <div className=\"online-video__creator\">{getDisplayCreator(video)}</div>\n\n        <div className=\"online-video__watch-link\"><a href={watchLink}>Watch online</a></div>\n    </div>\n}\n\nexport default OnlineVideo;","import {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport React from \"react\";\n\n/**\n * Message to display when the item is not available\n *\n * @param item\n * @return {*}\n * @constructor\n */\nfunction NotAvailableMessage({item}) {\n    return (\n        <div className=\"item-info item-info--unavailable\">\n            Not available. <a href={PrimoRecordLink(item)}>Check for more options</a>.\n        </div>\n    )\n}\n\nexport default NotAvailableMessage;\n","import {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport React from \"react\";\n\nfunction checkHoldingsMessage({item, library, location}) {\n    return (\n        <div className=\"item-info item-info--check-holdings\">\n            <span className=\"item-info__instructions\">\n                <a href={PrimoRecordLink(item, false)}>Check \"Find in Library\"</a>\n            </span>\n            <span className=\"item-info__library\">{library}</span>\n            <span className=\"item-info__location\">{location}</span>.\n        </div>\n    );\n}\n\nexport default checkHoldingsMessage;","import React from \"react\";\n\n/**\n * Message to display for available item\n *\n * @param firstHolding\n * @param inOtherLibraries\n * @return {*}\n * @constructor\n */\nfunction Availability({firstHolding, inOtherLibraries}) {\n    return (\n        <ul className='available-items-list'>\n            <li className={`item-info item-info--available`}>\n                <a href={firstHolding.link}>\n                    <span className=\"item-info__library\">Find in {firstHolding.libraryDisplay}</span>\n                    <span className=\"item-info__location\">{firstHolding.location}</span>\n                    <span className=\"item-info__callno\">({firstHolding.callNumber})</span>\n                    <span className=\"item-info__other-libraries\">{inOtherLibraries && ' and other libraries'}</span>\n                </a>\n            </li>\n        </ul>\n    );\n\n}\n\nexport default Availability;","import React from 'react';\nimport NotAvailableMessage from \"./NotAvailableMessage\";\nimport CheckHoldingsMessage from \"./CheckHoldingsMessage\";\nimport Availability from \"./Availability\";\n\n/**\n * Display an item's available holdings\n *\n * @param item\n * @return {*}\n * @constructor\n */\nfunction AvailabilityContainer({item}) {\n\n    // Build holdings list and display first holding.\n    const holdings = buildHoldings(item);\n    const firstHolding = holdings.length > 0 ? holdings[0] : null;\n\n    if (item.holdings[0] && item.holdings[0].availabilityStatus === 'check_holdings') {\n        return <CheckHoldingsMessage item={item} library={item.holdings[0].libraryCode} location={item.holdings[0].locationDisplay}/>\n    } else if (firstHolding) {\n        return <Availability firstHolding={firstHolding} inOtherLibraries={holdings.length > 1}/>;\n    } else {\n        return <NotAvailableMessage item={item}/>;\n    }\n}\n\n/**\n * Stores library and location weights for sorting holdings.\n *\n * Entries are formatted like:\n *\n *     'library code': {\n *         weight: 0,\n *         'location 1 display': -1,\n *         'location 2 display': 2\n *     }\n *\n *  Where:\n *\n *     * library code: The three-letter library code used in Alma (e.g. 'ONL', 'ERC')\n *     * weight: How much to weight the library if no location match is found\n *     * location # display: The display string value for a location (e.g. '2 hour reserves'); the value\n *                           is the weighting for items in this location\n *\n *  Items with lower weights will sort higher, so to emphasize a library or location give it a negative\n *  value.\n */\nconst locationValues = {\n    'ONL': {\n        weight: -1,\n        'Stacks': -3,\n        '1st Floor Microfilm': 1\n    },\n    'TML': {\n        weight: 0\n    },\n    'BAPST': {\n        weight: 0\n    },\n    'BURNS': {\n        weight: 0\n    },\n    'ERC': {\n        weight: 0\n    },\n    'SWK': {\n        weight: 0\n    },\n    'LAW': {\n        weight: 0\n    },\n    'GEO': {\n        weight: 1\n    },\n    'RES_SHARE': {\n        weight: 2\n    },\n    'DEV': {\n        weight: 2\n    },\n    'INT': {\n        weight: 1\n    },\n    'IAJS': {\n        weight: 1\n    }\n};\n\n/**\n * Lookup desirability score by library and location\n */\nfunction getLocationScore(libraryCode, location) {\n    const defaultLibrary = {weight: 0}; // Default to a locationless library if no library is found.\n    const library = locationValues[libraryCode] ? locationValues[libraryCode] : defaultLibrary;\n    return library[location] ? library[location] + library.weight : library.weight;\n}\n\n/**\n * Rank two holdings by most desirable library and location\n */\nfunction sortLibraries(holdingA, holdingB) {\n    return getLocationScore(holdingA.library, holdingA.locationCode) - getLocationScore(holdingB.library, holdingB.locationCode)\n}\n\n/**\n * Build a list of available holdings sorted by most desirable library and location\n */\nfunction buildHoldings(item) {\n    const allItems = [];\n    let holding, availableItems;\n\n    for (let i = 0; i < item.holdings.length; i++) {\n        holding = item.holdings[i];\n        availableItems = holding.items.filter(item => item.availability === 'available');\n        Array.prototype.push.apply(allItems, availableItems);\n    }\n\n    return allItems.sort(sortLibraries);\n}\n\nexport default AvailabilityContainer;","import React from 'react';\nimport FixBrokenImage from \"../../FixBrokenImage\";\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport AvailabilityContainer from \"../availability/AvailabilityContainer\";\nimport {getDisplayCreator} from \"../getDisplayCreator\";\n\nconst defaultVHSIcon = 'https://library.bc.edu/images/video-tape.svg';\nconst defaultDVDIcon = 'https://library.bc.edu/images/mono-dvd-mount.svg';\n\nconst vhsClass = 'physical-video__vhs-cover',\n    dvdClass = 'physical-video__dvd-cover';\n\nlet defaultIcon = defaultVHSIcon;\nlet iconClass = vhsClass;\n\nfunction PhysicalVideo({video}) {\n    if (video.format.includes('disc')) {\n        defaultIcon = defaultDVDIcon;\n        iconClass = dvdClass;\n    }\n\n    const cover = getCover(video);\n\n    const altText = `Catalog record for ${video.title}`;\n\n    const recordLink = PrimoRecordLink(video, true);\n\n    return <div className=\"physical-video\">\n        <a href={recordLink} aria-hidden=\"true\">\n            <img src={cover}\n                 onLoad={onImageLoad}\n                 onError={FixBrokenImage(defaultIcon, `OPER physical-video__default_cover ${iconClass}`)}\n                 alt={altText}\n                 className={coverClass(video)}/>\n        </a>\n\n        <h3 className=\"physical-video__media-heading media-heading\">\n            <a href={recordLink} className=\"physical-video__title\">\n                {video.title}\n            </a>\n        </h3>\n\n        {video.date}\n\n        <div className=\"physical-video__creator\">{getDisplayCreator(video)}</div>\n\n        {video.format}\n\n        <AvailabilityContainer item={video}/>\n\n    </div>\n}\n\nfunction coverClass(video) {\n    return (video.coverImages.length > 0 && video.coverImages[0]) ? 'physical-video__box_cover' : `OPER HERE NOW physical-video__default_cover  ${iconClass}`;\n}\n\nfunction getCover(video) {\n    if (video.coverImages.length > 0 && video.coverImages[0]) {\n        return String(video.coverImages[0].url);\n    }\n\n    return defaultIcon;\n}\n\nfunction onImageLoad(event) {\n    if (event.target.naturalHeight === 1) {\n        event.target.className = `physical-video__default_cover ${iconClass}`;\n        event.target.src = defaultIcon;\n    }\n}\n\nexport default PhysicalVideo;","import React from 'react';\nimport OnlineVideo from './OnlineVideo';\nimport PhysicalVideo from './PhysicalVideo';\n\nfunction VideoResult({item, inCatalogResult}) {\n    const video = item.isElectronic ? <OnlineVideo video={item}/> : <PhysicalVideo video={item}/>;\n    const resultClass = inCatalogResult ? 'catalog-result-item' : 'catalog-result-item col-md-4';\n\n    return <li className={resultClass}>\n        {video}\n    </li>\n}\n\nexport default VideoResult;","import React from 'react';\n\nfunction HathiTrustLink({url}) {\n    return <div className=\"hathi-trust-link\">\n        <div className=\"hathi-trust-link__icon\">\n\n        </div>\n            <a href={url} target=\"_blank\"  rel=\"noopener noreferrer\" >\n                Full Text Available at HathiTrust\n                <i className=\"fa fa-external-link\" aria-hidden=\"true\"/>\n            </a>\n    </div>\n}\n\nexport default HathiTrustLink;","import React from 'react';\n\nfunction CoverImage({itemUrl, imageUrl, specialClass}) {\n    const className = `cover-image ${specialClass}`;\n    return <div className=\"media-right\">\n        <a href={itemUrl} aria-hidden=\"true\">\n            <img src={imageUrl} alt=\"\" className={className}/>\n        </a>\n    </div>\n}\n\nexport default CoverImage;","import React from 'react';\n\nfunction GetItLink({url}) {\n    return <div className=\"catalog-result-item__getit\"><a href={url}>Find online</a></div>;\n}\n\nexport default GetItLink;","import React from 'react';\nimport VideoResult from \"../video/VideoResult\";\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport HathiTrustLink from \"../books/HathiTrustLink\";\nimport AvailabilityContainer from \"../availability/AvailabilityContainer\";\nimport CoverImage from \"../CoverImage\";\nimport GetItLink from \"../GetItLink\";\nimport {getDisplayCreator} from \"../getDisplayCreator\";\n\nfunction OnlineResult({item}) {\n    if (item.isElectronic && item.type === 'Video') {\n        return <VideoResult item={item} inCatalogResult={true}/>;\n    }\n\n    const link = PrimoRecordLink(item);\n\n    return <li className=\"catalog-result-item media\">\n\n        <div className=\"media-body\">\n            <h3 className=\"catalog-result-item__media-heading media-heading\">\n                <a href={link} className=\"catalog-result-item__title\">\n                    {item.title}\n                </a>\n            </h3>\n\n            <div className=\"catalog-result-item__creator\">{getDisplayCreator(item)}</div>\n\n            <div className=\"catalog-result-item__publisher\">\n                {item.publisher} {item.date}\n            </div>\n\n            <div className=\"catalog-result-item__type\">{item.type}</div>\n\n            {item.isElectronic && <GetItLink url={link}/>}\n\n            {item.isPhysical && <AvailabilityContainer item={item}/>}\n\n            {item.hathitrustUrl && <HathiTrustLink url={item.hathitrustUrl}/>}\n\n        </div>\n\n        {item.coverImages.length > 1 && <CoverImage itemUrl={link} imageUrl={item.coverImages[0].url}/>}\n    </li>\n}\n\nexport default OnlineResult;","import React from 'react';\n\nfunction SeeAllLink({total, found, term, url}) {\n    if(!total) {\n        total = 0;\n    }\n\n    if (total <= found) {\n        return <div className=\"see-all-link--empty\"/>;\n    }\n\n    if (!term) {\n        return <div className=\"see-all-link--badge\">\n            <a href={url}>See all</a>\n        </div>;\n    }\n\n    return (\n        <div className=\"see-all-link\">\n            <span className=\"see-all-link__prefix\">></span> <a href={url}>See all {total.toLocaleString()} {term}</a>\n        </div>\n    );\n}\n\nexport default SeeAllLink;","import React from 'react';\n\n/**\n * A single result class box\n *\n * @param client object GraphQL client\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @param searchUrl string URL to link to search.\n * @return {*}\n * @constructor\n */\nfunction ResultsBox({heading, searchUrl, seeAll, children}) {\n    return (\n        <div className=\"bento-results-box\" aria-live=\"polite\">\n            <div className=\"bento-results-box__header-row\">\n                <h2>{heading}</h2>\n                {seeAll}\n            </div>\n            {children}\n        </div>\n    )\n}\n\nexport default ResultsBox;","import React from 'react';\nimport ResultsBox from './ResultsBox';\n\n/**\n * Contents of result box when waiting for results\n *\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @return {*}\n * @constructor\n */\nfunction LoadingBox({heading}) {\n    return (\n        <ResultsBox heading={heading}>\n            <div className='bento-results-box__loading-notice'>Loading...</div>\n        </ResultsBox>\n    )\n}\n\nexport default LoadingBox;","import React from 'react';\nimport ResultsBox from './ResultsBox';\n\n/**\n * Contents of result box after error\n *\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @return {*}\n * @constructor\n */\nfunction ErrorBox({heading}) {\n    return (\n        <ResultsBox heading={heading}>\n            <div className=\"bento-results-box__error-notice\">There was an error performing this search.</div>\n        </ResultsBox>\n    )\n}\n\nexport default ErrorBox;","import React from 'react';\nimport ResultsBox from './ResultsBox';\n\n/**\n * Contents of result after no result search\n *\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @param content\n * @return {*}\n * @constructor\n */\nfunction NoResultsBox({heading, content}) {\n    return (\n        <ResultsBox heading={heading}>\n            <div className=\"bento-results-box__no-results\">{content}</div>\n        </ResultsBox>\n    )\n\n}\n\nexport default NoResultsBox;","import React from 'react';\n\n/**\n * List of result from search\n *\n * @param docs array Docs array from GraphQL result\n * @param classPrefix string Prefix for element class\n * @param renderResult function Function that maps a GraphQL doc to a single JSX result entry\n * @return {*}\n * @constructor\n */\nfunction ResultList({docs, classPrefix, renderResult}) {\n    return <div className={`${classPrefix}-results-box`}>\n        <ol className={`${classPrefix}-results-list`}>\n            {docs.map(renderResult)}\n        </ol>\n    </div>\n}\n\nexport default ResultList;","/**\n * Log client events to server\n *\n * Used to report back on significant events (errors, debug info, etc). Log events\n * are flushed to the server in batches to reduce server traffic.\n */\n\n/**\n * Events queue\n *\n * @type {Array}\n */\nconst events = [];\n\n/**\n * Total score of events in queue\n *\n * @type {number}\n */\nlet totalLogScore = 0;\n\n/**\n * Send all the events in queue when score matches this.\n *\n * @type {number}\n */\nconst flushOnScore = 10;\n\n// Flush log on page close.\nwindow.addEventListener(\"unload\", flush, false);\n\n/**\n * Add an event to the log and flush if needed.\n *\n * @param {string} level\n * @param {string} message\n * @param {number} score\n */\nfunction addEntry(level, message, score = 1) {\n\n    // Add to entries queue.\n    events.push({level, message});\n\n    // If log score is over a certain amount, flush.\n    totalLogScore += score;\n    if (totalLogScore > flushOnScore) {\n        flush();\n    }\n}\n\nconst Logger = {\n    /**\n     * @param {string} message\n     */\n    emergency: message => {\n        addEntry('emergency', message, 100);\n        flush();\n    },\n\n    /**\n     * @param {string} message\n     */\n    alert: message => {\n        addEntry('alert', message, 10);\n    },\n\n    /**\n     * @param {string} message\n     */\n    critical: message => {\n        addEntry('critical', message, 10);\n        flush();\n    },\n\n    /**\n     * @param {string} message\n     */\n    error: message => {\n        addEntry('error', message, 3);\n    },\n\n    /**\n     * @param {string} message\n     */\n    warning: message => {\n        addEntry('warning', message, 2);\n    },\n\n    /**\n     * @param {string} message\n     */\n    info: message => {\n        addEntry('info', message);\n    },\n\n    /**\n     * @param {string} message\n     */\n    debug: message => {\n        addEntry('debug', message);\n    }\n};\n\nfunction sendEntries() {\n    const data = JSON.stringify({\n        events: events\n    });\n    navigator.sendBeacon(process.env.REACT_APP_LOGGING_ENDPOINT, data);\n}\n\n// Send entries and zero-out the list.\nfunction flush() {\n    sendEntries();\n    events.length = 0;\n    totalLogScore = 0;\n}\n\nexport {Logger};\n","import React, {Component} from 'react';\nimport ErrorBox from \"./ErrorBox\";\nimport {Logger} from '../Logger';\n\n/**\n * Error boundary for result boxes\n *\n * If an individual result box errors out, do not let the entire application\n * die. Just display an error for that box.\n */\nclass ResultBoxErrorBoundary extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        Logger.error(`Error presenting results: ${error.statusCode} ${error.message}`);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <ErrorBox heading={this.props.heading}/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ResultBoxErrorBoundary;","import React from 'react';\nimport {useQuery} from \"@apollo/react-hooks\";\nimport SeeAllLink from \"./SeeAllLink\";\nimport LoadingBox from \"./LoadingBox\";\nimport ErrorBox from \"./ErrorBox\";\nimport NoResultsBox from \"./NoResultsBox\";\nimport ResultList from \"./ResultList\";\nimport ResultsBox from \"./ResultsBox\";\nimport ResultBoxErrorBoundary from \"./ResultBoxErrorBoundary\";\n\n/**\n * Fetch data from GraphQL and render result box\n *\n * @param client object GraphQL client\n * @param heading string Heading for the box (e.g. \"Books & more\")\n * @param term string Term for result (e.g. \"articles\")\n * @param classPrefix string Prefix for element class\n * @param renderResult function Function that maps a GraphQL doc to a single JSX result entry\n * @param query object The GraphQL query to execute.\n * @return {*}\n * @constructor\n */\nfunction ResultsBoxContainer({client, heading, term, classPrefix, renderResult, query, noResultsContent = 'There are no results matching your search.', handleFetch, modifier}) {\n\n    // Perform GraphQL query\n    const {loading, error, data} = useQuery(query.gql, {client});\n\n    if (loading) {\n        return <LoadingBox heading={heading}/>\n    }\n\n    if (error) {\n        return <ErrorBox heading={heading}/>\n    }\n\n    // Response came back successfully, but there aren't any hits.\n    if (data[query.object].total === 0) {\n        return <NoResultsBox heading={heading} content={noResultsContent}/>\n    }\n\n    // Success! Build response.\n    const docs = data[query.object].docs ? data[query.object].docs : data[query.object].results;\n    passStateUp(handleFetch, docs);\n    const searchUrl = data[query.object].searchUrl;\n    const seeAll = <SeeAllLink term={term} total={data[query.object].total} found={docs.length} url={searchUrl}/>;\n    heading = <a href={searchUrl}>{heading}</a>;\n\n    return (\n        <ResultBoxErrorBoundary heading={heading}>\n            <ResultsBox heading={heading} seeAll={seeAll} searchUrl={searchUrl}>\n                {modifier}\n                <ResultList classPrefix={classPrefix} docs={docs} renderResult={renderResult}/>\n            </ResultsBox>\n        </ResultBoxErrorBoundary>\n    )\n\n}\n\n/**\n * Execute callbacks from props and pass list of responses up\n *\n * @param handleFetch\n * @param docs\n */\nfunction passStateUp(handleFetch, docs) {\n    if (handleFetch) {\n        handleFetch(docs ? docs : []);\n    }\n}\n\nexport default ResultsBoxContainer;","/**\n * Cleans user input for submitting to GraphQL\n *\n * @param string string The search string\n * @return {void | string | never}\n */\nfunction cleanGraphQLInput(string) {\n    return string.replace(/\"/g, '\\\\\"').replace('/\\\\/g', '\\\\').replace(/(\\r\\n|\\n|\\r)/gm,' ');\n}\n\nexport {cleanGraphQLInput};","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\n/**\n * Query for only online resources\n */\nclass OnlineQuery {\n    gql;\n    object = 'searchOnline';\n\n    constructor(searchString) {\n        this.gql = forOnline(searchString);\n    }\n}\n\nfunction forOnline(searchString) {\n    return gql`\n{\n  searchOnline( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    docs {\n      id,\n      title,\n      date,\n      type,\n      creator,\n      contributors,\n      coverImages { \n        url\n      },\n      available,\n      hathitrustUrl,\n      isPhysical,\n      isElectronic,\n      screenCap,\n      mms,\n      holdings {\n        ilsId,\n        libraryCode,\n        locationDisplay,\n        locationCode,\n        availabilityStatus,\n        callNumber,\n        items {\n          availability,\n          locationCode,\n          location,\n          libraryDisplay,\n          library,\n          callNumber\n         }\n       }\n    },   \n    searchUrl,\n    didUMean,\n    total\n  }\n}`;\n}\n\nexport {OnlineQuery};","import React from 'react';\nimport OnlineResult from \"./OnlineResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {OnlineQuery} from \"./OnlineQuery\";\n\n/**\n * Online results box\n *\n * @param searchString string The search string from user input\n * @param client object GraphQL client\n * @param toggle\n * @return {*}\n * @constructor\n */\nfunction OnlineResults({searchString, client, toggle}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Books & more'}\n            classPrefix={'books'}\n            term={'items'}\n            query={new OnlineQuery(searchString)}\n            renderResult={doc => <OnlineResult item={doc} key={`book-${doc.id}`}/>}\n            noResultsContent={noResultContent(searchString)}\n            modifier={toggle}\n        />\n    );\n}\n\nfunction noResultContent(searchString) {\n    const encodedSearchString = encodeURIComponent(searchString);\n    const worldCatSearchURL = `https://bc.on.worldcat.org/search?databaseList=&queryString=${encodedSearchString}`;\n\n    return (\n        <div className=\"catalog-no-results-box\">\n            <p>There are no results matching your search.</p>\n            <p className=\"catalog-no-results-box__worldcat-advice\">\n                Try your search in <a href={worldCatSearchURL}>WorldCat</a> for results beyond BC Libraries.\n            </p>\n        </div>\n    );\n}\n\nexport default OnlineResults;","import React from 'react';\n\n/**\n * Links to FullText in Browzine\n *\n * @param {object} libkeyAvailability\n * @param {string} libkeyAvailability.fullTextFile\n * @param {string} libkeyAvailability.browzineWebLink\n * @constructor\n */\nfunction BrowzineBadge({libkeyAvailability}) {\n    return (\n        <div className=\"browzine-badge\">\n            {libkeyAvailability.fullTextFile &&\n            <a href={libkeyAvailability.fullTextFile} className=\"browzine-badge__download-now\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src=\"https://assets.thirdiron.com/images/integrations/browzine-pdf-download-icon.svg\" className=\"browzine-pdf-icon\" aria-hidden=\"true\" width=\"12\" height=\"16\" alt=\"\"/>\n                <span className=\"browzine-web-link-text\">Download Now\n                    <span className=\"browzine-badge__pdf_notice\"> (PDF)</span>\n                </span>\n            </a>\n            }\n\n            {libkeyAvailability.browzineWebLink &&\n            <a className=\"browzine-badge__view-issue\" href={libkeyAvailability.browzineWebLink}  aria-hidden=\"true\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src=\"https://assets.thirdiron.com/images/integrations/browzine-open-book-icon.svg\" className=\"browzine-book-icon\" aria-hidden=\"true\" width=\"15\" height=\"15\" alt=\"\"/>\n                <span className=\"browzine-web-link-text\">View Issue Contents</span>\n            </a>\n            }\n        </div>\n    );\n}\n\nexport default BrowzineBadge;","import React from 'react';\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport BrowzineBadge from './BrowzineBadge';\nimport {getDisplayCreator} from \"../getDisplayCreator\";\n\nfunction ArticleResult({article}) {\n    return <li className=\"article-result-item media\">\n        <div className=\"media-body\">\n            <h3 className=\"article-result-item__media-heading media-heading\">\n                <a href={PrimoRecordLink(article, true)} className=\"article-result-item__title\" target=\"_blank\" rel=\"noreferrer noopener\">\n                    {article.title}\n                </a>\n            </h3>\n\n            {article.date}\n\n            <div className=\"article-result-item__creator\">{getDisplayCreator(article)}</div>\n            <div className=\"article-result-item__publisher\">\n                {formatPartOf(article.isPartOf, article.journalTitle)}\n            </div>\n\n            {article.libkeyAvailability && <BrowzineBadge libkeyAvailability={article.libkeyAvailability}/>}\n\n        </div>\n    </li>;\n}\n\n// @TODO Replace\nfunction formatPartOf(part_of, journal_title) {\n    part_of = part_of.length > 0 ? part_of[0] : '';\n\n    const parts = part_of.split(journal_title);\n\n    if (!journal_title || parts.length !== 2) {\n        return <span>{part_of}</span>\n    }\n\n    return <span className=\"article-result-item__journal-title\">\n            {parts[0]}<cite>{journal_title}</cite>{parts[1]}\n        </span>\n}\n\nexport default ArticleResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\nclass ArticlesQuery {\n    gql;\n    object = 'searchArticles'\n\n    constructor(searchString) {\n        this.gql = forArticles(searchString);\n    }\n}\n\n/**\n * Get query for articles\n *\n * @param searchString string\n */\nfunction forArticles(searchString) {\n    return gql`\n{\n  searchArticles( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    docs {\n      id,\n      title,\n      date,\n      type,\n      dOI,\n      creator,\n      contributors,\n      coverImages {\n        url\n      },\n      isPartOf,\n      journalTitle\n            libkeyAvailability {\n        fullTextFile\n        contentLocation\n        availableThroughBrowzine\n        browzineWebLink\n        journals {\n          browzineEnabled\n          browzineWebLink\n        }\n      }\n    },   \n    searchUrl,\n    didUMean,\n    total\n  }\n}`;\n}\n\nexport {ArticlesQuery};","import React from 'react';\nimport ArticleResult from \"./ArticleResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {ArticlesQuery} from \"./ArticlesQuery\";\n\n/**\n * Article results box\n *\n * @param {string} searchString  The search string from user input\n * @param {object} client GraphQL client\n * @param {function} handleFetch Called when new results are fetched\n * @return {*}\n * @constructor\n */\nfunction ArticleResults({searchString, client, handleFetch}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Articles'}\n            classPrefix={'articles'}\n            term={'articles'}\n            query={new ArticlesQuery(searchString)}\n            renderResult={doc => <ArticleResult article={doc} key={`article-${doc.id}`}/>}\n            handleFetch={handleFetch}\n        />\n    );\n}\n\nexport default ArticleResults;","import React from 'react';\n\nfunction FaqResult({result}) {\n    return <li><a href={result.url}>{result.question}</a></li>;\n}\n\nexport default FaqResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\nclass FAQQuery {\n    gql;\n    object = 'searchFAQ';\n\n    constructor(searchString) {\n        this.gql = forFAQ(searchString);\n    }\n}\n\n/**\n * Get query for FAQ results\n *\n * @param searchString\n */\nfunction forFAQ(searchString) {\n    return gql`\n{\n  searchFAQ( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    results {\n      id,\n      question,\n      url\n    },   \n    searchUrl,\n    total\n  }\n}`\n}\n\nexport {FAQQuery};","import React from 'react';\nimport FaqResult from \"./FaqResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {FAQQuery} from \"./FAQQuery\";\n\n/**\n * FAQ results box\n *\n * @param searchString string The search string from user input\n * @param client object GraphQL client\n * @return {*}\n * @constructor\n */\nfunction FaqResults({searchString, client}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'FAQ'}\n            classPrefix={'faq'}\n            term={'results'}\n            query={new FAQQuery(searchString)}\n            renderResult={doc => <FaqResult result={doc} key={`answer-${doc.id}`}/>}\n        />\n    );\n}\n\nexport default FaqResults;","import React from 'react';\n\nfunction LibrarianResult({librarian}) {\n    const url = `http://libguides.bc.edu/prf.php?account_id=${librarian.id}`;\n    const img_url = `//${librarian.image}`;\n    const alt = `picture of ${librarian.name}`;\n    const display_subjects = librarian.subjects.sort().join(', ');\n\n\n    return <li className=\"media\">\n        <div className=\"media-left\">\n            <a href={url}><img src={img_url} alt={alt}/></a>\n        </div>\n\n        <div className=\"media-body\">\n            <h3 className=\"media-heading\">\n                <a href={url}>{librarian.name}</a>\n            </h3>\n            <p className=\"guide-description\">{display_subjects}</p>\n        </div>\n    </li>;\n}\n\nexport default LibrarianResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\n/**\n * Books and more query\n */\nclass LibrariansQuery {\n    gql;\n    object = 'recommendLibrarian';\n\n    constructor(searchString) {\n        this.gql = forLibrarians(searchString);\n    }\n}\n\nfunction forLibrarians(searchString) {\n    return gql`\n{\n  recommendLibrarian( keyword: \"${cleanGraphQLInput(searchString)}\") {\n    total\n    searchUrl\n    docs {\n      id\n      name\n      email\n      subjects\n      image\n    }\n  }\n}`;\n}\n\nexport {LibrariansQuery};","import React from 'react';\nimport LibrarianResult from \"./LibrarianResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {LibrariansQuery} from \"./LibrariansQuery\";\n\nfunction LibrarianResults({searchString, client}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Librarians'}\n            classPrefix={'librarian'}\n            term={'librarians'}\n            query={new LibrariansQuery(searchString)}\n            renderResult={doc => <LibrarianResult librarian={doc} key={`librarian-${doc.id}`}/>}\n        />\n    );\n}\n\nexport default LibrarianResults;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\nclass VideosQuery {\n    gql;\n    object = 'searchVideo'\n\n    constructor(searchString) {\n        this.gql = forVideos(searchString);\n    }}\n\n/**\n * Get query for videos\n *\n * This query is the same as for Books & More.\n *\n * @param searchString string\n * @return {*}\n */\nfunction forVideos(searchString) {\n    return gql`\n{\n  searchVideo( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    docs {\n      id,\n      title,\n      date,\n      type,\n      creator,\n      contributors,\n      coverImages { \n        url\n      },\n      available,\n      isPhysical,\n      isElectronic,\n      screenCap,\n      format,\n      mms,\n      holdings {\n        ilsId,\n        libraryCode,\n        locationDisplay,\n        locationCode,\n        availabilityStatus,\n        callNumber,\n        items {\n          availability,\n          locationCode,\n          location,\n          libraryDisplay,\n          library,\n          callNumber\n          }\n        }\n    },   \n    searchUrl,\n    didUMean,\n    total\n  }\n}`;\n}\n\nexport {VideosQuery};","import React from 'react';\nimport VideoResult from \"./VideoResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {VideosQuery} from \"./VideosQuery\";\n\n/**\n * Video results box\n *\n * @param searchString string The search string from user input\n * @param client object GraphQL client\n * @return {*}\n * @constructor\n */\nfunction VideoResults({searchString, client}) {\n    return <ResultsBoxContainer\n        client={client}\n        heading={'Videos'}\n        classPrefix={'videos'}\n        term={'videos'}\n        query={new VideosQuery(searchString)}\n        renderResult={doc => <VideoResult item={doc} key={`video-${doc.id}`}/>}\n    />\n}\n\nexport default VideoResults;","import React from 'react';\n\nfunction WebsiteResult({hit}) {\n    return <li className=\"website-hit\">\n        <h3 className=\"website-hit__title\">\n            <a href={hit.url}>{hit.title}</a>\n        </h3>\n        in <a href={hit.guideUrl} className=\"website-hit__guide-title\">{hit.guideTitle}</a>\n        <div className=\"website-hit__highlight\" dangerouslySetInnerHTML={getHighlight(hit)}/>\n    </li>\n}\n\nfunction getHighlight(hit) {\n    return {__html: hit.highlight[1]};\n}\n\nexport default WebsiteResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\n/**\n * Books and more query\n */\nclass WebsiteQuery {\n    gql;\n    object = 'searchWebsite';\n\n    constructor(searchString) {\n        this.gql = forWebsite(searchString);\n    }\n}\n\nfunction forWebsite(searchString) {\n    return gql`\n{\n  searchWebsite( keyword: \"${cleanGraphQLInput(searchString)}\") {\n    total\n    searchUrl\n    docs {\n      title\n      guideTitle\n      updated\n      url\n      guideUrl\n      fullTitle\n      highlight\n    }\n  }\n}`;\n}\n\nexport {WebsiteQuery};","import React from 'react';\nimport WebsiteResult from \"./WebsiteResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {WebsiteQuery} from \"./WebsiteQuery\";\n\nfunction WebsiteResults({searchString, client}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Our Website'}\n            classPrefix={'website'}\n            term={'results'}\n            query={new WebsiteQuery(searchString)}\n            renderResult={doc => <WebsiteResult hit={doc} key={`hit-${doc.url}`}/>}\n        />\n    );\n}\n\nexport default WebsiteResults;","/**\n * A linked fulltext response\n *\n * @property {string} source\n * @property {string} title\n * @property {string} doi\n * @property {string[]} authors\n * @property {string} containerTitle\n * @property {string} date\n * @property {string} issueInfo\n * @property {string} link\n */\nclass FullTextItem {\n    constructor(source) {\n        this.source = source;\n        this.title = null;\n        this.doi = null;\n        this.authors = [];\n        this.containerTitle = null;\n        this.date = null;\n        this.issueInfo = null;\n        this.link = null;\n    }\n}\n\nexport {FullTextItem};","import {FullTextItem} from \"./FullTextItem\";\n\n// For converting month numbers to strings.\nconst months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n];\n\n\n/**\n * Convert a Crossref response into a FullTextItem\n *\n * @param {object} crossrefData Crossref data from a BestBet lookup response\n * @return {FullTextItem}\n */\nfunction buildFulltextFromCrossref(crossrefData) {\n    const fullText = new FullTextItem('crossref');\n    fullText.title = crossrefData.titles[0];\n    fullText.doi = crossrefData.DOI;\n    fullText.authors = buildAuthors(crossrefData.authors);\n    fullText.containerTitle = buildContainerTitle(crossrefData.containerTitles);\n    fullText.date = crossrefData.publishedPrintDate.length > 0 ? buildDate(crossrefData.publishedPrintDate) : buildDate(crossrefData.publishedOnlineDate);\n    fullText.issueInfo = buildIssue(crossrefData.volume, crossrefData.issue, crossrefData.page);\n    return fullText\n}\n\n/**\n * Extract the journal title from Crossref containerTitles array\n *\n * @param {string[]} containerTitles\n * @return {null}\n */\nfunction buildContainerTitle(containerTitles) {\n    return containerTitles && containerTitles[0] ? containerTitles[0] : null;\n}\n\n/**\n * Convert Crossref date arrays to a human-readable date\n *\n * @param {int[]|null} dateData A date data field from Crossref\n * @return {string|null}\n */\nfunction buildDate(dateData) {\n\n    // No date? No date.\n    if (dateData === undefined) {\n        return '';\n    }\n\n    // Crossref dates are are made up of an array of 1-3 numbers: [year, month, day].\n    const datePartCount = dateData.length;\n\n    // No numbers? No date.\n    if (datePartCount === 0) {\n        return null;\n    }\n\n    // Just one number? It's a year.\n    const year = dateData[0];\n    if (datePartCount === 1) {\n        return `${year},`;\n    }\n\n    // Two numbers? Year and month.\n    const month = months[dateData[1] - 1];\n    if (datePartCount === 2) {\n        return `${month} ${year},`;\n    }\n\n    // Three numbers is a full date.\n    return `${month} ${year} ${dateData[2]},`;\n}\n\n/**\n * Build a human-readable statement describing the journal volume/issue/page range\n *\n * @param {string} volume\n * @param {string} issue\n * @param {string} page\n * @return {string}\n */\nfunction buildIssue(volume, issue, page) {\n    const issueInfo = [];\n\n    // Build \"volume (issue)\" component\n    if (volume && !issue) {\n        issueInfo.push(`${volume}`);\n    } else if (issue && !volume) {\n        issueInfo.push(`${issue}`);\n    } else if (volume && issue) {\n        issueInfo.push(`${volume} (${issue})`);\n    }\n\n    // Build pages component\n    if (page && page.includes('-')) {\n        issueInfo.push(`pp. ${page}`);\n    } else if (page) {\n        issueInfo.push(`p. ${page}`);\n    }\n\n    // If there are multiple components, join them with commas.\n    return issueInfo.join(', ');\n}\n\n/**\n * Convert Crossref authors array to \"Last, First\" format\n *\n * @param authors\n * @return {Array|*}\n */\nfunction buildAuthors(authors) {\n    if (authors === undefined || authors.length === 0) {\n        return [];\n    }\n    return authors.map(auth => `${auth.familyName}, ${auth.givenName}`);\n}\n\n\nexport {buildFulltextFromCrossref};","/**\n * A Best Bet we created (e.g. a database or LibAnswers response)\n *\n * @property {string} title\n * @property {string} displayText\n * @property {string} link\n */\nclass LocalBestBet {\n    constructor(bestBetResult) {\n        this.title = bestBetResult.title;\n        this.displayText = bestBetResult.displayText;\n        this.link = bestBetResult.link\n    }\n}\n\nexport {LocalBestBet};","import {buildFulltextFromCrossref} from \"./CrossrefFulltextBuilder\";\nimport {buildFulltextFromPCI} from \"./PCIFulltextBuilder\";\nimport {LocalBestBet} from \"./LocalBestBet\";\n\n/**\n * Decide what to return as a Top Result\n *\n * @param {object} bestBet\n * @param {object[]} articles\n * @param {string} searchString\n * @return {FullTextItem|LocalBestBet|null}\n */\nfunction decideBestBet(bestBet, articles, searchString) {\n\n    // Return local best bets (e.g. database, LibAnswers question, etc) first.\n    if (bestBet && bestBet.displayText) {\n        return new LocalBestBet(bestBet);\n    }\n\n    // If there is a fullText best bet and it is not a review, display it.\n    if (bestBet && bestBet.fullText && !doiIsReview(bestBet.fullText.crossRefData.DOI, articles)) {\n        const fullTextItem = buildFulltextFromCrossref(bestBet.fullText.crossRefData);\n        const libKey = bestBet.fullText.libKeyData;\n        fullTextItem.link = libKey.fullTextFile ? libKey.fullTextFile : libKey.contentLocation;\n        return fullTextItem;\n    }\n\n    // If there is an article from PCI that has fulltext and appears to be a match, display that.\n    if (articles) {\n    const articleHits = findArticleMatches(searchString, articles);\n    if (articleHits.length > 0) {\n        const fullTextItem = buildFulltextFromPCI(articleHits[0]);\n        const libKey = articleHits[0].libkeyAvailability;\n        fullTextItem.link = libKey.fullTextFile ? libKey.fullTextFile : libKey.contentLocation;\n        return fullTextItem;\n    }}\n\n    // No best bet.\n    return null;\n}\n\n\n/**\n * Is the DOI a review?\n *\n * @param {string} fullTextDOI\n * @param {Object[]} articleRecords\n * @param {string} articleRecords[].doi\n */\nfunction doiIsReview(fullTextDOI, articleRecords) {\n    articleRecords = articleRecords ? articleRecords : [];\n    let isReview = false;\n    fullTextDOI = fullTextDOI.toLowerCase();\n\n    // Is there any article that shares a DOI and is listed as a review?\n    articleRecords.forEach(article => {\n        const articleDOI = article.dOI ? article.dOI.toLowerCase() : '';\n        if (fullTextDOI === articleDOI && article.type === 'review') {\n            isReview = true;\n        }\n    });\n\n    return isReview;\n}\n\n/**\n * Build a list of PCI articles that match the search\n *\n * @param {string} searchString\n * @param {object[]} articleRecords\n * @param {string} articleRecords.title\n * @return {*}\n */\nfunction findArticleMatches(searchString, articleRecords) {\n    return articleRecords.filter(article => {\n\n        // Title must be long enough to definitively match.\n        const longEnough = article.title.length > 40;\n\n        // Title must match the search string exactly (minus spacing/capitalization)\n        const matchesSearchString = searchString.toLowerCase().trim() === article.title.toLowerCase().trim();\n\n        // Article must match all above and have a full text link to display.\n        return longEnough && matchesSearchString && hasFullText(article.libkeyAvailability);\n    });\n}\n\n/**\n * Can we find a file/page to link to?\n *\n * @param {object} libkeyAvailability Availability data from LibKey\n * @param {string} libkeyAvailability.fullTextFile Link to a LibKey PDF\n * @param {string} libkeyAvailability.contentLocation Link to the article page\n * @return {boolean}\n */\nfunction hasFullText(libkeyAvailability) {\n    if (! libkeyAvailability) {\n        return false;\n    }\n    return libkeyAvailability.fullTextFile !== '' || libkeyAvailability.contentLocation !== '';\n}\n\nexport {decideBestBet};","import {FullTextItem} from \"./FullTextItem\";\n\n/**\n * Convert a PCI response into a FullTextItem\n *\n * @param {object} article Article response from PCI\n * @return {FullTextItem}\n */\nfunction buildFulltextFromPCI(article) {\n    const fulltext = new FullTextItem('pci');\n    fulltext.title = article.title;\n    fulltext.doi = article.dOI;\n\n    // PCI creators list come in semi-colon-delimited string. Split it up and let the\n    // front-end component determine how to display authors.\n    fulltext.authors = article.creator ? article.creator.split('; ') : [];\n\n    fulltext.date = article.date;\n    fulltext.containerTitle = article.journalTitle.length > 0 ? article.journalTitle[0] : null;\n\n    // PCI's isPartOf is a mish-mash of journal title, volume, issue, and page information.\n    fulltext.issueInfo = article.isPartOf.length > 0 ? article.isPartOf[0] : null;\n\n    return fulltext;\n}\n\nexport {buildFulltextFromPCI};","import React from \"react\";\nimport {Logger} from \"../../Logger\";\n\n/**\n * Display a Best Bet we created (e.g. a database or LibAnswers response)\n *\n * @param {LocalBestBet} bestBet\n * @return {*}\n * @constructor\n */\nfunction LocalBestBetResult({bestBet}) {\n    Logger.info(`Local Best Bet Result displayed: ${bestBet.title}`);\n\n    function logClick() {\n        Logger.info(`Local Best Bet Result clicked: ${bestBet.title}`);\n    }\n\n    return (\n        <div className='best-bet-row'>\n            <h2 className='best-bet-row__heading'>Top result</h2>\n            <div className='best-bet-result'>\n                <h3 className='best-bet-result__title'>\n                    {\n                        bestBet.link ? (\n                            <a href={bestBet.link} onClick={logClick}>{bestBet.title}</a>\n                        ) : (\n                            <span>{bestBet.title}</span>\n                        )\n                    }\n                </h3>\n                <div dangerouslySetInnerHTML={{__html: bestBet.displayText}}/>\n            </div>\n        </div>\n    )\n}\n\nexport default LocalBestBetResult;","import React from \"react\";\nimport {Logger} from \"../../Logger\";\n\n/**\n * Display a linked fulltext response\n *\n * @param {FullTextItem} fullText\n * @return {*}\n * @constructor\n */\nfunction FullTextResult({fullText}) {\n    Logger.info(`FullText Best Bet Result displayed: ${fullText.title} ${fullText.doi}`);\n\n    function logClick() {\n        Logger.info(`FullText Best Bet Result clicked: ${fullText.title} ${fullText.doi}`);\n    }\n\n    return (\n        <div className='best-bet-row'>\n            <h2 className='best-bet-row__heading'>Top result</h2>\n            <div className='best-bet-result'>\n                <h3 className='best-bet-result__title'><a href={fullText.link} onClick={logClick}>{fullText.title}</a></h3>\n                <p className='best-bet-result__author'>\n                    {authorLine(fullText.authors)}\n                </p>\n                <p className='best-bet-result__publication'>\n                    {citationLine(fullText)}\n                </p>\n                <p className='best-bet-result__doi'>doi:{fullText.doi}</p>\n                <a href={fullText.link} className=\"pull-right btn btn-primary\">Read</a>\n            </div>\n        </div>\n    );\n}\n\n/**\n * Shorten long lists of authors and return as semi-colon delimited list\n *\n * @param {string[]} authors\n * @return {string}\n */\nfunction authorLine(authors) {\n    const originalLength = authors.length;\n    authors = authors.slice(0, 6);\n    if (originalLength > 6) {\n        authors.push('et. al.');\n    }\n    return authors.join('; ');\n}\n\n/**\n * Return journal, volume, issue, and page string\n *\n * @param {FullTextItem} fullText\n * @return {string}\n */\nfunction citationLine(fullText) {\n    // Primo Central smashes all of this info into one field. Crossref provides atomic\n    // fields.\n    return fullText.source === 'pci' ?\n        fullText.issueInfo :\n        `${fullText.containerTitle} ${fullText.date} ${fullText.issueInfo}`;\n}\n\nexport default FullTextResult;\n","import React from 'react';\nimport gql from \"graphql-tag\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\nimport {decideBestBet} from \"./decideBestBet\";\nimport {LocalBestBet} from \"./LocalBestBet\";\nimport LocalBestBetResult from \"./LocalBestBetResult\";\nimport {FullTextItem} from \"./FullTextItem\";\nimport FullTextResult from \"./FullTextResult\";\n\n/**\n * Find and show the appropriate best bet\n *\n * @param {string} searchString\n * @param {object} client Apollo client\n * @param {object[]} articleResults Array of article results from PCI\n * @return {null|*}\n * @constructor\n */\nfunction BestBetLookup({searchString, client, articleResults}) {\n    const {loading, error, data} = useQuery(forBestBets(searchString), {client});\n\n    // Don't display anything until we have both article results and best bet lookup results.\n    if (loading || error || !data || !articleResults) {\n        return null;\n    }\n\n    // Decide on a best bet from all available data.\n    const bestBet = decideBestBet(data.bestBet, articleResults, searchString);\n    if (bestBet instanceof LocalBestBet) {\n        return <LocalBestBetResult bestBet={bestBet}/>\n    } else if (bestBet instanceof FullTextItem) {\n        return (\n            <FullTextResult fullText={bestBet}/>\n        );\n    }\n\n    // Didn't find a best bet...\n    return null;\n}\n\n/**\n * Get query for Best Bets\n *\n * @param searchString\n */\nfunction forBestBets(searchString) {\n    return gql`\n{\n  bestBet( keyword: \"${cleanGraphQLInput(searchString)}\") {\n    id\n    title\n    ...on LocalBestBet {\n      displayText\n      link\n    }\n    ...on CitationBestBet {\n      fullText {\n        libKeyData {\n          fullTextFile,\n          browzineWebLink\n          contentLocation\n        }\n        crossRefData {\n          titles\n          DOI\n          authors {\n            givenName\n            familyName\n            sequence\n          }\n          containerTitles\n          volume\n          issue\n          page\n          publishedPrintDate\n        }\n      }\n    }\n  }\n}`\n}\n\nexport default BestBetLookup;","import React from 'react';\n\nfunction SkipToLink({target, label}) {\n\n    const handleClick = (event) => {\n        if (target.current) {\n            target.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start'\n            });\n        }\n    };\n\n    return <div><span className=\"link-to-results__skip_to_link\" onClick={handleClick}>{label}</span></div>;\n\n}\n\nexport default SkipToLink;","import React from 'react';\nimport SkipToLink from \"./SkipToLink\";\n\nfunction SkipToLinkBar({booksDiv, articlesDiv, faqDiv, librariansDiv, videoDiv, websiteDiv}) {\n    return (\n        <div className=\"row\">\n            <nav className=\"link-to-results col-md-8\">\n                <div className=\"link-to-results__skip-to\">Skip to:</div>\n                <SkipToLink target={booksDiv} label=\"Books & more\"/>\n                <SkipToLink target={articlesDiv} label=\"Articles\"/>\n                <SkipToLink target={faqDiv} label=\"FAQ\"/>\n                <SkipToLink target={librariansDiv} label=\"Librarians\"/>\n                <SkipToLink target={videoDiv} label=\"Video\"/>\n                <SkipToLink target={websiteDiv} label=\"Website\"/>\n            </nav>\n        </div>\n    );\n}\n\nexport {SkipToLinkBar};\n","import ApolloClient from 'apollo-boost';\nimport { IntrospectionFragmentMatcher } from 'apollo-cache-inmemory';\nimport introspectionQueryResultData from './fragmentTypes.json';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\n\n// Using GraphQL fragments (in Best Bet lookup) requires a local schema file.\nconst fragmentMatcher = new IntrospectionFragmentMatcher({\n    introspectionQueryResultData\n});\n\nconst cache = new InMemoryCache({ fragmentMatcher });\n\nconst apolloClient = new ApolloClient({\n    cache,\n    uri: process.env.REACT_APP_GRAPHQL_ENDPOINT,\n    link: new HttpLink()\n});\n\nexport {apolloClient};","import React from 'react';\nimport ErrorBox from \"./ErrorBox\";\nimport {Logger} from \"../Logger\";\n\nclass SearchComponentErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {hasError: false};\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.error(error);\n        console.error(errorInfo);\n        Logger.error(`${error.message}: ${errorInfo.componentStack}`);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <ErrorBox heading={'Error'}/>\n        }\n\n        return this.props.children;\n    }\n\n}\n\nexport default SearchComponentErrorBoundary;","export default __webpack_public_path__ + \"static/media/icon_archives.9b4cb17a.svg\";","import React from 'react';\nimport FindingAidIcon from './icon_archives.svg';\n\nfunction FindingAidLink({url}) {\n    return <div className=\"finding-aid-link\">\n        <img src={FindingAidIcon} className=\"finding-aid-link__icon\" alt=\"\"/>\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            Finding aid\n            <i className=\"fa fa-external-link\" aria-hidden=\"true\"/>\n        </a>\n    </div>\n\n}\n\nexport default FindingAidLink;","import React from 'react';\nimport VideoResult from \"../video/VideoResult\";\nimport {PrimoRecordLink} from \"../PrimoRecordLink\";\nimport AvailabilityContainer from \"../availability/AvailabilityContainer\";\nimport HathiTrustLink from \"./HathiTrustLink\";\nimport FindingAidLink from \"./FindingAidLink\";\nimport FindingAidIcon from \"./icon_archives.svg\";\nimport CoverImage from \"../CoverImage\";\nimport GetItLink from \"../GetItLink\";\nimport {getDisplayCreator} from \"../getDisplayCreator\";\n\nfunction BookResult({item}) {\n    if (item.isElectronic && item.type === 'Video') {\n        return <VideoResult item={item} inCatalogResult={true}/>;\n    }\n\n    const link = PrimoRecordLink(item);\n\n    return <li className=\"catalog-result-item media\">\n\n        <div className=\"media-body\">\n            <h3 className=\"catalog-result-item__media-heading media-heading\">\n                <a href={link} className=\"catalog-result-item__title\">\n                    {item.title}\n                </a>\n            </h3>\n\n            <div className=\"catalog-result-item__creator\">{getDisplayCreator(item)}</div>\n\n            <div className=\"catalog-result-item__publisher\">\n                {item.publisher} {item.date}\n            </div>\n\n            <div className=\"catalog-result-item__type\">{item.type}</div>\n\n            {item.isElectronic && <GetItLink url={link}/>}\n\n            {item.isPhysical && <AvailabilityContainer item={item}/>}\n\n            {item.hathitrustUrl && <HathiTrustLink url={item.hathitrustUrl}/>}\n\n            {hasFindingAid(item) && <FindingAidLink url={item.linkToFindingAid.url}/>}\n\n        </div>\n\n        {getThumbnail(item, link)}\n\n    </li>\n}\n\n/**\n * Determine what thumbnail to use\n *\n * @param item\n * @return {null|*}\n */\nfunction getThumbnail(item, link) {\n\n    // Is there a cover image? Use that.\n    if (item.coverImages.length > 1) {\n        return <CoverImage imageUrl={item.coverImages[0].url} itemUrl={link}/>;\n    }\n\n    // If it's a finding aid, use the finding aid icon.\n    if (hasFindingAid(item, link)) {\n        return <CoverImage imageUrl={FindingAidIcon} itemUrl={link} specialClass={\"finding-aid-thumb\"}/>;\n    }\n\n    // Otherwise nothing.\n    return null;\n}\n\n/**\n * Is this thing a finding aid?\n *\n * @param item\n * @return {boolean}\n */\nfunction hasFindingAid(item) {\n    return Boolean(item.linkToFindingAid && item.linkToFindingAid.url);\n}\n\nexport default BookResult;","import gql from \"graphql-tag\";\nimport {cleanGraphQLInput} from \"../cleanGraphQLInput\";\n\n/**\n * Books and more query\n */\nclass BooksAndMoreQuery {\n    gql;\n    object = 'searchCatalog';\n\n    constructor(searchString) {\n        this.gql = forBooksAndMore(searchString);\n    }\n}\n\nfunction forBooksAndMore(searchString) {\n    return gql`\n{\n  searchCatalog( keyword: \"${cleanGraphQLInput(searchString)}\", limit: 3) {\n    docs {\n      id,\n      title,\n      date,\n      type,\n      creator,\n      contributors,\n      coverImages { \n        url\n      },\n      available,\n      hathitrustUrl,\n      linkToFindingAid {\n        url\n      },\n      isPhysical,\n      isElectronic,\n      screenCap,\n      mms,\n      holdings {\n        ilsId,\n        libraryCode,\n        locationDisplay,\n        locationCode,\n        availabilityStatus,\n        callNumber,\n        items {\n          availability,\n          locationCode,\n          location,\n          libraryDisplay,\n          library,\n          callNumber\n          }\n        }\n    },   \n    searchUrl,\n    didUMean,\n    total\n  }\n}`;\n}\n\nexport {BooksAndMoreQuery};","import React from 'react';\nimport BookResult from \"./BookResult\";\nimport ResultsBoxContainer from \"../ResultsBoxContainer\";\nimport {BooksAndMoreQuery} from \"./BooksAndMoreQuery\";\n\n/**\n * Book results box\n *\n * @param searchString string The search string from user input\n * @param client object GraphQL client\n * @param toggle\n * @return {*}\n * @constructor\n */\nfunction BookResults({searchString, client, toggle}) {\n    return (\n        <ResultsBoxContainer\n            client={client}\n            heading={'Books & more'}\n            classPrefix={'books'}\n            term={'items'}\n            query={new BooksAndMoreQuery(searchString)}\n            renderResult={doc => <BookResult item={doc} key={`book-${doc.id}`}/>}\n            noResultsContent={noResultContent(searchString)}\n            modifier={toggle}\n        />\n    );\n}\n\nfunction noResultContent(searchString) {\n    const encodedSearchString = encodeURIComponent(searchString);\n    const worldCatSearchURL = `https://bc.on.worldcat.org/search?databaseList=&queryString=${encodedSearchString}`;\n\n    return (\n        <div className=\"catalog-no-results-box\">\n            <p>There are no results matching your search.</p>\n            <p className=\"catalog-no-results-box__worldcat-advice\">\n                Try your search in <a href={worldCatSearchURL}>WorldCat</a> for results beyond BC Libraries.\n            </p>\n        </div>\n    );\n}\n\nexport default BookResults;","import React, {useState} from 'react';\n\nfunction CatalogToggle({isChecked, handleToggle}) {\n\n    const [isDisplayed, setIsDisplayed] = useState(false);\n\n    function toggleDisplay() {\n        setIsDisplayed(!isDisplayed);\n    }\n\n    const explanationClass = isDisplayed ? 'catalog-toggle__explanation-displayed' : 'catalog-toggle__explanation-hidden';\n\n    return (\n        <div className=\"catalog-toggle\">\n            <div className=\"catalog-toggle__input-group\">\n                <label className=\"catalog-toggle__label\">\n                    <input\n                        type=\"checkbox\"\n                        checked={isChecked}\n                        onChange={handleToggle}\n                    /> Limit to online content\n                </label>\n                <span className=\"catalog-toggle__help-link\" onClick={toggleDisplay}>what's this?</span>\n            </div>\n            <div className={explanationClass}>\n                When this box is checked, search is limited to items available online. Uncheck the box to include our physical collections.\n            </div>\n        </div>\n    );\n}\n\nexport default CatalogToggle;","import {useCallback, useState} from 'react';\n\nfunction useQueryString(key, initialValue) {\n    const [value, setValue] = useState(getQueryStringValue(key) || initialValue);\n\n    const onSetValue = useCallback(\n        newValue => {\n            setValue(newValue);\n            if (newValue === 'true') {\n                setQueryStringValue(key, newValue);\n            } else {\n                deleteQueryStringValue(key);\n            }\n        },\n        [key]\n    );\n\n    return [value, onSetValue];\n}\n\n/**\n * Get a query string value\n *\n * @param key\n * @return {string}\n */\nfunction getQueryStringValue(key) {\n    const queryStringHash = parseQueryString();\n\n    if (queryStringHash.keys.indexOf(key) === -1) {\n        return 'false';\n    }\n\n    return decodeURIComponent(queryStringHash.parameters[key]);\n}\n\n/**\n * Set a value on the query string and push to history\n *\n * @param key\n * @param value\n */\nfunction setQueryStringValue(key, value) {\n\n    const queryHash = parseQueryString();\n    queryHash.parameters[key] = encodeURIComponent(value);\n\n    // If the key isn't present, add it?\n    if (queryHash.keys.indexOf(key) === -1) {\n        queryHash.keys.push(key);\n    }\n    replaceState(queryHash);\n}\n\n/**\n * Set a value on the query string and push to history\n *\n * @param key\n * @param value\n */\nfunction deleteQueryStringValue(key) {\n\n    const queryHash = parseQueryString();\n\n    const index = queryHash.keys.indexOf(key);\n\n    // Delete from the key hash.\n    if (index > -1) {\n        queryHash.keys.splice(index, 1);\n        delete queryHash.parameters['key'];\n    }\n\n    replaceState(queryHash);\n}\n\n\n/**\n * Get an object representing the query string\n *\n * @return {{keys: [], parameters: {}}}\n */\nfunction parseQueryString() {\n\n    // Store parameters in a hash for retrieval. Store keys in an array\n    // to maintain ordering.\n    let queryHash = {\n        parameters: {},\n        keys: []\n    };\n\n\n    const queryStringItems = window.location.search.split('&');\n    for (let i = 0; i < queryStringItems.length; i++) {\n        const [key, val] = queryStringItems[i].split('=');\n        queryHash.parameters[key] = val;\n        queryHash.keys.push(key);\n    }\n\n    return queryHash;\n}\n\nfunction replaceState(queryHash) {\n    const queryStringParts = [];\n    for (let i = 0; i < queryHash.keys.length; i++) {\n        const currentKey = queryHash.keys[i];\n        queryStringParts.push(currentKey + '=' + queryHash.parameters[currentKey]);\n    }\n\n    const newURL = window.location.protocol + \"//\" +\n        window.location.host +\n        window.location.pathname +\n        queryStringParts.join('&');\n    window.history.replaceState({path: newURL}, '', newURL);\n}\n\nexport default useQueryString;","import React, {useRef, useState} from 'react';\nimport OnlineResults from \"./slots/online/OnlineResults\";\nimport ArticleResults from \"./slots/articles/ArticleResults\";\nimport FaqResults from \"./slots/faq/FaqResults\";\nimport LibrarianResults from \"./slots/librarians/LibrarianResults\";\nimport VideoResults from \"./slots/video/VideoResults\";\nimport WebsiteResults from \"./slots/website/WebsiteResults\";\nimport BestBetLookup from \"./slots/bestbets/BestBetLookup\";\nimport {SkipToLinkBar} from \"./SkipToLinkBar\";\nimport {apolloClient} from \"./ApolloClientFactory\";\nimport SearchComponentErrorBoundary from \"./slots/SearchComponentErrorBoundary\";\nimport BookResults from \"./slots/books/BookResults\";\nimport CatalogToggle from \"./slots/CatalogToggle\";\nimport useQueryString from \"./useQueryString\";\n\nfunction SearchResults({searchString}) {\n\n    // Store article results state here to share with BestBetLookup.\n    const [articleResults, setArticleResults] = useState([]);\n    const [isOnlineOnlyString, onSetIsOnlineOnly] = useQueryString('online');\n\n    const isOnlineOnlyBoolean = isOnlineOnlyString === 'true';\n\n    function handleOnlineOnlyToggle() {\n        onSetIsOnlineOnly(! isOnlineOnlyBoolean);\n        if (isOnlineOnlyBoolean) {\n            onSetIsOnlineOnly('false');\n        } else {\n            onSetIsOnlineOnly('true');\n        }\n    }\n\n    // Get references to search result boxes for linking in the skip to bar.\n    const refList = {\n        booksDiv: useRef(null),\n        articlesDiv: useRef(null),\n        faqDiv: useRef(null),\n        librariansDiv: useRef(null),\n        videoDiv: useRef(null),\n        websiteDiv: useRef(null),\n    };\n\n    const resultBoxParams = {searchString, client: apolloClient};\n    const catalogToggle = <CatalogToggle handleToggle={handleOnlineOnlyToggle} isChecked={isOnlineOnlyBoolean} />;\n\n    return (\n        <div>\n            <SkipToLinkBar {...refList} />\n\n            <div className=\"bento-results\">\n                <SearchComponentErrorBoundary>\n                    <BestBetLookup {...resultBoxParams} articleResults={articleResults}/>\n                </SearchComponentErrorBoundary>\n\n                <div className=\"results-row-1 row\">\n                    <div className=\"col-md-5 col-sm-12\" ref={refList.booksDiv}>\n                        <SearchComponentErrorBoundary>\n                            {isOnlineOnlyBoolean ?\n                                <OnlineResults {...resultBoxParams} toggle={catalogToggle}/> :\n                                <BookResults {...resultBoxParams} toggle={catalogToggle} />\n                            }\n                        </SearchComponentErrorBoundary>\n                    </div>\n                    <div className=\"col-md-5 col-md-offset-1 col-sm-12\" ref={refList.articlesDiv}>\n                        <SearchComponentErrorBoundary>\n                            <ArticleResults {...resultBoxParams} handleFetch={setArticleResults}/>\n                        </SearchComponentErrorBoundary>\n                    </div>\n                </div>\n\n                <div className=\"results-row-2 row\" ref={refList.faqDiv}>\n                    <div className=\"col-md-7\">\n                        <SearchComponentErrorBoundary>\n                            <FaqResults {...resultBoxParams}/>\n                        </SearchComponentErrorBoundary>\n                    </div>\n                    <div className=\"col-md-4 col-md-offset-1\" ref={refList.librariansDiv}>\n                        <SearchComponentErrorBoundary>\n                            <LibrarianResults  {...resultBoxParams}/>\n                        </SearchComponentErrorBoundary>\n                    </div>\n                </div>\n\n                <div className=\"results-row-3 row\" ref={refList.videoDiv}>\n                    <div className=\"col-md-12\">\n                        <SearchComponentErrorBoundary>\n                            <VideoResults {...resultBoxParams}/>\n                        </SearchComponentErrorBoundary>\n                    </div>\n                </div>\n\n                <div className=\"results-row-4 row\" ref={refList.websiteDiv}>\n                    <div className=\"col-md-12\">\n                        <SearchComponentErrorBoundary>\n                            <WebsiteResults {...resultBoxParams}/>\n                        </SearchComponentErrorBoundary>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchResults;","import React from 'react';\n\nfunction BlankSearchScreen() {\n    return (\n        <div className=\"blank-search-screen\">\n            <div className=\"blank-search-screen__explanation\">\n                Search for just about anything in or about the Libraries.\n            </div>\n        </div>\n    );\n}\n\nexport default BlankSearchScreen;","import React from 'react';\nimport SearchResults from \"./SearchResults\";\nimport BlankSearchScreen from \"./slots/BlankSearchScreen\";\n\nconst Results = props => {\n    return <SearchResults searchString={props.searchString}/>;\n};\n\nconst MemoizedResults = React.memo(Results);\n\nfunction App({searchBox, searchString}) {\n    return (\n        <div className=\"bento-results-page\">\n            <h1 className=\"sr-only sr-only-focusable\" id=\"main-heading\">Search the library</h1>\n            <form method=\"get\" action={window.location.pathname} className=\"bento-search-box\">\n                {searchBox}\n                <button className=\"btn btn-default\" type=\"submit\">\n                    <i className=\"fa fa-search\" aria-hidden=\"true\"/>\n                    <span className=\"search-button-text\">Search</span>\n                </button>\n            </form>\n            {searchString ? <MemoizedResults searchString={searchString}/> : <BlankSearchScreen/>}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport Autosuggest from \"react-autosuggest\";\n\n/**\n * Render the search box and the  list of typeahead suggestions\n *\n * @param searchBoxId\n * @param suggestions\n * @param fetchSuggestions\n * @param clearSuggestions\n * @param onSuggestionSelected\n * @param inputProps\n * @return {*}\n * @constructor\n */\nfunction SearchBox({searchBoxId, suggestions, fetchSuggestions, clearSuggestions, onSuggestionSelected, inputProps}) {\n\n    // A display a single suggestion.\n    const renderSuggestion = suggestion => (\n        <div className=\"search-suggestion\">\n            {suggestion.value}\n        </div>\n    );\n\n    return (\n        <div className=\"bcbento-search-box\">\n            <label htmlFor={searchBoxId} className=\"bcbento-search-box__input-label sr-only\">\n                Enter a search term please\n            </label>\n            <Autosuggest suggestions={suggestions}\n                         getSuggestionValue={suggestion => suggestion.value}\n                         onSuggestionsFetchRequested={fetchSuggestions}\n                         onSuggestionsClearRequested={clearSuggestions}\n                         renderSuggestion={renderSuggestion}\n                         onSuggestionSelected={onSuggestionSelected}\n                         inputProps={inputProps}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\n/**\n *\n * @param {string} searchBoxId ID element for the search box\n * @param {function} onTyping Called when a character is entered\n * @param {string} value The search string\n * @param {function} setHasFocus Pass focus status up\n * @return {*}\n * @constructor\n */\nfunction LargeSearchBox({searchBoxId, onTyping, value, setHasFocus}) {\n    function handleChange(event) {\n        onTyping(event, {newValue: event.target.value, method: 'nomethod'});\n    }\n\n    function onFocus(event) {\n        event.target.selectionStart = value.length;\n        setHasFocus(true);\n    }\n\n    function onBlur(event) {\n        setHasFocus(false);\n    }\n\n    return (\n        <textarea\n            id={searchBoxId}\n            value={value}\n            onChange={handleChange}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            name=\"any\"\n            autoFocus\n        />\n    );\n}\n\nexport default LargeSearchBox;","import React, {useState} from 'react';\nimport SearchBox from './SearchBox';\nimport LargeSearchBox from \"./LargeSearchBox\";\nimport {CSSTransition} from \"react-transition-group\";\nimport {Logger} from \"../Logger\";\n\n// Minimum length of input string before typeahead is activated.\nconst minTypeaheadLength = 3;\n\n// How big should a text input be before enlarging the search box?\nconst minLargeSearchBoxLength = 50;\n\n// Id of the search box <input> element.\nconst searchBoxId = 'bento-search-box__search-input';\n\n// Called when a suggestion in the typeahead box is selected. Redirects page to\n// new search with the selected value as keyword.\nfunction onSuggestionSelected(event, {suggestion, suggestionValue, suggestionIndex, sectionIndex, method}) {\n    if (suggestionValue) {\n        const url = window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/\\/$/, \"\");\n        window.location.href = `${url}?any=${suggestionValue}`;\n    }\n}\n\n/**\n * Controls search box and typeahead\n *\n * @param handleTyping\n * @param searchString\n * @param onSubmit\n * @return {*}\n * @constructor\n */\nfunction SearchBoxContainer({handleTyping, searchString, onSubmit}) {\n\n    // suggestions is an array of suggestions, each with the format:\n    //     {\n    //         value: 'Text of suggestion',\n    //         score: 15\n    //     }\n    // Where value is the text of the suggestion and score is the score\n    // assigned by ElasticSearch\n    const [suggestions, setSuggestions] = useState([]);\n\n    // value is the text value of the search box <input> element.\n    const [value, setValue] = useState(searchString);\n\n    // Does the searchbox have user focus?\n    const [hasFocus, setHasFocus] = useState(!value);\n\n    // Use text area when input is long.\n    const useTextArea = value.length >= minLargeSearchBoxLength;\n\n    // Tipping point for transition animation. Should be one character larger than text area threshold for\n    // smooth animation.\n    const useLarge = value.length >= minLargeSearchBoxLength;\n\n    // Called after each keypress in the typeahead box.\n    const onTyping = (event, {newValue, method}) => {\n        if (method === 'enter') {\n            onSubmit();\n        } else {\n            setValue(newValue);\n            handleTyping(newValue);\n        }\n    };\n\n    // Called to fetch suggestions from server.\n    async function fetchSuggestions({value, reason}) {\n\n        // Don't fetch suggestions if there isn't enough input or if the input action was not\n        // actually typing.\n        if (value.length < minTypeaheadLength || reason === 'input-focused') {\n            return;\n        }\n\n        // Fetch.\n        const url = `https://library.bc.edu/search-services/typeahead?any=${value}`;\n        let json = [];\n\n        try {\n            const response = await fetch(url);\n            json = await response.json();\n        } catch (err) {\n            Logger.error(`Error fetching suggestions for ${value}`);\n\n            // Don't fail on error, just don't return a suggestions.\n            json = []\n        }\n        setSuggestions(json);\n    }\n\n    // Called to empty suggestions (e.g. after pressing escape).\n    function clearSuggestions() {\n        setSuggestions([]);\n    }\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n        placeholder: 'Search for books, articles, journals, databases',\n        value,\n        onChange: onTyping,\n        name: 'any',\n        id: searchBoxId,\n        autoFocus: hasFocus,\n        onFocus: event => setHasFocus(true),\n        onBlur: event => setHasFocus(false)\n    };\n\n    const smallBoxProps = {\n        searchBoxId,\n        suggestions,\n        fetchSuggestions,\n        clearSuggestions,\n        onSuggestionSelected,\n        inputProps\n    };\n\n    const largeBoxProps = {\n        onTyping,\n        searchBoxId,\n        value,\n        setHasFocus\n    };\n\n    const searchBox = useTextArea ? <LargeSearchBox {...largeBoxProps}/> : <SearchBox {...smallBoxProps} />;\n\n    return <CSSTransition\n        in={useLarge}\n        timeout={200}\n        classNames=\"searchbox-animate\">\n        {searchBox}\n    </CSSTransition>\n}\n\nexport default SearchBoxContainer;","import React, {useState} from 'react';\nimport App from \"./App\";\nimport SearchBoxContainer from './searchbox/SearchBoxContainer';\nimport 'airbnb-js-shims';\n\nfunction AppContainer() {\n    // On page load, grab search string from URL 'any' GET parameter.\n    const initialSearchString = getUrlParameter('any');\n    setPageTitle(initialSearchString);\n\n    // searchString is the text to be searched for.\n    const [searchString, setSearchString] = useState(initialSearchString);\n\n    // inputText is the text currently in the search box.\n    const [inputText, setInputText] = useState('');\n    const handleTyping = value => setInputText(value);\n\n    // Handle page submits without reloads. Currently all submits have reloads, but this\n    // will eventually be enabled for efficiency.\n    const handleSubmit = () => {\n        setSearchString(inputText);\n        setPageTitle(searchString);\n    };\n\n    const searchBox = <SearchBoxContainer searchString={searchString}\n                                          handleTyping={handleTyping}\n                                          handleSubmit={handleSubmit}/>;\n\n    return <App searchBox={searchBox} searchString={searchString}/>;\n}\n\nfunction setPageTitle(searchString) {\n    document.title = searchString ? `Search - ${searchString}` : 'Search';\n}\n\n/**\n * Return a GET parameter from a URL query string\n *\n * @param name\n * @return {string}\n */\nfunction getUrlParameter(name) {\n    name = name.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n    const regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n    const results = regex.exec(window.location.search);\n    return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\n\nexport default AppContainer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './AppContainer';\nimport * as serviceWorker from './serviceWorker';\n\nconsole.log('something happened');\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}